{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "The Jamstack Book is a comprehensive, hands-on guide to developing standards-based static websites using JavaScript, APIs, and standard HTML markup Building websites with simple, straightforward standards can feel like a breath of fresh air. Jamstack sites use JavaScript, APIs, and Markup to create fast, dynamic pages without the overhead of heavyweight frameworks. The Jamstack Book is your essential guide to this exciting new web architecture. The Jamstack Book is a comprehensive, hands-on guide to developing standards-based static websites using JavaScript, APIs, and standard HTML markup. In each chapter, you’ll build a new project, creating a portfolio of Jamstack-architecture sites that range from a simple blog to an eCommerce store. You’ll learn how to lay out and generate a site, deploy to the cloud, and add dynamic features like user logins and search functionality. Along the way, you’ll try out a variety of lightweight tools, including Hugo, Jekyll, Eleventy, and Netlify. By the time you’re finished, you’ll be ready to build fast and secure static sites and migrate your existing websites to Jamstack! Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.<br><blockquote>The Jamstack Book is your essential guide to this exciting new web architecture. The Jamstack Book is a comprehensive, hands-on guide to developing standards-based static websites using JavaScript, APIs, and standard HTML markup.</blockquote>",
            "url": "http://books.google.com/books?id=CQddzgEACAAJ&dq=JavaScript&hl=&cd=1&source=gbs_api",
            "title": "The Jamstack Book",
            "summary": "The Jamstack Book is a comprehensive, hands-on guide to developing standards-based static websites using JavaScript, APIs, and standard HTML markup Building websites with simple, straightforward standards can feel like a breath of fresh air. Jamstack sites use JavaScript, APIs, and Markup to create fast, dynamic pages without the overhead of heavyweight frameworks. The Jamstack Book is your essential guide to this exciting new web architecture. The Jamstack Book is a comprehensive, hands-on guide to developing standards-based static websites using JavaScript, APIs, and standard HTML markup. In each chapter, you’ll build a new project, creating a portfolio of Jamstack-architecture sites that range from a simple blog to an eCommerce store. You’ll learn how to lay out and generate a site, deploy to the cloud, and add dynamic features like user logins and search functionality. Along the way, you’ll try out a variety of lightweight tools, including Hugo, Jekyll, Eleventy, and Netlify. By the time you’re finished, you’ll be ready to build fast and secure static sites and migrate your existing websites to Jamstack! Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.",
            "image": "http://books.google.com/books/content?id=CQddzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-10-26T00:00:00.000Z"
        },
        {
            "content_html": "This book if for absolute beginners, and it is an introduction to the major components of javascript. By learning the bigger things in Javascript, you will be able to know how to put the remaining pieces together and will be able to get into advanced books more prepared. WHAT IS JAVASCRIPT? JavaScript is one of the most popular programming languages in the world, and growing faster than any other programming language. As a developer, you can use JavaScript to build web and mobile apps, real-time networking apps, command-line tools, and games. 4 REASONS TO LEARN JAVASCRIPT JavaScript is a key tool for front-end, back-end, and full-stack developers. The average annual salary for a JavaScript developer is $72,000. Companies like Walmart, Netflix, and PayPal run big internal applications around JavaScript. Having strong JavaScript knowledge will help you land your dream job. Who this book is for: This book is meant for absolute beginners of Javascript This book is meant for students that struggled to learn the language before This book is meant for students with a little HTML knowledge<br><blockquote>This book if for absolute beginners, and it is an introduction to the major components of javascript.</blockquote>",
            "url": "http://books.google.com/books?id=z7D2DwAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=2&source=gbs_api",
            "title": "2021 JavaScript Programming for Beginners",
            "summary": "This book if for absolute beginners, and it is an introduction to the major components of javascript. By learning the bigger things in Javascript, you will be able to know how to put the remaining pieces together and will be able to get into advanced books more prepared. WHAT IS JAVASCRIPT? JavaScript is one of the most popular programming languages in the world, and growing faster than any other programming language. As a developer, you can use JavaScript to build web and mobile apps, real-time networking apps, command-line tools, and games. 4 REASONS TO LEARN JAVASCRIPT JavaScript is a key tool for front-end, back-end, and full-stack developers. The average annual salary for a JavaScript developer is $72,000. Companies like Walmart, Netflix, and PayPal run big internal applications around JavaScript. Having strong JavaScript knowledge will help you land your dream job. Who this book is for: This book is meant for absolute beginners of Javascript This book is meant for students that struggled to learn the language before This book is meant for students with a little HTML knowledge",
            "image": "http://books.google.com/books/content?id=z7D2DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-01-09T00:00:00.000Z"
        },
        {
            "content_html": "Improve the user experience for your Rails app with rich, engaging client-side interactions. Learn to use the Rails 6 tools and simplify the complex JavaScript ecosystem. It's easier than ever to build user interactions with the Webpacker gem and Stimulus. You can add great front-end flair without much extra complication. Add React to build an even more extensive set of client-side features. Structure your code for different levels of client-side needs with these powerful options. Add to your toolkit today! It's hard to have a Rails application without integrating some client-side logic. But client-side coding tools, and the Rails tools for integrating with them, all change continuously. Rails 6 simplifies client-side integration with the Webpacker gem. It's the default tool for building client-side assets for use by web browsers. Learn how to use Rails 6 and Webpacker to build rich front-end logic into your Rails applications. The job is even easier with Stimulus, a library that brings Rails conventions to JavaScript tools. Add in some React, a popular framework that automatically updates the browser when your data changes. Learn the basics of webpack, Webpacker, and TypeScript, and add pizazz to your application. Structure your web application to best manage your state. Learn how to interact with data on the server while still keeping the user experience interactive. Use the type system in TypeScript to expand on JavaScript and help prevent error conditions. Debug and test your front-end application with tools specific to each framework. There are a lot of ways to do client-side coding, and Rails is here to help. What You Need: This book requires Ruby on Rails 6.0+, React 16.8.0+. Other dependencies will be added by Rails.<br><blockquote>Debug and test your front-end application with tools specific to each framework. There are a lot of ways to do client-side coding, and Rails is here to help. What You Need: This book requires Ruby on Rails 6.0+, React 16.8.0+.</blockquote>",
            "url": "http://books.google.com/books?id=J5UjywEACAAJ&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "Modern Front-End Development for Rails",
            "summary": "Improve the user experience for your Rails app with rich, engaging client-side interactions. Learn to use the Rails 6 tools and simplify the complex JavaScript ecosystem. It's easier than ever to build user interactions with the Webpacker gem and Stimulus. You can add great front-end flair without much extra complication. Add React to build an even more extensive set of client-side features. Structure your code for different levels of client-side needs with these powerful options. Add to your toolkit today! It's hard to have a Rails application without integrating some client-side logic. But client-side coding tools, and the Rails tools for integrating with them, all change continuously. Rails 6 simplifies client-side integration with the Webpacker gem. It's the default tool for building client-side assets for use by web browsers. Learn how to use Rails 6 and Webpacker to build rich front-end logic into your Rails applications. The job is even easier with Stimulus, a library that brings Rails conventions to JavaScript tools. Add in some React, a popular framework that automatically updates the browser when your data changes. Learn the basics of webpack, Webpacker, and TypeScript, and add pizazz to your application. Structure your web application to best manage your state. Learn how to interact with data on the server while still keeping the user experience interactive. Use the type system in TypeScript to expand on JavaScript and help prevent error conditions. Debug and test your front-end application with tools specific to each framework. There are a lot of ways to do client-side coding, and Rails is here to help. What You Need: This book requires Ruby on Rails 6.0+, React 16.8.0+. Other dependencies will be added by Rails.",
            "image": "http://books.google.com/books/content?id=J5UjywEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-05-26T00:00:00.000Z"
        },
        {
            "content_html": "What to learn how to develop Desktop Apps like Web Browsers, PDF readers, Office Suites, etc.? Anyone can learn to do that easily, you just need the right framework to pair with the programming language of your choice! If you're interested in developing software for a diverse range of computers and operating systems, including Microsoft Windows 7, 8, 8.1, 10, MacOS, and Linux based operating systems like Ubuntu, Fedora, Arch Linux, etc. then electron is the right choice of framework for you. Learning Electron is a journey comprised of getting to know it's workflow, APIs, etc. Its easy enough to be learned just by reading Electron's documentation, however, if you wish to master the full power of Electron, you need to use it with all it's advanced features, complementing Electron-userland programs, and Typescript; This book can be used to assist you in your journey to learn and master desktop software development, and help you avoid the heartache that comes with the steep learning curve of Electron at it's full power.What you can find inside this book: You will find the fundamentals of HTML, CSS, JavaScript, DOM, ES6, and Electron, so you can easily get acquainted with it even if you have never used Electron or NodeJS before. The basics are thorough and dense in print, so even if you are an intermediate or advanced user, you can learn stuff you may have never seen before. Advanced features like Data-type Prejudice, Class Based OOP, Scaffolding, Boilerplate code, Crash Report handling, Working with I/O devices, Debugging, Testing, etc. are covered for intermediate and Advanced users. Heavy attention has been given to the practicals, demonstrations, and code narrations. Advanced coding practices are covered, and a wide range of alternatives and suggestions are provided to improve your overall experience with Electron and JavaScript. The lessons are presented in a way that enhances the learning experience when the book is used as a self-learning material. The explanations and code narrations are provide in a way that assists rote learning, if the need ever arises! The past and future of Desktop Applications is discussed at length, and an entire chapter is provided to inspire and inform readers who are interested in applying Electron and JavaScript to Artificial Intelligence, Machine Learning, Internet of Things, etc. Instructions are given to use Electron with both JavaScript and TypeScript. Instructions are given to extend your journey to program and develop using Electron beyond this book. A lot of informative material is provided to get you acquainted with the Electron-userland. This book will take care of all your Electron related needs! It will teach you all you need to learn, and it will tell you all you need to know! This book will make you fall in love with Electron and JavaScript; you will be able to develop Desktop Applications before you know it!<br><blockquote>It will teach you all you need to learn, and it will tell you all you need to know! This book will make you fall in love with Electron and JavaScript; you will be able to develop Desktop Applications before you know it!</blockquote>",
            "url": "http://books.google.com/books?id=AWEfzgEACAAJ&dq=JavaScript&hl=&cd=4&source=gbs_api",
            "title": "Simply Electron",
            "summary": "What to learn how to develop Desktop Apps like Web Browsers, PDF readers, Office Suites, etc.? Anyone can learn to do that easily, you just need the right framework to pair with the programming language of your choice! If you're interested in developing software for a diverse range of computers and operating systems, including Microsoft Windows 7, 8, 8.1, 10, MacOS, and Linux based operating systems like Ubuntu, Fedora, Arch Linux, etc. then electron is the right choice of framework for you. Learning Electron is a journey comprised of getting to know it's workflow, APIs, etc. Its easy enough to be learned just by reading Electron's documentation, however, if you wish to master the full power of Electron, you need to use it with all it's advanced features, complementing Electron-userland programs, and Typescript; This book can be used to assist you in your journey to learn and master desktop software development, and help you avoid the heartache that comes with the steep learning curve of Electron at it's full power.What you can find inside this book: You will find the fundamentals of HTML, CSS, JavaScript, DOM, ES6, and Electron, so you can easily get acquainted with it even if you have never used Electron or NodeJS before. The basics are thorough and dense in print, so even if you are an intermediate or advanced user, you can learn stuff you may have never seen before. Advanced features like Data-type Prejudice, Class Based OOP, Scaffolding, Boilerplate code, Crash Report handling, Working with I/O devices, Debugging, Testing, etc. are covered for intermediate and Advanced users. Heavy attention has been given to the practicals, demonstrations, and code narrations. Advanced coding practices are covered, and a wide range of alternatives and suggestions are provided to improve your overall experience with Electron and JavaScript. The lessons are presented in a way that enhances the learning experience when the book is used as a self-learning material. The explanations and code narrations are provide in a way that assists rote learning, if the need ever arises! The past and future of Desktop Applications is discussed at length, and an entire chapter is provided to inspire and inform readers who are interested in applying Electron and JavaScript to Artificial Intelligence, Machine Learning, Internet of Things, etc. Instructions are given to use Electron with both JavaScript and TypeScript. Instructions are given to extend your journey to program and develop using Electron beyond this book. A lot of informative material is provided to get you acquainted with the Electron-userland. This book will take care of all your Electron related needs! It will teach you all you need to learn, and it will tell you all you need to know! This book will make you fall in love with Electron and JavaScript; you will be able to develop Desktop Applications before you know it!",
            "image": "http://books.google.com/books/content?id=AWEfzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-12-24T00:00:00.000Z"
        },
        {
            "content_html": "This book starts with the scratch programming basics, teaching kids what coding is, and all about the different tools they can use to build their own programs and games. Each chapter teaches a different aspect of coding, with exercises that get more challenging as they go, so kids can test their abilities and unleash their imagination. They'll even build their own game.Coding is quickly becoming an essential academic skill, right up there with reading, writing, and arithmetic. This book is an ideal way for young learners ages 8-13 who want more coding knowledge than you can learn in an hour, a day, or a week.Written by a classroom instructor with extensive experience teaching technology skills to kids as young as five, this book teaches the steps and logic needed to write code, solve problems, and create fun projects based in Scratch and JavaScript.<br><blockquote>This book starts with the scratch programming basics, teaching kids what coding is, and all about the different tools they can use to build their own programs and games.</blockquote>",
            "url": "http://books.google.com/books?id=Mc4yzgEACAAJ&dq=JavaScript&hl=&cd=6&source=gbs_api",
            "title": "Beginner's Guide to Coding for Kids",
            "summary": "This book starts with the scratch programming basics, teaching kids what coding is, and all about the different tools they can use to build their own programs and games. Each chapter teaches a different aspect of coding, with exercises that get more challenging as they go, so kids can test their abilities and unleash their imagination. They'll even build their own game.Coding is quickly becoming an essential academic skill, right up there with reading, writing, and arithmetic. This book is an ideal way for young learners ages 8-13 who want more coding knowledge than you can learn in an hour, a day, or a week.Written by a classroom instructor with extensive experience teaching technology skills to kids as young as five, this book teaches the steps and logic needed to write code, solve problems, and create fun projects based in Scratch and JavaScript.",
            "image": "http://books.google.com/books/content?id=Mc4yzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-12-06T00:00:00.000Z"
        },
        {
            "content_html": "Everything you need to get to grips with HTML, CSS and JavaScript – the three coding languages that are used to create modern web pages – all in easy steps! HTML, CSS & JavaScript in easy steps instructs the reader on each of the three coding languages that are used to create modern web pages; HyperText Markup Language (HTML) tags are used to control the structure of web page content, Cascading Style Sheets (CSS) rules are used to determine how web page content appears, and JavaScript functions are used to provide web page interactivity. HTML, CSS & JavaScript in easy steps contains examples and screenshots that illustrate each feature of all three coding languages. You'll learn how to create web pages to display text, images, lists, tables, hyperlinks, forms, audio, and video. Each chapter builds your knowledge so by the end of the book you'll have gained a sound understanding of HTML markup, CSS rules and JavaScript functions. HTML, CSS & JavaScript in easy steps has an easy-to-follow style that will appeal to anyone who wants to create great functional web pages. It will appeal to programmers who want to quickly add web page coding to their skills set, and to the student who is studying website design at school or college, and to those seeking a career in web development. Table of Contents: 1. Get Started in HTML 2. Manage Page Content 3. Insert Hyperlinks 4. Arrange Page Sections 5. Write Lists and Tables 6. Embed Media Content 7. Create Input Forms 8. Get Started in CSS 9. Manage the Box Model 10. Manipulate Text Styles 11. Organize Tables and Lists 12. Generate Effects 13. Control the Web Page 14. Design with Grids 15. Get Started in JavaScript 16. Perform Useful Operations 17. Manage the Script Flow 18. Use Script Objects 19. Control Numbers and Strings 20. Address the Window Object 21. Interact with the Document<br><blockquote>Each chapter builds your knowledge so by the end of the book you&#39;ll have gained a sound understanding of HTML markup, CSS rules and JavaScript functions.</blockquote>",
            "url": "http://books.google.com/books?id=C3L1DwAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "HTML, CSS & JavaScript in easy steps",
            "summary": "Everything you need to get to grips with HTML, CSS and JavaScript – the three coding languages that are used to create modern web pages – all in easy steps! HTML, CSS & JavaScript in easy steps instructs the reader on each of the three coding languages that are used to create modern web pages; HyperText Markup Language (HTML) tags are used to control the structure of web page content, Cascading Style Sheets (CSS) rules are used to determine how web page content appears, and JavaScript functions are used to provide web page interactivity. HTML, CSS & JavaScript in easy steps contains examples and screenshots that illustrate each feature of all three coding languages. You'll learn how to create web pages to display text, images, lists, tables, hyperlinks, forms, audio, and video. Each chapter builds your knowledge so by the end of the book you'll have gained a sound understanding of HTML markup, CSS rules and JavaScript functions. HTML, CSS & JavaScript in easy steps has an easy-to-follow style that will appeal to anyone who wants to create great functional web pages. It will appeal to programmers who want to quickly add web page coding to their skills set, and to the student who is studying website design at school or college, and to those seeking a career in web development. Table of Contents: 1. Get Started in HTML 2. Manage Page Content 3. Insert Hyperlinks 4. Arrange Page Sections 5. Write Lists and Tables 6. Embed Media Content 7. Create Input Forms 8. Get Started in CSS 9. Manage the Box Model 10. Manipulate Text Styles 11. Organize Tables and Lists 12. Generate Effects 13. Control the Web Page 14. Design with Grids 15. Get Started in JavaScript 16. Perform Useful Operations 17. Manage the Script Flow 18. Use Script Objects 19. Control Numbers and Strings 20. Address the Window Object 21. Interact with the Document",
            "image": "http://books.google.com/books/content?id=C3L1DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-08-05T00:00:00.000Z"
        },
        {
            "content_html": "Audience This book was written for anyone interested in learning one of the most effective and widely-used technology stacks for developing highly-interactive, professional-grade, database-driven Web applications-ASP.NET Core Razor Pages, C#.NET, HTML, Bootstrap, CSS, JavaScript, and Entity Framework Core-including novice software developers, professional software developers, and college or university students enrolled in a one-semester course or two-semester sequence of courses in Web application development. Organization Part I provides an overview of some of the major concepts and technologies associated with ASP.NET Core Web application development as well as ASP.NET Core solutions and projects. Part II describes how to develop an ASP.NET Core Web application, including how to create and use HTML elements and how to perform model validation to keep bad data out of the system. The concepts in this part of the book will lay the foundation required for learning the C# programming language in the context of an ASP.NET Core Web application. Part III describes how to program in the C# programming language, including how to perform assignment, conversion, control, string, arithmetic, date and time, array, collection, and file system operations and how to create custom C# classes-in the context of an ASP.NET Core Web application. Part IV describes how to develop a multiple-page ASP.NET Core Web application, including how to maintain the application's state and how to use layout pages to give the pages of the application a consistent look. Part V describes how to improve the user experience of an ASP.NET Core Web application, including how to use Bootstrap to make the application responsive and attractive when displayed on a phone, tablet, laptop, and desktop, how to use Cascading Style Sheets to style HTML elements consistently across all the pages of the application, and how to use JavaScript to write code that needs to be executed in the browser. Part VI describes how to connect an ASP.NET Core Web application to a SQL Server database, including how to install and use Entity Framework Core, how to perform database query operations, and how to perform database table maintenance. Part VII describes how to create an ASP.NET Core Web application service, including a NetMail email service and a MailKit email service. Features Real-Life Examples A significant proportion of the examples in the text are drawn from the real-life experiences of the author's own software development practice that began in 1987. Clear-Minded, Consistent, and Concise Prose Every effort has been made to present concepts clearly and logically, utilize consistent language and terminology across all chapters, and articulate concepts fully yet concisely. Accessible Language Although the subject matter of this book is highly technical and specialized, trendy and/or arcane language that is inaccessible to the average learner is either clearly defined or replaced in favor of clear and generalizable terminology.<br><blockquote>Audience This book was written for anyone interested in learning one of the most effective and widely-used technology stacks for developing highly-interactive, professional-grade, database-driven Web applications-ASP.NET Core Razor Pages, C ...</blockquote>",
            "url": "http://books.google.com/books?id=5604zgEACAAJ&dq=JavaScript&hl=&cd=8&source=gbs_api",
            "title": "ASP.NET Core Razor Pages",
            "summary": "Audience This book was written for anyone interested in learning one of the most effective and widely-used technology stacks for developing highly-interactive, professional-grade, database-driven Web applications-ASP.NET Core Razor Pages, C#.NET, HTML, Bootstrap, CSS, JavaScript, and Entity Framework Core-including novice software developers, professional software developers, and college or university students enrolled in a one-semester course or two-semester sequence of courses in Web application development. Organization Part I provides an overview of some of the major concepts and technologies associated with ASP.NET Core Web application development as well as ASP.NET Core solutions and projects. Part II describes how to develop an ASP.NET Core Web application, including how to create and use HTML elements and how to perform model validation to keep bad data out of the system. The concepts in this part of the book will lay the foundation required for learning the C# programming language in the context of an ASP.NET Core Web application. Part III describes how to program in the C# programming language, including how to perform assignment, conversion, control, string, arithmetic, date and time, array, collection, and file system operations and how to create custom C# classes-in the context of an ASP.NET Core Web application. Part IV describes how to develop a multiple-page ASP.NET Core Web application, including how to maintain the application's state and how to use layout pages to give the pages of the application a consistent look. Part V describes how to improve the user experience of an ASP.NET Core Web application, including how to use Bootstrap to make the application responsive and attractive when displayed on a phone, tablet, laptop, and desktop, how to use Cascading Style Sheets to style HTML elements consistently across all the pages of the application, and how to use JavaScript to write code that needs to be executed in the browser. Part VI describes how to connect an ASP.NET Core Web application to a SQL Server database, including how to install and use Entity Framework Core, how to perform database query operations, and how to perform database table maintenance. Part VII describes how to create an ASP.NET Core Web application service, including a NetMail email service and a MailKit email service. Features Real-Life Examples A significant proportion of the examples in the text are drawn from the real-life experiences of the author's own software development practice that began in 1987. Clear-Minded, Consistent, and Concise Prose Every effort has been made to present concepts clearly and logically, utilize consistent language and terminology across all chapters, and articulate concepts fully yet concisely. Accessible Language Although the subject matter of this book is highly technical and specialized, trendy and/or arcane language that is inaccessible to the average learner is either clearly defined or replaced in favor of clear and generalizable terminology.",
            "image": "http://books.google.com/books/content?id=5604zgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-12-05T00:00:00.000Z"
        },
        {
            "content_html": "All of JavaScript's newest features, in depth, made easy to understand. JavaScript is a rapidly changing language and it can be challenging to keep up with all the new toys being added. JavaScript: The New Toys explores the newest features of the world's most popular programming language while also showing readers how to track what's coming next. After setting the stage by covering who manages the process of improving JavaScript, how new features get introduced, terminology, and a high-level overview of new features, it details each new or updated item in depth, with example uses, possible pitfalls, and expert recommendations for updating old habits in light of new features. JavaScript: The New Toys: Covers all the additions to JavaScript in ES2015-ES2019 plus a preview of ES2020 (and beyond) Explores the latest syntax: nullish coalescing, optional chaining, let and const, class syntax, private methods, private fields, new.target, numeric separators, BigInt, destructuring, default parameters, arrow functions, async functions, await, generator functions, ... (rest and spread), template literals, binary and octal literals, ** (exponentiation), computed property/method names, for-of, for-await-of, shorthand properties, and others Details the new features and patterns including modules, promises, iteration, generators, Symbol, Proxy, reflection, typed arrays, Atomics, shared memory, WeakMap, WeakSet, and more Highlights common pitfalls and explains how to avoid them Shows how to follow the improvements process and even participate in the process yourself Explains how to use new features even before they're widely supported With its comprehensive coverage and friendly, accessible style, JavaScript: The New Toys provides an invaluable resource for programmers everywhere, whether they work in web development, Node.js, Electron, Windows Universal Apps, or another JavaScript environment.<br><blockquote>This book explores the newest features of the world&#39;s most popular programming language while also showing readers how to track what&#39;s coming next.</blockquote>",
            "url": "http://books.google.com/books?id=EJzuDwAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "JavaScript",
            "summary": "All of JavaScript's newest features, in depth, made easy to understand. JavaScript is a rapidly changing language and it can be challenging to keep up with all the new toys being added. JavaScript: The New Toys explores the newest features of the world's most popular programming language while also showing readers how to track what's coming next. After setting the stage by covering who manages the process of improving JavaScript, how new features get introduced, terminology, and a high-level overview of new features, it details each new or updated item in depth, with example uses, possible pitfalls, and expert recommendations for updating old habits in light of new features. JavaScript: The New Toys: Covers all the additions to JavaScript in ES2015-ES2019 plus a preview of ES2020 (and beyond) Explores the latest syntax: nullish coalescing, optional chaining, let and const, class syntax, private methods, private fields, new.target, numeric separators, BigInt, destructuring, default parameters, arrow functions, async functions, await, generator functions, ... (rest and spread), template literals, binary and octal literals, ** (exponentiation), computed property/method names, for-of, for-await-of, shorthand properties, and others Details the new features and patterns including modules, promises, iteration, generators, Symbol, Proxy, reflection, typed arrays, Atomics, shared memory, WeakMap, WeakSet, and more Highlights common pitfalls and explains how to avoid them Shows how to follow the improvements process and even participate in the process yourself Explains how to use new features even before they're widely supported With its comprehensive coverage and friendly, accessible style, JavaScript: The New Toys provides an invaluable resource for programmers everywhere, whether they work in web development, Node.js, Electron, Windows Universal Apps, or another JavaScript environment.",
            "image": "http://books.google.com/books/content?id=EJzuDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-06-25T00:00:00.000Z"
        },
        {
            "content_html": "Build web applications in C# and Microsoft .NET that run in any modern browser. This second edition is updated to work with the release version of Blazor and covers Blazor’s use in creating both server-side and WebAssembly Blazor applications. Developers are able to use all their experience in .NET along with thousands of existing libraries, right in the browser. There is important new coverage in this edition on the new and improved Razor syntax, how to easily validate user input with Blazor validation, and how to build complex interacting components with Cascading Properties and Templated Components. You will learn how to build user interfaces and present data to a user for display and modification, capturing the user’s changes via data binding. The book shows you how to access a rich library of .NET functionality such as a component model for building a composable user interface, including how to develop reusable components that can be used across many pages and websites. Also covered is data exchange with a server, giving you access to microservices and database services. Blazor provides a fresh take on web development by eliminating the need for you to learn different languages and frameworks for client- and server-side development. Blazor allows C# and .NET to be used on all sides, providing a robust feature set that is well suited toward scalable, enterprise-level applications. This book gets you started using this important new toolkit for web application development. What You Will Learn Build user interfaces and display data for users to edit Capture the user’s changes via data binding Transfer data back and forth between server and client Communicate with microservices and database services Develop reusable components and assemble them into bigger components Use routing to build single-page applications (SPAs) Build Blazor libraries that are reusable across applications Who This Book Is For Experienced .NET developers who want to apply their existing skills toward building professional-quality, client-side web applications that run in any browser. The book is for web developers who want to step away from JavaScript and its complexities, and instead use a proven technology (.NET) that is robust toward creating enterprise-quality applications that scale and are reliable, that provide good user experience.<br><blockquote>This book gets you started using this important new toolkit for web application development.</blockquote>",
            "url": "http://books.google.com/books?id=sSjoDwAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "Microsoft Blazor",
            "summary": "Build web applications in C# and Microsoft .NET that run in any modern browser. This second edition is updated to work with the release version of Blazor and covers Blazor’s use in creating both server-side and WebAssembly Blazor applications. Developers are able to use all their experience in .NET along with thousands of existing libraries, right in the browser. There is important new coverage in this edition on the new and improved Razor syntax, how to easily validate user input with Blazor validation, and how to build complex interacting components with Cascading Properties and Templated Components. You will learn how to build user interfaces and present data to a user for display and modification, capturing the user’s changes via data binding. The book shows you how to access a rich library of .NET functionality such as a component model for building a composable user interface, including how to develop reusable components that can be used across many pages and websites. Also covered is data exchange with a server, giving you access to microservices and database services. Blazor provides a fresh take on web development by eliminating the need for you to learn different languages and frameworks for client- and server-side development. Blazor allows C# and .NET to be used on all sides, providing a robust feature set that is well suited toward scalable, enterprise-level applications. This book gets you started using this important new toolkit for web application development. What You Will Learn Build user interfaces and display data for users to edit Capture the user’s changes via data binding Transfer data back and forth between server and client Communicate with microservices and database services Develop reusable components and assemble them into bigger components Use routing to build single-page applications (SPAs) Build Blazor libraries that are reusable across applications Who This Book Is For Experienced .NET developers who want to apply their existing skills toward building professional-quality, client-side web applications that run in any browser. The book is for web developers who want to step away from JavaScript and its complexities, and instead use a proven technology (.NET) that is robust toward creating enterprise-quality applications that scale and are reliable, that provide good user experience.",
            "image": "http://books.google.com/books/content?id=sSjoDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-05-29T00:00:00.000Z"
        }
    ]
}