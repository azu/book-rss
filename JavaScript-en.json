{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "In addition to teaching developers how to solve complex problems, Data Structures and Algorithms in JavaScript is strong preparation for coding interviews and programming competitions. For JavaScript developers, this book is the best way to learn how data structures and algorithms can be used to solve complex problems—and immediately implement them. For Javascript developers, this book is a one-stop-shop for learning the algorithms and data structures that solve and optimize complex problems. Covering everything from functional programming and abstract data types, to sorting and searching, lists, bags, binary trees, forests, heaps, and graphs—the author uses examples taken from coding challenges and interview questions, enabling readers to explore the real-world advantages of specific algorithms and data structures. Written and illustrated to be a developer’s go-to reference manual as well as for immediate on-the-job applications, performance—both from a theoretical point of view and a practical standpoint—is considered alongside every algorithm or data structure introduced. In addition to demonstrating best practices throughout the text, each chapter ends with a series of questions that amplify the preceding concepts and provide further examples for the reader to apply. Also of note, the book utilizes the latest version of JavaScript (ECMAScript) and its more modern features wherever appropriate.<br><blockquote>This book addresses one of the most glaring gaps in JavaScript developers’ knowledge base—basic computer science concepts, like data structures and algorithms, for solving complex problems.</blockquote>",
            "url": "http://books.google.com/books?id=_Mh9EAAAQBAJ&dq=JavaScript&hl=&cd=1&source=gbs_api",
            "title": "Data Structures and Algorithms in JavaScript",
            "summary": "In addition to teaching developers how to solve complex problems, Data Structures and Algorithms in JavaScript is strong preparation for coding interviews and programming competitions. For JavaScript developers, this book is the best way to learn how data structures and algorithms can be used to solve complex problems—and immediately implement them. For Javascript developers, this book is a one-stop-shop for learning the algorithms and data structures that solve and optimize complex problems. Covering everything from functional programming and abstract data types, to sorting and searching, lists, bags, binary trees, forests, heaps, and graphs—the author uses examples taken from coding challenges and interview questions, enabling readers to explore the real-world advantages of specific algorithms and data structures. Written and illustrated to be a developer’s go-to reference manual as well as for immediate on-the-job applications, performance—both from a theoretical point of view and a practical standpoint—is considered alongside every algorithm or data structure introduced. In addition to demonstrating best practices throughout the text, each chapter ends with a series of questions that amplify the preceding concepts and provide further examples for the reader to apply. Also of note, the book utilizes the latest version of JavaScript (ECMAScript) and its more modern features wherever appropriate.",
            "image": "http://books.google.com/books/content?id=_Mh9EAAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2023-08-01T00:00:00.000Z"
        },
        {
            "content_html": "Do you want to write beautiful, structured, and maintainable JavaScript by applying modern design patterns to the language? Do you want clean, efficient, manageable code? Want to stay up-to-date with the latest best practices? If so, the updated second edition of Learning JavaScript Design Patterns is the ideal place to start. Author Addy Osmani shows you how to apply modern design patterns to JavaScript and React—including modules, mixins, observers, and mediators. You'll learn about performance and rendering patterns such as server-side rendering and Islands architecture. You'll also learn how architectural patterns like MVC, MVP, and MVVM are useful from the perspective of a modern web application developer. This book explores: Architectural patterns for structuring your components and apps More than 20 design patterns in JavaScript and React, applicable for developers at any level Different pattern categories including creational, structural, and behavioral Essential performance patterns including dynamic imports and code-splitting Rendering patterns such as server-side rendering, hydration, Islands architecture, and more Additionally, you'll explore modern JavaScript syntax like JavaScript modules, React patterns like Hooks, higher-order components (HOCs), and more, to stay ahead in the ever-evolving world of web development.<br><blockquote>This book explores: Architectural patterns for structuring your components and apps More than 20 design patterns in JavaScript and React, applicable for developers at any level Different pattern categories including creational, structural, ...</blockquote>",
            "url": "http://books.google.com/books?id=Akq8EAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=2&source=gbs_api",
            "title": "Learning JavaScript Design Patterns",
            "summary": "Do you want to write beautiful, structured, and maintainable JavaScript by applying modern design patterns to the language? Do you want clean, efficient, manageable code? Want to stay up-to-date with the latest best practices? If so, the updated second edition of Learning JavaScript Design Patterns is the ideal place to start. Author Addy Osmani shows you how to apply modern design patterns to JavaScript and React—including modules, mixins, observers, and mediators. You'll learn about performance and rendering patterns such as server-side rendering and Islands architecture. You'll also learn how architectural patterns like MVC, MVP, and MVVM are useful from the perspective of a modern web application developer. This book explores: Architectural patterns for structuring your components and apps More than 20 design patterns in JavaScript and React, applicable for developers at any level Different pattern categories including creational, structural, and behavioral Essential performance patterns including dynamic imports and code-splitting Rendering patterns such as server-side rendering, hydration, Islands architecture, and more Additionally, you'll explore modern JavaScript syntax like JavaScript modules, React patterns like Hooks, higher-order components (HOCs), and more, to stay ahead in the ever-evolving world of web development.",
            "image": "http://books.google.com/books/content?id=Akq8EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2023-04-28T00:00:00.000Z"
        },
        {
            "content_html": "JavaScript Crash Course is a fast-paced, thorough introduction to programming in JavaScript that will have you writing your own software and web applications in no time. Like the bestselling Python Crash Course, this hands-on guide is a must-have for anyone who wants to learn how to code from the ground up, this time using the popular JavaScript programming language. JavaScript is the programming language of the internet, the secret sauce that makes websites dynamic, responsive, and all-around awesome. JavaScript Crash Course will quickly teach total beginners how to code in this popular, easy-to-learn language. This light-hearted, fast-paced introduction teaches you programming essentials through fun examples, hands-on exercises, and projects like building a Pong-style game. Discover all the important aspects of the language without delving into expert-level nitty-gritty details or confusing jargon. You will quickly develop an understanding of key coding concepts including strings, functions, arrays, and loops, and then move on to more advanced topics, such as building web-page interactivity by manipulating the DOM, and drawing graphics with Canvas. Along the way, you’ll have fun using JavaScript to make games, apps, and even create music.<br><blockquote>Like Python Crash Course, this hands-on guide is a must-have for anyone who wants to learn how to code from the ground up—this time using the popular JavaScript programming language.</blockquote>",
            "url": "http://books.google.com/books?id=qLpHEAAAQBAJ&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "JavaScript Crash Course",
            "summary": "JavaScript Crash Course is a fast-paced, thorough introduction to programming in JavaScript that will have you writing your own software and web applications in no time. Like the bestselling Python Crash Course, this hands-on guide is a must-have for anyone who wants to learn how to code from the ground up, this time using the popular JavaScript programming language. JavaScript is the programming language of the internet, the secret sauce that makes websites dynamic, responsive, and all-around awesome. JavaScript Crash Course will quickly teach total beginners how to code in this popular, easy-to-learn language. This light-hearted, fast-paced introduction teaches you programming essentials through fun examples, hands-on exercises, and projects like building a Pong-style game. Discover all the important aspects of the language without delving into expert-level nitty-gritty details or confusing jargon. You will quickly develop an understanding of key coding concepts including strings, functions, arrays, and loops, and then move on to more advanced topics, such as building web-page interactivity by manipulating the DOM, and drawing graphics with Canvas. Along the way, you’ll have fun using JavaScript to make games, apps, and even create music.",
            "image": "http://books.google.com/books/content?id=qLpHEAAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2023-08-29T00:00:00.000Z"
        },
        {
            "content_html": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.<br><blockquote>Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT.</blockquote>",
            "url": "http://books.google.com/books?id=WSUuEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=4&source=gbs_api",
            "title": "Structure and Interpretation of Computer Programs",
            "summary": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.",
            "image": "http://books.google.com/books/content?id=WSUuEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-05-03T00:00:00.000Z"
        },
        {
            "content_html": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.<br><blockquote>Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT.</blockquote>",
            "url": "http://books.google.com/books?id=4rtNEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=5&source=gbs_api",
            "title": "Structure and Interpretation of Computer Programs",
            "summary": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.",
            "image": "http://books.google.com/books/content?id=4rtNEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-04-12T00:00:00.000Z"
        },
        {
            "content_html": "Discover how to take advantage of common cryptographic operations to build safer apps that respect users' privacy with the help of examples in JavaScript for Node.js and browsers Key FeaturesUnderstand how to implement common cryptographic operations in your code with practical examplesLearn about picking modern safe algorithms, which libraries you should rely on, and how to use them correctlyBuild modern and secure applications that respect your users' privacy with cryptographyBook Description If you're a software developer, this book will give you an introduction to cryptography, helping you understand how to make the most of it for your applications. The book contains extensive code samples in JavaScript, both for Node.js and for frontend apps running in a web browser, although the core concepts can be used by developers working with any programming language and framework. With a purely hands-on approach that is focused on sharing actionable knowledge, you'll learn about the common categories of cryptographic operations that you can leverage in all apps you're developing, including hashing, encryption with symmetric, asymmetric and hybrid ciphers, and digital signatures. You'll learn when to use these operations and how to choose and implement the most popular algorithms to perform them, including SHA-2, Argon2, AES, ChaCha20-Poly1305, RSA, and Elliptic Curve Cryptography. Later, you'll learn how to deal with password and key management. All code in this book is written in JavaScript and designed to run in Node.js or as part of frontend apps for web browsers. By the end of this book, you'll be able to build solutions that leverage cryptography to protect user privacy, offer better security against an expanding and more complex threat landscape, help meet data protection requirements, and unlock new opportunities. What you will learnWrite JavaScript code that uses cryptography running within a Node.js environment for the server-side or in frontend applications for web browsersUse modern, safe hashing functions for calculating digests and key derivation, including SHA-2 and Argon2Practice encrypting messages and files with a symmetric key using AES and ChaCha20-Poly1305Use asymmetric and hybrid encryption, leveraging RSA and Elliptic Curve Cryptography with ECDH and ECIESCalculate and verify digital signatures using RSA and ECDSA/EdDSAManage passwords and encryption keys safelyWho this book is for This cryptography book is an introductory guide for software developers who don't necessarily have a background in cryptography but are interested in learning how to integrate it in their solutions, correctly and safely. You'll need to have at least intermediate-level knowledge of building apps with JavaScript and familiarity with Node.js to make the most of this book.<br><blockquote>Discover how to take advantage of common cryptographic operations to build safer apps that respect users&#39; privacy with the help of examples in JavaScript for Node.js and browsers Key FeaturesUnderstand how to implement common cryptographic ...</blockquote>",
            "url": "http://books.google.com/books?id=47JZEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=6&source=gbs_api",
            "title": "Essential Cryptography for JavaScript Developers",
            "summary": "Discover how to take advantage of common cryptographic operations to build safer apps that respect users' privacy with the help of examples in JavaScript for Node.js and browsers Key FeaturesUnderstand how to implement common cryptographic operations in your code with practical examplesLearn about picking modern safe algorithms, which libraries you should rely on, and how to use them correctlyBuild modern and secure applications that respect your users' privacy with cryptographyBook Description If you're a software developer, this book will give you an introduction to cryptography, helping you understand how to make the most of it for your applications. The book contains extensive code samples in JavaScript, both for Node.js and for frontend apps running in a web browser, although the core concepts can be used by developers working with any programming language and framework. With a purely hands-on approach that is focused on sharing actionable knowledge, you'll learn about the common categories of cryptographic operations that you can leverage in all apps you're developing, including hashing, encryption with symmetric, asymmetric and hybrid ciphers, and digital signatures. You'll learn when to use these operations and how to choose and implement the most popular algorithms to perform them, including SHA-2, Argon2, AES, ChaCha20-Poly1305, RSA, and Elliptic Curve Cryptography. Later, you'll learn how to deal with password and key management. All code in this book is written in JavaScript and designed to run in Node.js or as part of frontend apps for web browsers. By the end of this book, you'll be able to build solutions that leverage cryptography to protect user privacy, offer better security against an expanding and more complex threat landscape, help meet data protection requirements, and unlock new opportunities. What you will learnWrite JavaScript code that uses cryptography running within a Node.js environment for the server-side or in frontend applications for web browsersUse modern, safe hashing functions for calculating digests and key derivation, including SHA-2 and Argon2Practice encrypting messages and files with a symmetric key using AES and ChaCha20-Poly1305Use asymmetric and hybrid encryption, leveraging RSA and Elliptic Curve Cryptography with ECDH and ECIESCalculate and verify digital signatures using RSA and ECDSA/EdDSAManage passwords and encryption keys safelyWho this book is for This cryptography book is an introductory guide for software developers who don't necessarily have a background in cryptography but are interested in learning how to integrate it in their solutions, correctly and safely. You'll need to have at least intermediate-level knowledge of building apps with JavaScript and familiarity with Node.js to make the most of this book.",
            "image": "http://books.google.com/books/content?id=47JZEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-02-28T00:00:00.000Z"
        },
        {
            "content_html": "This book will get you programming in Javascript as quickly as possible. It is written for those with basic programming knowledge. JavaScript is the language - the only language - used by browsers. With these tools, you will be able to build interactive web pages.<br><blockquote>This book will get you programming in Javascript as quickly as possible.</blockquote>",
            "url": "http://books.google.com/books?id=uLFuzwEACAAJ&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "Quick JavaScript",
            "summary": "This book will get you programming in Javascript as quickly as possible. It is written for those with basic programming knowledge. JavaScript is the language - the only language - used by browsers. With these tools, you will be able to build interactive web pages.",
            "image": "http://books.google.com/books/content?id=uLFuzwEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2023-01-01T00:00:00.000Z"
        },
        {
            "content_html": "This book serves as a succinct guide on ReScript, a functional language for building web applications. Using examples of ReScript language features along with explanations of fundamental concepts in functional programming, this book will show web developers with a background in JavaScript how to effectively use ReScript to its full potential. In Introducing ReScript, you'll learn how to use features in ReScript that JavaScript lacks, such as type inference, null-safety, algebraic data types, pattern matching, and more. Along the way, you'll pick up functional programming concepts like immutability and higher-order functions. You'll also gain a sense of how ReScript works under the hood and how to leverage interoperability between ReScript and JavaScript. Whether you're a web developer interested in dabbling with functional programming or you just want to learn how to write safer and cleaner code for web applications, this book is a great way for you to get started with ReScript. What You Will Learn Use ReScript to write clean, safe, and elegant software Understand the features of ReScript that set it apart from JavaScript, such as type inference, null-safety, and algebraic data types Explore functional programming concepts like immutabhigher-orderr order functions, and pattern matching Use popular JavaScript libraries and frameworks in your ReScript code and integrate ReScript code into JavaScript codebases Who This Book Is For Web developers that want a strictly typed, safer alternative to JavaScript, as well as web developers interested in learning functional programming and leveraging the elegant and powerful functional features in ReScript.<br><blockquote>This book serves as a succinct guide on ReScript, a functional language for building web applications.</blockquote>",
            "url": "http://books.google.com/books?id=1ZRYzwEACAAJ&dq=JavaScript&hl=&cd=8&source=gbs_api",
            "title": "Introducing ReScript",
            "summary": "This book serves as a succinct guide on ReScript, a functional language for building web applications. Using examples of ReScript language features along with explanations of fundamental concepts in functional programming, this book will show web developers with a background in JavaScript how to effectively use ReScript to its full potential. In Introducing ReScript, you'll learn how to use features in ReScript that JavaScript lacks, such as type inference, null-safety, algebraic data types, pattern matching, and more. Along the way, you'll pick up functional programming concepts like immutability and higher-order functions. You'll also gain a sense of how ReScript works under the hood and how to leverage interoperability between ReScript and JavaScript. Whether you're a web developer interested in dabbling with functional programming or you just want to learn how to write safer and cleaner code for web applications, this book is a great way for you to get started with ReScript. What You Will Learn Use ReScript to write clean, safe, and elegant software Understand the features of ReScript that set it apart from JavaScript, such as type inference, null-safety, and algebraic data types Explore functional programming concepts like immutabhigher-orderr order functions, and pattern matching Use popular JavaScript libraries and frameworks in your ReScript code and integrate ReScript code into JavaScript codebases Who This Book Is For Web developers that want a strictly typed, safer alternative to JavaScript, as well as web developers interested in learning functional programming and leveraging the elegant and powerful functional features in ReScript.",
            "image": "http://books.google.com/books/content?id=1ZRYzwEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2022-12-28T00:00:00.000Z"
        },
        {
            "content_html": "Little known to many, R works just as well with JavaScript—this book delves into the various ways both languages can work together. The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow. In that respect the book is not teaching one JavaScript but rather we show how little JavaScript can greatly support and enhance R code. Therefore, the focus is on integrating external JavaScript libraries and no prior knowledge of JavaScript is required. Key Features: ● Easy to pick up. ● An entry way to learning JavaScript for R. ● Covers topics not covered anywhere else. ● Easy to follow along.<br><blockquote>The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow.</blockquote>",
            "url": "http://books.google.com/books?id=ntUxEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "Javascript for R",
            "summary": "Little known to many, R works just as well with JavaScript—this book delves into the various ways both languages can work together. The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow. In that respect the book is not teaching one JavaScript but rather we show how little JavaScript can greatly support and enhance R code. Therefore, the focus is on integrating external JavaScript libraries and no prior knowledge of JavaScript is required. Key Features: ● Easy to pick up. ● An entry way to learning JavaScript for R. ● Covers topics not covered anywhere else. ● Easy to follow along.",
            "image": "http://books.google.com/books/content?id=ntUxEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-15T00:00:00.000Z"
        },
        {
            "content_html": "Learn to use JavaScript, the popular scripting language that allows web page authors to develop interactive web pages and sites. Carey/Vodnik's JAVASCRIPT FOR WEB WARRIORS, Seventh Edition introduces a variety of techniques that focus on what you need to know to begin using JavaScript right away. Step-by-step tasks within each chapter focus on particular techniques essential for building actual JavaScript programs. Guided activities reinforce skills and build in complexity as you progress. You also study debugging techniques. This edition's text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications. Learning objectives, summaries, review and key terms highlight major concepts while reinforcement exercises let you further practice new techniques. After completing this course, you will able to use JavaScript to build professional quality web applications. Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.<br><blockquote>You also study debugging techniques. This edition&#39;s text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications.</blockquote>",
            "url": "http://books.google.com/books?id=Iwk1EAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "JavaScript for Web Warriors",
            "summary": "Learn to use JavaScript, the popular scripting language that allows web page authors to develop interactive web pages and sites. Carey/Vodnik's JAVASCRIPT FOR WEB WARRIORS, Seventh Edition introduces a variety of techniques that focus on what you need to know to begin using JavaScript right away. Step-by-step tasks within each chapter focus on particular techniques essential for building actual JavaScript programs. Guided activities reinforce skills and build in complexity as you progress. You also study debugging techniques. This edition's text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications. Learning objectives, summaries, review and key terms highlight major concepts while reinforcement exercises let you further practice new techniques. After completing this course, you will able to use JavaScript to build professional quality web applications. Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.",
            "image": "http://books.google.com/books/content?id=Iwk1EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-06T00:00:00.000Z"
        }
    ]
}