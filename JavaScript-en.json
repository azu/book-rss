{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "Learn to use accelerated test-driven development (TDD) to build a React application from scratch. This book explains how your React components will be integrated, and how to refactor code to make it more concise and flexible. With TDD you can develop a robust test suite to catch bugs, and develop modular, flexible code. Applying your understanding of how HTML, CSS, and JavaScript work in the browser you'll build a web application called Bookish using TDD and mainstream React stack technologies such as React, React-router, and Redux. Using higher code quality you'll be able to write executable documentation using Cucumber. This is just one of many essentials in maintaining a practical TDD workflow in your daily workload. Test-Driven Development with React highlights best practices and design patterns that will enable you to write more maintainable and reusable React components. What You'll Learn Manage your application’s state using Redux Employ professional techniques for backend services Use Cypress as an end-to-end testing framework Utilize React-testing-library for unit and integration tests Who This Book Is For Ideal for web application developers who wants to learn how to write high quality code using Test-Driven Development.<br><blockquote>Learn to use accelerated test-driven development (TDD) to build a React application from scratch. This book explains how your React components will be integrated, and how to refactor code to make it more concise and flexible.</blockquote>",
            "url": "http://books.google.com/books?id=tWg6zgEACAAJ&dq=JavaScript&hl=&cd=1&source=gbs_api",
            "title": "Test-Driven Development with React",
            "summary": "Learn to use accelerated test-driven development (TDD) to build a React application from scratch. This book explains how your React components will be integrated, and how to refactor code to make it more concise and flexible. With TDD you can develop a robust test suite to catch bugs, and develop modular, flexible code. Applying your understanding of how HTML, CSS, and JavaScript work in the browser you'll build a web application called Bookish using TDD and mainstream React stack technologies such as React, React-router, and Redux. Using higher code quality you'll be able to write executable documentation using Cucumber. This is just one of many essentials in maintaining a practical TDD workflow in your daily workload. Test-Driven Development with React highlights best practices and design patterns that will enable you to write more maintainable and reusable React components. What You'll Learn Manage your application’s state using Redux Employ professional techniques for backend services Use Cypress as an end-to-end testing framework Utilize React-testing-library for unit and integration tests Who This Book Is For Ideal for web application developers who wants to learn how to write high quality code using Test-Driven Development.",
            "image": "http://books.google.com/books/content?id=tWg6zgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-09-27T00:00:00.000Z"
        },
        {
            "content_html": "Learn how to use Deno, the secure JavaScript and TypeScript runtime written in Rust, to write reliable web applications Key Features: Understand Deno's essential concepts and features Learn how to use Deno in real-world scenarios Use Deno to develop, test, and deploy web applications and tools Book Description: Deno is a JavaScript and TypeScript runtime with secure defaults and a great developer experience. With Deno Web Development, you'll learn all about Deno's primitives, its principles, and how you can use them to build real-world applications. The book is divided into three main sections: an introduction to Deno, building an API from scratch, and testing and deploying a Deno application. The book starts by getting you up to speed with Deno's runtime and the reason why it was developed. You'll explore some of the concepts introduced by Node, why many of them transitioned into Deno, and why new features were introduced. After understanding Deno and why it was created, you will start to experiment with Deno, exploring the toolchain and writing simple scripts and CLI applications. As you progress to the second section, you will create a simple web application and then add more features to it. This application will evolve from a simple 'hello world' API to a web application connected to the database, with users, authentication, and a JavaScript client. In the third section, the book will take you through topics such as dependency management, configuration and testing, finishing with an application deployed in a cloud environment. By the end of this web development book, you will become comfortable with using Deno to create, maintain, and deploy secure and reliable web applications. What You Will Learn: Understand why you should use Deno Get to grips with tooling and the Deno ecosystem Build Deno web applications using existing Node.js knowledge and the newest ECMA Script 6 features Explore the standard library and the benefits of Deno's security model Discover common practices and web frameworks to build a REST API in Deno Structure a web application using common architecture practices Test and deploy a Deno application in the cloud using Docker Who this book is for: This book is for developers who want to leverage their JavaScript and TypeScript skills in a secure, simple, and modern runtime, using Deno for web app development. Beginner-level knowledge of Node.js is recommended but not required.<br><blockquote>By the end of this web development book, you will become comfortable with using Deno to create, maintain, and deploy secure and reliable web applications.</blockquote>",
            "url": "http://books.google.com/books?id=Uy4izgEACAAJ&dq=JavaScript&hl=&cd=2&source=gbs_api",
            "title": "Getting Started with Deno",
            "summary": "Learn how to use Deno, the secure JavaScript and TypeScript runtime written in Rust, to write reliable web applications Key Features: Understand Deno's essential concepts and features Learn how to use Deno in real-world scenarios Use Deno to develop, test, and deploy web applications and tools Book Description: Deno is a JavaScript and TypeScript runtime with secure defaults and a great developer experience. With Deno Web Development, you'll learn all about Deno's primitives, its principles, and how you can use them to build real-world applications. The book is divided into three main sections: an introduction to Deno, building an API from scratch, and testing and deploying a Deno application. The book starts by getting you up to speed with Deno's runtime and the reason why it was developed. You'll explore some of the concepts introduced by Node, why many of them transitioned into Deno, and why new features were introduced. After understanding Deno and why it was created, you will start to experiment with Deno, exploring the toolchain and writing simple scripts and CLI applications. As you progress to the second section, you will create a simple web application and then add more features to it. This application will evolve from a simple 'hello world' API to a web application connected to the database, with users, authentication, and a JavaScript client. In the third section, the book will take you through topics such as dependency management, configuration and testing, finishing with an application deployed in a cloud environment. By the end of this web development book, you will become comfortable with using Deno to create, maintain, and deploy secure and reliable web applications. What You Will Learn: Understand why you should use Deno Get to grips with tooling and the Deno ecosystem Build Deno web applications using existing Node.js knowledge and the newest ECMA Script 6 features Explore the standard library and the benefits of Deno's security model Discover common practices and web frameworks to build a REST API in Deno Structure a web application using common architecture practices Test and deploy a Deno application in the cloud using Docker Who this book is for: This book is for developers who want to leverage their JavaScript and TypeScript skills in a secure, simple, and modern runtime, using Deno for web app development. Beginner-level knowledge of Node.js is recommended but not required.",
            "image": "http://books.google.com/books/content?id=Uy4izgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-03-25T00:00:00.000Z"
        },
        {
            "content_html": "55 % discount for bookstores ! Now At $25.99 instead of $ 40.28 $ Your customers will never stop reading this guide !!! *2 BOOKS JAVASCRIPTS* UPDATE. In this book, we learned in this discussion that ES6 support isn't universal yet, but that shouldn't stop you from taking advantage of the benefits of ES6 right now, because you can trans-compile your ES6 to portable ES5. Be sure to include the following things when setting up a new development machine. We also learn how to set up a good editor, git (for installation instructions), Gulp (npm install -g gulp), ESLint (npm install -g eslint). We also learn how to begin a new project (whether it's a scratch project to run the examples in this book or a real project), like a dedicated directory for your project; we call this the project root, a Git repository (git init), a package.json file (npm init), a Gulpfile (gulpfile.js; use the one from this topic), gulp and Babel local packages (npm install --save-dev gulp gulp-babel babel-preset-es2015), a .babelrc file (contents: { \"presets\" [\"es2015\"] }), an .eslintrc file (use eslint --init to create it, and edit to your preferences), a subdirectory for Node source (es6), a subdirectory for browser source (public/es6). Your also simple workflow will look like this once you've set it up by making improvements that are logically consistent and connected also to test and lint your code, use Gulp with rep until the improvements are successful and lint-free. Alao makes sure you're not going to do something you don't want to do (git status). Connect any files to yours.gitignore file that you don't want in Git. In the last Add all of your changes to Git (git add -A; if you don't want to add all of your changes, just use git add for each file). Buy it Now and let your customers get addicted to this amazing book !!!<br><blockquote>In this book, we learned in this discussion that ES6 support isn&#39;t universal yet, but that shouldn&#39;t stop you from taking advantage of the benefits of ES6 right now, because you can trans-compile your ES6 to portable ES5.</blockquote>",
            "url": "http://books.google.com/books?id=5NJdzgEACAAJ&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "JavaScript Programming Series 2: This Book Includes: JavaScript Programming and JavaScript Programming for Beginners",
            "summary": "55 % discount for bookstores ! Now At $25.99 instead of $ 40.28 $ Your customers will never stop reading this guide !!! *2 BOOKS JAVASCRIPTS* UPDATE. In this book, we learned in this discussion that ES6 support isn't universal yet, but that shouldn't stop you from taking advantage of the benefits of ES6 right now, because you can trans-compile your ES6 to portable ES5. Be sure to include the following things when setting up a new development machine. We also learn how to set up a good editor, git (for installation instructions), Gulp (npm install -g gulp), ESLint (npm install -g eslint). We also learn how to begin a new project (whether it's a scratch project to run the examples in this book or a real project), like a dedicated directory for your project; we call this the project root, a Git repository (git init), a package.json file (npm init), a Gulpfile (gulpfile.js; use the one from this topic), gulp and Babel local packages (npm install --save-dev gulp gulp-babel babel-preset-es2015), a .babelrc file (contents: { \"presets\" [\"es2015\"] }), an .eslintrc file (use eslint --init to create it, and edit to your preferences), a subdirectory for Node source (es6), a subdirectory for browser source (public/es6). Your also simple workflow will look like this once you've set it up by making improvements that are logically consistent and connected also to test and lint your code, use Gulp with rep until the improvements are successful and lint-free. Alao makes sure you're not going to do something you don't want to do (git status). Connect any files to yours.gitignore file that you don't want in Git. In the last Add all of your changes to Git (git add -A; if you don't want to add all of your changes, just use git add for each file). Buy it Now and let your customers get addicted to this amazing book !!!",
            "image": "http://books.google.com/books/content?id=5NJdzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-03-20T00:00:00.000Z"
        },
        {
            "content_html": "A practical guide for the rapid web application development with Flask KEY FEATURES ● Expert-led coverage of core capabilities of Flask, key extensions and its implementation. ● Explore the Werkzeug toolkit and Jinja Template engine and see how Flask interacts with JavaScript and CSS. ● Detailed modules on building and deploying RESTful applications using Flask. DESCRIPTION This book teaches the reader the complete workflow of developing web applications using Python and its most outperforming microframework, Flask. The book begins with getting you up to speed in developing a strong understanding of the web application development process and how Python is used in developing the applications. You will learn how to write your own first Flask-based web application in Python. You will learn about web gateway interfaces, including CGI and WSGI along with various tools like the Jinja 2 engine, Werkzeug toolkit, and Click toolkit. You will learn and practice the core features of Flask such as URL routing, rendering, handling static assets of a web application, how to handle cookies and sessions, and other HTTP objects. Once you have developed a strong knowledge of Flask, you will now dive deeper into advanced topics that includes Flask extensions for working with relational and NoSQL databases, Flask_WTF, and Flask-Bootstrap. You will explore design patterns, various blueprints on how to build modular and scalable applications, and finally how to deploy the RESTful APIs successfully on your own. WHAT YOU WILL LEARN ● Get to know everything about the core capabilities of Flask. ● Understand the basic building blocks of Flask. ● Get familiar with advanced features of Flask, including blueprints, Flask extensions, and database connectivity. ● Get ready to design your own Flask-based web applications and RESTful APIs. ● Learn to build modular and scalable applications and how to deploy them successfully. WHO THIS BOOK IS FOR This book is ideal for Python enthusiasts, open source contributors, and web app developers who intend to add Python web technologies in their skillsets and startup companies. The understanding of the core Python language with intermediate level expertise is required and experience of working with SQL, HTML, CSS, and JavaScript is an added advantage. TABLE OF CONTENTS 1. Python for CGI 2. WSGI 3. Flask Fundamentals 4. URL Routing 5. Rendering Templates 6. Static Files 7. HTTP Objects 8. Using Databases 9. More Flask Extensions 10. Blueprints and Contexts 11. Web API with Flask 12. Deploying Flask Applications 13. Appendix<br><blockquote>DESCRIPTION This book teaches the reader the complete workflow of developing web applications using Python and its most outperforming microframework, Flask.</blockquote>",
            "url": "http://books.google.com/books?id=gtwiEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=4&source=gbs_api",
            "title": "Building Web Apps with Python and Flask",
            "summary": "A practical guide for the rapid web application development with Flask KEY FEATURES ● Expert-led coverage of core capabilities of Flask, key extensions and its implementation. ● Explore the Werkzeug toolkit and Jinja Template engine and see how Flask interacts with JavaScript and CSS. ● Detailed modules on building and deploying RESTful applications using Flask. DESCRIPTION This book teaches the reader the complete workflow of developing web applications using Python and its most outperforming microframework, Flask. The book begins with getting you up to speed in developing a strong understanding of the web application development process and how Python is used in developing the applications. You will learn how to write your own first Flask-based web application in Python. You will learn about web gateway interfaces, including CGI and WSGI along with various tools like the Jinja 2 engine, Werkzeug toolkit, and Click toolkit. You will learn and practice the core features of Flask such as URL routing, rendering, handling static assets of a web application, how to handle cookies and sessions, and other HTTP objects. Once you have developed a strong knowledge of Flask, you will now dive deeper into advanced topics that includes Flask extensions for working with relational and NoSQL databases, Flask_WTF, and Flask-Bootstrap. You will explore design patterns, various blueprints on how to build modular and scalable applications, and finally how to deploy the RESTful APIs successfully on your own. WHAT YOU WILL LEARN ● Get to know everything about the core capabilities of Flask. ● Understand the basic building blocks of Flask. ● Get familiar with advanced features of Flask, including blueprints, Flask extensions, and database connectivity. ● Get ready to design your own Flask-based web applications and RESTful APIs. ● Learn to build modular and scalable applications and how to deploy them successfully. WHO THIS BOOK IS FOR This book is ideal for Python enthusiasts, open source contributors, and web app developers who intend to add Python web technologies in their skillsets and startup companies. The understanding of the core Python language with intermediate level expertise is required and experience of working with SQL, HTML, CSS, and JavaScript is an added advantage. TABLE OF CONTENTS 1. Python for CGI 2. WSGI 3. Flask Fundamentals 4. URL Routing 5. Rendering Templates 6. Static Files 7. HTTP Objects 8. Using Databases 9. More Flask Extensions 10. Blueprints and Contexts 11. Web API with Flask 12. Deploying Flask Applications 13. Appendix",
            "image": "http://books.google.com/books/content?id=gtwiEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-03-12T00:00:00.000Z"
        },
        {
            "content_html": "55 % discount for bookstores ! Now At $35.99 instead of $ 55.78 $ Your customers will never stop reading this guide !!! JAVASCRIPT PROGRAMMING how to begin a new project (whether it's a scratch project to run the examples in this book or a real project), like a dedicated directory for your project; we call this the project root, a Git repository (git init), a package.json file (npm init), a Gulpfile (gulpfile.js; use the one from this topic), gulp and Babel local packages (npm install --save-dev gulp gulp-babel babel-preset-es2015), a .babelrc file (contents: { \"presets\" [\"es2015\"] }), an .eslintrc file (use eslint --init to create it, and edit to your preferences), a subdirectory for Node source (es6), a subdirectory for browser source (public/es6). Your also simple workflow will look like this once you've set it up by making improvements that are logically consistent and connected also to test and lint your code, use Gulp with rep until the improvements are successful and lint-free. Alao makes sure you're not going to do something you don't want to do (git status). Connect any files to yours.gitignore file that you don't want in Git. In the last Add all of your changes to Git (git add -A; if you don't want to add all of your changes, just use git add for each file). SQL Programming The truth is: SQL stands for Structured Query Language. Many people scoff dubiously when it is announced that SQL is, indeed, a programming language. When people think of programming languages, all that comes to their mind are C++, Python, Java etc, . People disregard SQL as a programming language because of its interface structure and limited functionality. However, they fail to understand that while C++, Python are third level programming languages, and hence more developed, it doesn't change the fact that SQL falls under the umbrella of programming languages. You will also learn: - SQL programming and coding - What is data definition language - Adding, updating, removing data from a database - SQL joins and unions - How to write stored procedures and functions - SQL Transactions - Basics of SQL - SQL Security Would you like to know more? Buy it Now and let your customers get addicted to this amazing book !!!<br><blockquote>55 % discount for bookstores ! Now At $35.99 instead of $ 55.78 $ Your customers will never stop reading this guide !</blockquote>",
            "url": "http://books.google.com/books?id=HtxgzgEACAAJ&dq=JavaScript&hl=&cd=5&source=gbs_api",
            "title": "CODING Series 3: This Book Includes: JavaSript Programming + SQL Programming and Coding",
            "summary": "55 % discount for bookstores ! Now At $35.99 instead of $ 55.78 $ Your customers will never stop reading this guide !!! JAVASCRIPT PROGRAMMING how to begin a new project (whether it's a scratch project to run the examples in this book or a real project), like a dedicated directory for your project; we call this the project root, a Git repository (git init), a package.json file (npm init), a Gulpfile (gulpfile.js; use the one from this topic), gulp and Babel local packages (npm install --save-dev gulp gulp-babel babel-preset-es2015), a .babelrc file (contents: { \"presets\" [\"es2015\"] }), an .eslintrc file (use eslint --init to create it, and edit to your preferences), a subdirectory for Node source (es6), a subdirectory for browser source (public/es6). Your also simple workflow will look like this once you've set it up by making improvements that are logically consistent and connected also to test and lint your code, use Gulp with rep until the improvements are successful and lint-free. Alao makes sure you're not going to do something you don't want to do (git status). Connect any files to yours.gitignore file that you don't want in Git. In the last Add all of your changes to Git (git add -A; if you don't want to add all of your changes, just use git add for each file). SQL Programming The truth is: SQL stands for Structured Query Language. Many people scoff dubiously when it is announced that SQL is, indeed, a programming language. When people think of programming languages, all that comes to their mind are C++, Python, Java etc, . People disregard SQL as a programming language because of its interface structure and limited functionality. However, they fail to understand that while C++, Python are third level programming languages, and hence more developed, it doesn't change the fact that SQL falls under the umbrella of programming languages. You will also learn: - SQL programming and coding - What is data definition language - Adding, updating, removing data from a database - SQL joins and unions - How to write stored procedures and functions - SQL Transactions - Basics of SQL - SQL Security Would you like to know more? Buy it Now and let your customers get addicted to this amazing book !!!",
            "image": "http://books.google.com/books/content?id=HtxgzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-03-19T00:00:00.000Z"
        },
        {
            "content_html": "This book if for absolute beginners, and it is an introduction to the major components of javascript. By learning the bigger things in Javascript, you will be able to know how to put the remaining pieces together and will be able to get into advanced books more prepared. WHAT IS JAVASCRIPT? JavaScript is one of the most popular programming languages in the world, and growing faster than any other programming language. As a developer, you can use JavaScript to build web and mobile apps, real-time networking apps, command-line tools, and games. 4 REASONS TO LEARN JAVASCRIPT JavaScript is a key tool for front-end, back-end, and full-stack developers. The average annual salary for a JavaScript developer is $72,000. Companies like Walmart, Netflix, and PayPal run big internal applications around JavaScript. Having strong JavaScript knowledge will help you land your dream job. Who this book is for: This book is meant for absolute beginners of Javascript This book is meant for students that struggled to learn the language before This book is meant for students with a little HTML knowledge<br><blockquote>This book if for absolute beginners, and it is an introduction to the major components of javascript.</blockquote>",
            "url": "http://books.google.com/books?id=z7D2DwAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=6&source=gbs_api",
            "title": "2021 JavaScript Programming for Beginners",
            "summary": "This book if for absolute beginners, and it is an introduction to the major components of javascript. By learning the bigger things in Javascript, you will be able to know how to put the remaining pieces together and will be able to get into advanced books more prepared. WHAT IS JAVASCRIPT? JavaScript is one of the most popular programming languages in the world, and growing faster than any other programming language. As a developer, you can use JavaScript to build web and mobile apps, real-time networking apps, command-line tools, and games. 4 REASONS TO LEARN JAVASCRIPT JavaScript is a key tool for front-end, back-end, and full-stack developers. The average annual salary for a JavaScript developer is $72,000. Companies like Walmart, Netflix, and PayPal run big internal applications around JavaScript. Having strong JavaScript knowledge will help you land your dream job. Who this book is for: This book is meant for absolute beginners of Javascript This book is meant for students that struggled to learn the language before This book is meant for students with a little HTML knowledge",
            "image": "http://books.google.com/books/content?id=z7D2DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-01-09T00:00:00.000Z"
        },
        {
            "content_html": "The book is written in a cookbook style. Each recipe focuses on a concept in the WebAssembly world. Part 1 focuses on the basics of WebAssembly, WebAssembly Text Format, onboarding and using various tools like WABT, Binaryen. Chapter 1 gives a brief introduction to LLVM. What it is and how to use it. Chapter 2 introduces you into the emscripten world. Emscripten is a toolchain that helps to convert C/C++ into WebAssembly module. We will see how to install and manage the emscripten toolchain. Create our first WebAssembly module and run it on the browser and Node environment. Chapter 3 explores the WebAssembly module, how the module is made and what are the different sections. We will also explore the WebAssembly Text Format and how to write WebAssembly Text Format and convert it to WebAssembly binary. Chapter 4 explores how to install and use WebAssembly Binary Toolkit (WABT). Chapter 5 explores various section inside the WebAssembly binary and what are its purpose. Chapter 6 explores how to install and use Binaryen. Part 2 focuses on converting Rust to WebAssembly for fast, reliable code to run on the JavaScript Engine. Find out various ways of sharing data between Rust and WebAssembly. Explore how to use various tools that Rust and WebAssembly ecosystem provides. Chapter 7 starts with Rust and various ways to convert Rust into WebAssembly module and ends with wasm_bindgen. Chapter 8 focuses on how wasm bindgen along with crates like js-sys, web-sys helps to share entities from the WebAssembly world to JavaScript world. Chapter 9 explores wasm-pack and how it makes it easy to build Rust and WebAssembly application. Chapter 10 explores some Rust and WebAssembly examples. Chapter 11 briefly introduces WebAssembly System Interface (WASI) and various ways to run WASI.<br><blockquote>The book is written in a cookbook style.</blockquote>",
            "url": "http://books.google.com/books?id=IG0MEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "\\0asm 01 - Rust and WebAssembly",
            "summary": "The book is written in a cookbook style. Each recipe focuses on a concept in the WebAssembly world. Part 1 focuses on the basics of WebAssembly, WebAssembly Text Format, onboarding and using various tools like WABT, Binaryen. Chapter 1 gives a brief introduction to LLVM. What it is and how to use it. Chapter 2 introduces you into the emscripten world. Emscripten is a toolchain that helps to convert C/C++ into WebAssembly module. We will see how to install and manage the emscripten toolchain. Create our first WebAssembly module and run it on the browser and Node environment. Chapter 3 explores the WebAssembly module, how the module is made and what are the different sections. We will also explore the WebAssembly Text Format and how to write WebAssembly Text Format and convert it to WebAssembly binary. Chapter 4 explores how to install and use WebAssembly Binary Toolkit (WABT). Chapter 5 explores various section inside the WebAssembly binary and what are its purpose. Chapter 6 explores how to install and use Binaryen. Part 2 focuses on converting Rust to WebAssembly for fast, reliable code to run on the JavaScript Engine. Find out various ways of sharing data between Rust and WebAssembly. Explore how to use various tools that Rust and WebAssembly ecosystem provides. Chapter 7 starts with Rust and various ways to convert Rust into WebAssembly module and ends with wasm_bindgen. Chapter 8 focuses on how wasm bindgen along with crates like js-sys, web-sys helps to share entities from the WebAssembly world to JavaScript world. Chapter 9 explores wasm-pack and how it makes it easy to build Rust and WebAssembly application. Chapter 10 explores some Rust and WebAssembly examples. Chapter 11 briefly introduces WebAssembly System Interface (WASI) and various ways to run WASI.",
            "image": "http://books.google.com/books/content?id=IG0MEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-12-03T00:00:00.000Z"
        },
        {
            "content_html": "This Book includes: Javascript Basics For Beginners Javascript Front End Programming Javascript Back End Programming Gain a deep understanding of Basics, front-end programming and back-end programming using JavaScript with this handy book! This book is written in a practical and easy way and offers theory and plenty of practical material. There are explanations and practical examples that help beginners learn fast. Instead of diving deeper into lengthy and boring texts, I tried to get straight to the point for each topic. I have defined each topic and added an easy to understand explanation to help you understand the concepts and the main keywords that will do the magic in the code. Coupled with the explanation, you will find a code snippet for each topic that is custom written and has been tested for errors. You can copy them and load them up on a web browser to see the results, or you can simply edit them and customize them to understand them well. The choice is yours. First book is written in an orderly form with beginner-level topics and progressively tougher topics later on. Second book is focusing on React JS, this guide is aimed at those who already have a programming background and some experience in programming for the web but need to brush up on their skills and learn new ones. Third book will take you through the important concepts involved in using Node.js to build your server-side applications. Each chapter is self-contained with its own practical but simple examples to show you how it works. By the end of this book, you will have all the knowledge you need to put together your own web application!Here is a rundown of the contents of the book. JavaScript Use Cases Variables Constants Prompts Conditionals Arrays Strings JavaScript For and While Loops Functions Objects Classes Learn how to set up your React JS environment. Discover what ReactJS is all about. Read in depth about the React JS components. Find out about the React JS props, state, and lifecycle. Investigate React JS forms, events, and refs. Learn about React JS Keys. Understand the React JS Router. Explore React JS Flux and animations. Learn about React JS Higher Order Components. Discover the React JS best practice guide. Learn how to set up your Node.js environment. Explore everything about the REPL Terminal. Read about the Node.js package manager. Discover Node.js callbacks and asynchronous JS. Find out about Node.js events, buffers, streams, and the file system. Investigate Node.js global objects and the global object - they are different. Learn about Node.js modules, utility modules, the web module, and more. Find out about the Express framework. Learn RESTful API. Discover how to scale applications. Find out how to package applications. And so much more! Now is your chance to delve into Javascript basics with this easy to follow guide. With the many examples and code snippets, you'll have everything you need at your fingertips. Click the Buy Now button to get started today!<br><blockquote>This Book includes: Javascript Basics For Beginners Javascript Front End Programming Javascript Back End Programming Gain a deep understanding of Basics, front-end programming and back-end programming using JavaScript with this handy book!</blockquote>",
            "url": "http://books.google.com/books?id=cSNYzgEACAAJ&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "Javascript",
            "summary": "This Book includes: Javascript Basics For Beginners Javascript Front End Programming Javascript Back End Programming Gain a deep understanding of Basics, front-end programming and back-end programming using JavaScript with this handy book! This book is written in a practical and easy way and offers theory and plenty of practical material. There are explanations and practical examples that help beginners learn fast. Instead of diving deeper into lengthy and boring texts, I tried to get straight to the point for each topic. I have defined each topic and added an easy to understand explanation to help you understand the concepts and the main keywords that will do the magic in the code. Coupled with the explanation, you will find a code snippet for each topic that is custom written and has been tested for errors. You can copy them and load them up on a web browser to see the results, or you can simply edit them and customize them to understand them well. The choice is yours. First book is written in an orderly form with beginner-level topics and progressively tougher topics later on. Second book is focusing on React JS, this guide is aimed at those who already have a programming background and some experience in programming for the web but need to brush up on their skills and learn new ones. Third book will take you through the important concepts involved in using Node.js to build your server-side applications. Each chapter is self-contained with its own practical but simple examples to show you how it works. By the end of this book, you will have all the knowledge you need to put together your own web application!Here is a rundown of the contents of the book. JavaScript Use Cases Variables Constants Prompts Conditionals Arrays Strings JavaScript For and While Loops Functions Objects Classes Learn how to set up your React JS environment. Discover what ReactJS is all about. Read in depth about the React JS components. Find out about the React JS props, state, and lifecycle. Investigate React JS forms, events, and refs. Learn about React JS Keys. Understand the React JS Router. Explore React JS Flux and animations. Learn about React JS Higher Order Components. Discover the React JS best practice guide. Learn how to set up your Node.js environment. Explore everything about the REPL Terminal. Read about the Node.js package manager. Discover Node.js callbacks and asynchronous JS. Find out about Node.js events, buffers, streams, and the file system. Investigate Node.js global objects and the global object - they are different. Learn about Node.js modules, utility modules, the web module, and more. Find out about the Express framework. Learn RESTful API. Discover how to scale applications. Find out how to package applications. And so much more! Now is your chance to delve into Javascript basics with this easy to follow guide. With the many examples and code snippets, you'll have everything you need at your fingertips. Click the Buy Now button to get started today!",
            "image": "http://books.google.com/books/content?id=cSNYzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-03-08T00:00:00.000Z"
        },
        {
            "content_html": "This book is simplified version to make you fully understand JavaScript. This book is simple enough to make you fully understand JavaScript and ES6 without wasting your time and buggle your brain with complex theories or explanations. This book is fully practical in nature and simplified JavaScript for easy consumption. If you want to start your carrier as Frontend Web Developer in the most easiest way, this is a good way to start. Infact, a 10 year old can easily follow our guides without any problem.<br><blockquote>This book is simplified version to make you fully understand JavaScript. This book is simple enough to make you fully understand JavaScript and ES6 without wasting your time and buggle your brain with complex theories or explanations.</blockquote>",
            "url": "http://books.google.com/books?id=xRFCzgEACAAJ&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "JavaScript Simplified",
            "summary": "This book is simplified version to make you fully understand JavaScript. This book is simple enough to make you fully understand JavaScript and ES6 without wasting your time and buggle your brain with complex theories or explanations. This book is fully practical in nature and simplified JavaScript for easy consumption. If you want to start your carrier as Frontend Web Developer in the most easiest way, this is a good way to start. Infact, a 10 year old can easily follow our guides without any problem.",
            "image": "http://books.google.com/books/content?id=xRFCzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-02-05T00:00:00.000Z"
        }
    ]
}