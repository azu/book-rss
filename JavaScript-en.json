{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "The Art of Unit Testing, Third Edition takes you below the surface and understand how unit testing can transform the way you deliver and maintain software. The Art of Unit Testing, Third Edition guides you step by step from your first simple unit tests to building complete test sets that are maintainable, readable, and trustworthy. Now with examples using JavaScript and Node, this expanded third edition teaches you to write unit tests for async and observable code, as well as methods of faking functions, modules and refactorings. You’ll get to grips with complex subjects such as mocks and stubs, explore how to handle tricky legacy codebases, and save yourself time with tests that function for both frontend and backend applications. The Art of Unit Testing, Third Edition is an essential guide for any unit tester who wants to feel confident writing code that’s easier to create, maintain, and adapt. Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.<br><blockquote>Now with examples using JavaScript and Node, this expanded third edition teaches you to write unit tests for async and observable code, as well as methods of faking functions, modules and refactorings.</blockquote>",
            "url": "http://books.google.com/books?id=kUAtzwEACAAJ&dq=JavaScript&hl=&cd=1&source=gbs_api",
            "title": "The Art of Unit Testing, Third Edition",
            "summary": "The Art of Unit Testing, Third Edition takes you below the surface and understand how unit testing can transform the way you deliver and maintain software. The Art of Unit Testing, Third Edition guides you step by step from your first simple unit tests to building complete test sets that are maintainable, readable, and trustworthy. Now with examples using JavaScript and Node, this expanded third edition teaches you to write unit tests for async and observable code, as well as methods of faking functions, modules and refactorings. You’ll get to grips with complex subjects such as mocks and stubs, explore how to handle tricky legacy codebases, and save yourself time with tests that function for both frontend and backend applications. The Art of Unit Testing, Third Edition is an essential guide for any unit tester who wants to feel confident writing code that’s easier to create, maintain, and adapt. Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.",
            "image": "http://books.google.com/books/content?id=kUAtzwEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2022-12-27T00:00:00.000Z"
        },
        {
            "content_html": "Delve into the world of web development with Vue.js, Node.js, and MongoDB by exploring essential JavaScript concepts on the client side and the server side Key FeaturesGet up and running with JavaScript, the most popular web development language in the worldCut through the complexity and focus on the simple aspects of web developmentBuild a simple web application using Vue.js, Node.js, and MongoDBBook Description JavaScript, the most widely used programming language in the world, has numerous libraries and modules and a dizzying array of need-to-know topics. Picking a starting point can be difficult. Enter JavaScript from Frontend to Backend. This concise, practical guide will get you up to speed in next to no time. This book begins with the basics of variables and objects in JavaScript and then moves quickly on to building components on the client-side with Vue.js and a simple list management application. After that, the focus shifts to the server-side and Node.js, where you'll examine the MVC model and explore the Express module. Once you've got to grips with the server-side and the client-side, the only thing that remains is the database. You'll discover MongoDB and the Mongoose module. In the final chapter of this fast-paced guide, you'll combine all these pieces to integrate a Vue.js application into a Node.js server, using Express to structure the server code and MongoDB to store the information. By the end of this book, you will have the skills and confidence to successfully implement JavaScript concepts in your own projects and begin your career as a JavaScript developer. What you will learnTrigger deferred processing with JavaScriptImplement Express and MongoDB with Node.jsBuild components with Vue.jsUnderstand how to create and use modules with Node.jsFamiliarize yourself with npmBuild a client-side application entirely with JavaScriptDive into full stack development with Vue.js, Node.js, and MongoDBWho this book is for This book is for JavaScript developers looking to strengthen their core JavaScript concepts and implement them in building full stack apps. Prior knowledge of HTML and CSS is a must.<br><blockquote>Picking a starting point can be difficult. Enter JavaScript from Frontend to Backend. This concise, practical guide will get you up to speed in next to no time.</blockquote>",
            "url": "http://books.google.com/books?id=qOV5EAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=2&source=gbs_api",
            "title": "JavaScript from Frontend to Backend",
            "summary": "Delve into the world of web development with Vue.js, Node.js, and MongoDB by exploring essential JavaScript concepts on the client side and the server side Key FeaturesGet up and running with JavaScript, the most popular web development language in the worldCut through the complexity and focus on the simple aspects of web developmentBuild a simple web application using Vue.js, Node.js, and MongoDBBook Description JavaScript, the most widely used programming language in the world, has numerous libraries and modules and a dizzying array of need-to-know topics. Picking a starting point can be difficult. Enter JavaScript from Frontend to Backend. This concise, practical guide will get you up to speed in next to no time. This book begins with the basics of variables and objects in JavaScript and then moves quickly on to building components on the client-side with Vue.js and a simple list management application. After that, the focus shifts to the server-side and Node.js, where you'll examine the MVC model and explore the Express module. Once you've got to grips with the server-side and the client-side, the only thing that remains is the database. You'll discover MongoDB and the Mongoose module. In the final chapter of this fast-paced guide, you'll combine all these pieces to integrate a Vue.js application into a Node.js server, using Express to structure the server code and MongoDB to store the information. By the end of this book, you will have the skills and confidence to successfully implement JavaScript concepts in your own projects and begin your career as a JavaScript developer. What you will learnTrigger deferred processing with JavaScriptImplement Express and MongoDB with Node.jsBuild components with Vue.jsUnderstand how to create and use modules with Node.jsFamiliarize yourself with npmBuild a client-side application entirely with JavaScriptDive into full stack development with Vue.js, Node.js, and MongoDBWho this book is for This book is for JavaScript developers looking to strengthen their core JavaScript concepts and implement them in building full stack apps. Prior knowledge of HTML and CSS is a must.",
            "image": "http://books.google.com/books/content?id=qOV5EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-07-06T00:00:00.000Z"
        },
        {
            "content_html": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.<br><blockquote>Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT.</blockquote>",
            "url": "http://books.google.com/books?id=WSUuEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "Structure and Interpretation of Computer Programs",
            "summary": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.",
            "image": "http://books.google.com/books/content?id=WSUuEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-05-03T00:00:00.000Z"
        },
        {
            "content_html": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.<br><blockquote>Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT.</blockquote>",
            "url": "http://books.google.com/books?id=4rtNEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=4&source=gbs_api",
            "title": "Structure and Interpretation of Computer Programs",
            "summary": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.",
            "image": "http://books.google.com/books/content?id=4rtNEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-04-12T00:00:00.000Z"
        },
        {
            "content_html": "JavaScript today must interact with data-intensive APIs and networks. The solution is a program that can work asynchronously instead of finishing tasks in order. In modern JavaScript, instead of callbacks you'll use promises to improve your application's performance and responsiveness. JavaScript features introduced in ES2020, ES2021, and ESNext like Promise.allSettled(), Promise.any(), and top-level await help you develop small, fast, low-profile applications. With the AbortController API, cancel a pending async request before it has completed. Modern Asynchronous JavaScript gives you an arsenal of tools to build programs that always respond to user requests, recover quickly from difficult conditions, and deliver maximum performance. Applications today must work with information on remote servers, and users expect a quick response to complex interactions at all times, whether on a high-speed 5G cellular network or slow public WiFi. JavaScript provides developers with advanced tools to coordinate the asynchronous parts of their code efficiently and deliver responsive programs. Faster applications equal happier users, which is the promise of asynchronous JavaScript. With Modern Asynchronous JavaScript you'll learn techniques for managing your async code. Features like ES2021 Promise.any() allow you to safeguard your async code from external issues that are out of your control like server downtime. You'll discover secret weapons like top-level await to initialize resources, define dependency paths dynamically, and load dependencies with a fallback implementation. You'll even learn to how to set a time limit for async requests and react if they take too long to complete. Fast, reliable applications are a must in today's world, where users demand increasingly greater amounts of data on mobile devices. Asynchronous programming may require more cautious planning than synchronous programming but the outcome is rewarding. Asynchronous JavaScript allows you to write code that is nimble but reliable, leading to programs that load faster, respond quicker, and most importantly that you can trust to function properly. What You Need: You'll need an intermediate level of JavaScript programming skills and a browser that supports features from ES2020, ES2021, and ESNext.<br><blockquote>Modern Asynchronous JavaScript gives you an arsenal of tools to build programs that always respond to user requests, recover quickly from difficult conditions, and deliver maximum performance.</blockquote>",
            "url": "http://books.google.com/books?id=GDZVEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=5&source=gbs_api",
            "title": "Modern Asynchronous JavaScript",
            "summary": "JavaScript today must interact with data-intensive APIs and networks. The solution is a program that can work asynchronously instead of finishing tasks in order. In modern JavaScript, instead of callbacks you'll use promises to improve your application's performance and responsiveness. JavaScript features introduced in ES2020, ES2021, and ESNext like Promise.allSettled(), Promise.any(), and top-level await help you develop small, fast, low-profile applications. With the AbortController API, cancel a pending async request before it has completed. Modern Asynchronous JavaScript gives you an arsenal of tools to build programs that always respond to user requests, recover quickly from difficult conditions, and deliver maximum performance. Applications today must work with information on remote servers, and users expect a quick response to complex interactions at all times, whether on a high-speed 5G cellular network or slow public WiFi. JavaScript provides developers with advanced tools to coordinate the asynchronous parts of their code efficiently and deliver responsive programs. Faster applications equal happier users, which is the promise of asynchronous JavaScript. With Modern Asynchronous JavaScript you'll learn techniques for managing your async code. Features like ES2021 Promise.any() allow you to safeguard your async code from external issues that are out of your control like server downtime. You'll discover secret weapons like top-level await to initialize resources, define dependency paths dynamically, and load dependencies with a fallback implementation. You'll even learn to how to set a time limit for async requests and react if they take too long to complete. Fast, reliable applications are a must in today's world, where users demand increasingly greater amounts of data on mobile devices. Asynchronous programming may require more cautious planning than synchronous programming but the outcome is rewarding. Asynchronous JavaScript allows you to write code that is nimble but reliable, leading to programs that load faster, respond quicker, and most importantly that you can trust to function properly. What You Need: You'll need an intermediate level of JavaScript programming skills and a browser that supports features from ES2020, ES2021, and ESNext.",
            "image": "http://books.google.com/books/content?id=GDZVEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-12-17T00:00:00.000Z"
        },
        {
            "content_html": "Why reinvent the wheel every time you run into a problem with JavaScript? This cookbook is chock-full of code recipes for common programming tasks, along with techniques for building apps that work in any browser. You'll get adaptable code samples that you can add to almost any project--and you'll learn more about JavaScript in the process. The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards. You'll learn how to: Set up a productive development environment with a code editor, linter, and test server Work with JavaScript data types, such as strings, arrays, and BigInts Improve your understanding of JavaScript functions, including arrow functions, closures, and generators Apply object-oriented programming concepts like classes and inheritance Work with rich media in JavaScript, including audio, video, and SVGs Manipulate HTML markup and CSS styles Use JavaScript anywhere with Node.js Access and manipulate remote data with REST, GraphQL, and Fetch Get started with the popular Express application-building framework Perform asynchronous operations with Promises, async/await, and web workers<br><blockquote>The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards.</blockquote>",
            "url": "http://books.google.com/books?id=4tA4EAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=6&source=gbs_api",
            "title": "JavaScript Cookbook",
            "summary": "Why reinvent the wheel every time you run into a problem with JavaScript? This cookbook is chock-full of code recipes for common programming tasks, along with techniques for building apps that work in any browser. You'll get adaptable code samples that you can add to almost any project--and you'll learn more about JavaScript in the process. The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards. You'll learn how to: Set up a productive development environment with a code editor, linter, and test server Work with JavaScript data types, such as strings, arrays, and BigInts Improve your understanding of JavaScript functions, including arrow functions, closures, and generators Apply object-oriented programming concepts like classes and inheritance Work with rich media in JavaScript, including audio, video, and SVGs Manipulate HTML markup and CSS styles Use JavaScript anywhere with Node.js Access and manipulate remote data with REST, GraphQL, and Fetch Get started with the popular Express application-building framework Perform asynchronous operations with Promises, async/await, and web workers",
            "image": "http://books.google.com/books/content?id=4tA4EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-16T00:00:00.000Z"
        },
        {
            "content_html": "Little known to many, R works just as well with JavaScript—this book delves into the various ways both languages can work together. The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow. In that respect the book is not teaching one JavaScript but rather we show how little JavaScript can greatly support and enhance R code. Therefore, the focus is on integrating external JavaScript libraries and no prior knowledge of JavaScript is required. Key Features: ● Easy to pick up. ● An entry way to learning JavaScript for R. ● Covers topics not covered anywhere else. ● Easy to follow along.<br><blockquote>The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow.</blockquote>",
            "url": "http://books.google.com/books?id=ntUxEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "Javascript for R",
            "summary": "Little known to many, R works just as well with JavaScript—this book delves into the various ways both languages can work together. The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow. In that respect the book is not teaching one JavaScript but rather we show how little JavaScript can greatly support and enhance R code. Therefore, the focus is on integrating external JavaScript libraries and no prior knowledge of JavaScript is required. Key Features: ● Easy to pick up. ● An entry way to learning JavaScript for R. ● Covers topics not covered anywhere else. ● Easy to follow along.",
            "image": "http://books.google.com/books/content?id=ntUxEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-15T00:00:00.000Z"
        },
        {
            "content_html": "Learn to use JavaScript, the popular scripting language that allows web page authors to develop interactive web pages and sites. Carey/Vodnik's JAVASCRIPT FOR WEB WARRIORS, Seventh Edition introduces a variety of techniques that focus on what you need to know to begin using JavaScript right away. Step-by-step tasks within each chapter focus on particular techniques essential for building actual JavaScript programs. Guided activities reinforce skills and build in complexity as you progress. You also study debugging techniques. This edition's text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications. Learning objectives, summaries, review and key terms highlight major concepts while reinforcement exercises let you further practice new techniques. After completing this course, you will able to use JavaScript to build professional quality web applications. Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.<br><blockquote>You also study debugging techniques. This edition&#39;s text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications.</blockquote>",
            "url": "http://books.google.com/books?id=Iwk1EAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=8&source=gbs_api",
            "title": "JavaScript for Web Warriors",
            "summary": "Learn to use JavaScript, the popular scripting language that allows web page authors to develop interactive web pages and sites. Carey/Vodnik's JAVASCRIPT FOR WEB WARRIORS, Seventh Edition introduces a variety of techniques that focus on what you need to know to begin using JavaScript right away. Step-by-step tasks within each chapter focus on particular techniques essential for building actual JavaScript programs. Guided activities reinforce skills and build in complexity as you progress. You also study debugging techniques. This edition's text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications. Learning objectives, summaries, review and key terms highlight major concepts while reinforcement exercises let you further practice new techniques. After completing this course, you will able to use JavaScript to build professional quality web applications. Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.",
            "image": "http://books.google.com/books/content?id=Iwk1EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-06T00:00:00.000Z"
        },
        {
            "content_html": "Discover how to take advantage of common cryptographic operations to build safer apps that respect users' privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common cryptographic operations in your code with practical examples Learn about picking modern safe algorithms, which libraries you should rely on, and how to use them correctly Build modern and secure applications that respect your users' privacy with cryptography Book Description: If you're a software developer, this book will give you an introduction to cryptography, helping you understand how to make the most of it for your applications. The book contains extensive code samples in JavaScript, both for Node.js and for frontend apps running in a web browser, although the core concepts can be used by developers working with any programming language and framework. With a purely hands-on approach that is focused on sharing actionable knowledge, you'll learn about the common categories of cryptographic operations that you can leverage in all apps you're developing, including hashing, encryption with symmetric, asymmetric and hybrid ciphers, and digital signatures. You'll learn when to use these operations and how to choose and implement the most popular algorithms to perform them, including SHA-2, Argon2, AES, ChaCha20-Poly1305, RSA, and Elliptic Curve Cryptography. Later, you'll learn how to deal with password and key management. All code in this book is written in JavaScript and designed to run in Node.js or as part of frontend apps for web browsers. By the end of this book, you'll be able to build solutions that leverage cryptography to protect user privacy, offer better security against an expanding and more complex threat landscape, help meet data protection requirements, and unlock new opportunities. What You Will Learn: Write JavaScript code that uses cryptography running within a Node.js environment for the server-side or in frontend applications for web browsers Use modern, safe hashing functions for calculating digests and key derivation, including SHA-2 and Argon2 Practice encrypting messages and files with a symmetric key using AES and ChaCha20-Poly1305 Use asymmetric and hybrid encryption, leveraging RSA and Elliptic Curve Cryptography with ECDH and ECIES Calculate and verify digital signatures using RSA and ECDSA/EdDSA Manage passwords and encryption keys safely Who this book is for: This cryptography book is an introductory guide for software developers who don't necessarily have a background in cryptography but are interested in learning how to integrate it in their solutions, correctly and safely. You'll need to have at least intermediate-level knowledge of building apps with JavaScript and familiarity with Node.js to make the most of this book.<br><blockquote>Discover how to take advantage of common cryptographic operations to build safer apps that respect users&#39; privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common ...</blockquote>",
            "url": "http://books.google.com/books?id=YNaczgEACAAJ&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "Essential Cryptography for JavaScript Developers",
            "summary": "Discover how to take advantage of common cryptographic operations to build safer apps that respect users' privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common cryptographic operations in your code with practical examples Learn about picking modern safe algorithms, which libraries you should rely on, and how to use them correctly Build modern and secure applications that respect your users' privacy with cryptography Book Description: If you're a software developer, this book will give you an introduction to cryptography, helping you understand how to make the most of it for your applications. The book contains extensive code samples in JavaScript, both for Node.js and for frontend apps running in a web browser, although the core concepts can be used by developers working with any programming language and framework. With a purely hands-on approach that is focused on sharing actionable knowledge, you'll learn about the common categories of cryptographic operations that you can leverage in all apps you're developing, including hashing, encryption with symmetric, asymmetric and hybrid ciphers, and digital signatures. You'll learn when to use these operations and how to choose and implement the most popular algorithms to perform them, including SHA-2, Argon2, AES, ChaCha20-Poly1305, RSA, and Elliptic Curve Cryptography. Later, you'll learn how to deal with password and key management. All code in this book is written in JavaScript and designed to run in Node.js or as part of frontend apps for web browsers. By the end of this book, you'll be able to build solutions that leverage cryptography to protect user privacy, offer better security against an expanding and more complex threat landscape, help meet data protection requirements, and unlock new opportunities. What You Will Learn: Write JavaScript code that uses cryptography running within a Node.js environment for the server-side or in frontend applications for web browsers Use modern, safe hashing functions for calculating digests and key derivation, including SHA-2 and Argon2 Practice encrypting messages and files with a symmetric key using AES and ChaCha20-Poly1305 Use asymmetric and hybrid encryption, leveraging RSA and Elliptic Curve Cryptography with ECDH and ECIES Calculate and verify digital signatures using RSA and ECDSA/EdDSA Manage passwords and encryption keys safely Who this book is for: This cryptography book is an introductory guide for software developers who don't necessarily have a background in cryptography but are interested in learning how to integrate it in their solutions, correctly and safely. You'll need to have at least intermediate-level knowledge of building apps with JavaScript and familiarity with Node.js to make the most of this book.",
            "image": "http://books.google.com/books/content?id=YNaczgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2022-02-28T00:00:00.000Z"
        },
        {
            "content_html": "Mastering advanced JavaScript to build modern next-generation web applications. KEY FEATURES ● A simplified explanation of complex concepts to create powerful and flexible web applications. ● Learn testing JavaScript code, regular expressions, fetching data, and many more with ES6. ● A full-fledged section dedicated to developing an application using JavaScript. DESCRIPTION Decoding JavaScript will take the users on an eventful journey of simplifying and understanding advanced concepts of JavaScript. Since JavaScript is the core programming language for almost every interaction on the web, this book will make it easier for readers to develop modern cutting-edge web applications. The book begins with a quick recap of the fundamental JavaScript (JS) concepts like the syntax of JS, data types, operators, conditionals, looping, functions, arrays, objects, and so on. The readers will also explore the handy Chrome Developers’ Tools. This book will also help readers learn and implement important concepts like how to connect to the servers, fetching data like images, user information, videos, etc. from the server, and displaying it on the web page. Besides that, users will learn about impactful concepts like testing JavaScript code, regular expressions, and exploring the popular ES6 and the versions beyond. Most importantly, this book will help you with the best JavaScript practices followed by companies like Google, Facebook, Twitter, etc. to develop a live application right from scratch. WHAT YOU WILL LEARN ● Build dynamic web applications interacting with servers using Vanilla. ● Improve code efficiency by learning advanced concepts of JavaScript. ● Get acquainted with best practices adopted by industry leaders, including Google and Facebook. ● Get access to work with popular libraries like ReactJS, jQuery, Angular, Ember, and Vue. WHO THIS BOOK IS FOR This book is for aspiring web developers and fairly experienced JavaScript developers who want to create modern web and server applications. Prior knowledge of HTML and CSS is essential to begin with this book. TABLE OF CONTENTS 1. Introduction to JavaScript 2. The Developer’s Tools 3. Functions 4. Arrays 5. Objects 6. ES6 7. Classes 8. Callbacks and Promises 9. AJAX and Interacting with Servers 10. Developing a Live Application! 11. Storing Data in Browsers 12. Debugging and Error Handling 13. Testing and Test Frameworks 14. Regular Expressions 15. Life after ES6 16. Tips and Tricks<br><blockquote>WHO THIS BOOK IS FORÊÊ This book is for aspiring web developers and fairly experienced JavaScript developers who want to create modern web and server applications. Prior knowledge of HTML and CSS is essential to begin with this book.</blockquote>",
            "url": "http://books.google.com/books?id=8novEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "Decoding JavaScript",
            "summary": "Mastering advanced JavaScript to build modern next-generation web applications. KEY FEATURES ● A simplified explanation of complex concepts to create powerful and flexible web applications. ● Learn testing JavaScript code, regular expressions, fetching data, and many more with ES6. ● A full-fledged section dedicated to developing an application using JavaScript. DESCRIPTION Decoding JavaScript will take the users on an eventful journey of simplifying and understanding advanced concepts of JavaScript. Since JavaScript is the core programming language for almost every interaction on the web, this book will make it easier for readers to develop modern cutting-edge web applications. The book begins with a quick recap of the fundamental JavaScript (JS) concepts like the syntax of JS, data types, operators, conditionals, looping, functions, arrays, objects, and so on. The readers will also explore the handy Chrome Developers’ Tools. This book will also help readers learn and implement important concepts like how to connect to the servers, fetching data like images, user information, videos, etc. from the server, and displaying it on the web page. Besides that, users will learn about impactful concepts like testing JavaScript code, regular expressions, and exploring the popular ES6 and the versions beyond. Most importantly, this book will help you with the best JavaScript practices followed by companies like Google, Facebook, Twitter, etc. to develop a live application right from scratch. WHAT YOU WILL LEARN ● Build dynamic web applications interacting with servers using Vanilla. ● Improve code efficiency by learning advanced concepts of JavaScript. ● Get acquainted with best practices adopted by industry leaders, including Google and Facebook. ● Get access to work with popular libraries like ReactJS, jQuery, Angular, Ember, and Vue. WHO THIS BOOK IS FOR This book is for aspiring web developers and fairly experienced JavaScript developers who want to create modern web and server applications. Prior knowledge of HTML and CSS is essential to begin with this book. TABLE OF CONTENTS 1. Introduction to JavaScript 2. The Developer’s Tools 3. Functions 4. Arrays 5. Objects 6. ES6 7. Classes 8. Callbacks and Promises 9. AJAX and Interacting with Servers 10. Developing a Live Application! 11. Storing Data in Browsers 12. Debugging and Error Handling 13. Testing and Test Frameworks 14. Regular Expressions 15. Life after ES6 16. Tips and Tricks",
            "image": "http://books.google.com/books/content?id=8novEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-05-21T00:00:00.000Z"
        }
    ]
}