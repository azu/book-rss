{
    "version": "https://jsonfeed.org/version/1",
    "title": "TypeScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/TypeScript-en.json",
    "description": "TypeScript(en) on Google Book",
    "items": [
        {
            "content_html": "TypeScript is among the fastest-growing languages, helping developers build full-stack apps by integrating with powerful frameworks such as React and Node.js. With this book, you’ll get started with TypeScript and build an SPA with React and middleware using Node.js and Express. Finally, you’ll be able to package your web app and deploy it on AWS.<br><blockquote>With this book, you’ll get started with TypeScript and build an SPA with React and middleware using Node.js and Express. Finally, you’ll be able to package your web app and deploy it on AWS.</blockquote>",
            "url": "http://books.google.com/books?id=uUMQEAAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=1&source=gbs_api",
            "title": "Full-Stack React, TypeScript, and Node",
            "summary": "TypeScript is among the fastest-growing languages, helping developers build full-stack apps by integrating with powerful frameworks such as React and Node.js. With this book, you’ll get started with TypeScript and build an SPA with React and middleware using Node.js and Express. Finally, you’ll be able to package your web app and deploy it on AWS.",
            "image": "http://books.google.com/books/content?id=uUMQEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-12-18T00:00:00.000Z"
        },
        {
            "content_html": "Discover the current landscape of full-stack development and how to leverage modern web technologies for building production-ready React.js applications to deploy on AWS Key Features Understand the architecture of React and single-page applications Build a modern Web API for your SPA using Node.js, Express, and GraphQL Gain a clear and practical understanding of how to build a complete full-stack application Book Description React sets the standard for building high-performance client-side web apps. Node.js is a scalable application server that is used in thousands of websites, while GraphQL is becoming the standard way for large websites to provide data and services to their users. Together, these technologies, when reinforced with the capabilities of TypeScript, provide a cutting-edge stack for complete web application development. This book takes a hands-on approach to implementing modern web technologies and the associated methodologies for building full-stack apps. You'll begin by gaining a strong understanding of TypeScript and how to use it to build high-quality web apps. The chapters that follow delve into client-side development with React using the new Hooks API and Redux. Next, you'll get to grips with server-side development with Express, including authentication with Redis-based sessions and accessing databases with TypeORM. The book will then show you how to use Apollo GraphQL to build web services for your full-stack app. Later, you'll learn how to build GraphQL schemas and integrate them with React using Hooks. Finally, you'll focus on how to deploy your application onto an NGINX server using the AWS cloud. By the end of this book, you'll be able to build and deploy complete high-performance web applications using React, Node, and GraphQL. What you will learn Discover TypeScript's most important features and how they can be used to improve code quality and maintainability Understand what React Hooks are and how to build React apps using them Implement state management for your React app using Redux Set up an Express project with TypeScript and GraphQL from scratch Build a fully functional online forum app using React and GraphQL Add authentication to your web app using Redis Save and retrieve data from a Postgres database using TypeORM Configure NGINX on the AWS cloud to deploy and serve your apps Who this book is for The book is for web developers who want to go beyond front-end web development and enter the world of full-stack web development by learning about modern web technologies and how they come together. A good understanding of JavaScript programming is required before getting started with this web development book.<br><blockquote>This book takes a hands-on approach to implementing modern web technologies and the associated methodologies for building full-stack apps.</blockquote>",
            "url": "http://books.google.com/books?id=F90fzgEACAAJ&dq=TypeScript&hl=&cd=2&source=gbs_api",
            "title": "Full-Stack React, TypeScript, and Node",
            "summary": "Discover the current landscape of full-stack development and how to leverage modern web technologies for building production-ready React.js applications to deploy on AWS Key Features Understand the architecture of React and single-page applications Build a modern Web API for your SPA using Node.js, Express, and GraphQL Gain a clear and practical understanding of how to build a complete full-stack application Book Description React sets the standard for building high-performance client-side web apps. Node.js is a scalable application server that is used in thousands of websites, while GraphQL is becoming the standard way for large websites to provide data and services to their users. Together, these technologies, when reinforced with the capabilities of TypeScript, provide a cutting-edge stack for complete web application development. This book takes a hands-on approach to implementing modern web technologies and the associated methodologies for building full-stack apps. You'll begin by gaining a strong understanding of TypeScript and how to use it to build high-quality web apps. The chapters that follow delve into client-side development with React using the new Hooks API and Redux. Next, you'll get to grips with server-side development with Express, including authentication with Redis-based sessions and accessing databases with TypeORM. The book will then show you how to use Apollo GraphQL to build web services for your full-stack app. Later, you'll learn how to build GraphQL schemas and integrate them with React using Hooks. Finally, you'll focus on how to deploy your application onto an NGINX server using the AWS cloud. By the end of this book, you'll be able to build and deploy complete high-performance web applications using React, Node, and GraphQL. What you will learn Discover TypeScript's most important features and how they can be used to improve code quality and maintainability Understand what React Hooks are and how to build React apps using them Implement state management for your React app using Redux Set up an Express project with TypeScript and GraphQL from scratch Build a fully functional online forum app using React and GraphQL Add authentication to your web app using Redis Save and retrieve data from a Postgres database using TypeORM Configure NGINX on the AWS cloud to deploy and serve your apps Who this book is for The book is for web developers who want to go beyond front-end web development and enter the world of full-stack web development by learning about modern web technologies and how they come together. A good understanding of JavaScript programming is required before getting started with this web development book.",
            "image": "http://books.google.com/books/content?id=F90fzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-12-18T00:00:00.000Z"
        },
        {
            "content_html": "Angular is one of the leading frameworks to develop apps across all platforms. Reuse your code and build fast and high performing apps for any platform be it web, mobile web, native mobile and native desktop. You use small manageable components to build a large powerful app. No more wasting time hunting for DOM nodes! In this book, we take you on a fun, hands-on and pragmatic journey to master Angular from a web development point of view. You'll start building Angular apps within minutes. Every section is written in a bite-sized manner and straight to the point as I don't want to waste your time (and most certainly mine) on the content you don't need. In the end, you will have what it takes to develop a real-life app. About the Reader This book is for developers with basic familiarity with HTML, CSS, Javascript and object-oriented programming. No TypeScript or AngularJS experience needed. About the Author Greg Lim is a technologist and author of several programming books. Greg has many years in teaching programming in tertiary institutions and he places special emphasis on learning by doing. Table of Contents Introduction Creating and Using Components Bindings Working with Components Conditional Rendering, Pipes and Ng-Content Template Driven Forms Model Driven Forms Introduction to Observables Getting Data From RESTful APIs with Observables Routing Structuring Large Apps With Modules C.R.U.D. with Firebase/Firestore Authentication with Firebase/Firestore Implementing for Multiple Users<br><blockquote>You use small manageable components to build a large powerful app. No more wasting time hunting for DOM nodes! In this book, we take you on a fun, hands-on and pragmatic journey to master Angular from a web development point of view.</blockquote>",
            "url": "http://books.google.com/books?id=4TzizQEACAAJ&dq=TypeScript&hl=&cd=3&source=gbs_api",
            "title": "Beginning Angular with Typescript",
            "summary": "Angular is one of the leading frameworks to develop apps across all platforms. Reuse your code and build fast and high performing apps for any platform be it web, mobile web, native mobile and native desktop. You use small manageable components to build a large powerful app. No more wasting time hunting for DOM nodes! In this book, we take you on a fun, hands-on and pragmatic journey to master Angular from a web development point of view. You'll start building Angular apps within minutes. Every section is written in a bite-sized manner and straight to the point as I don't want to waste your time (and most certainly mine) on the content you don't need. In the end, you will have what it takes to develop a real-life app. About the Reader This book is for developers with basic familiarity with HTML, CSS, Javascript and object-oriented programming. No TypeScript or AngularJS experience needed. About the Author Greg Lim is a technologist and author of several programming books. Greg has many years in teaching programming in tertiary institutions and he places special emphasis on learning by doing. Table of Contents Introduction Creating and Using Components Bindings Working with Components Conditional Rendering, Pipes and Ng-Content Template Driven Forms Model Driven Forms Introduction to Observables Getting Data From RESTful APIs with Observables Routing Structuring Large Apps With Modules C.R.U.D. with Firebase/Firestore Authentication with Firebase/Firestore Implementing for Multiple Users",
            "image": "http://books.google.com/books/content?id=4TzizQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-09-01T00:00:00.000Z"
        },
        {
            "content_html": "Get a 65% discount starting today until 31 December 2020. Only for the 100 buyers. Use this code DNSPSSKULJNSP to redeem. Take advantage of this limited opportunity. This book learns about developing web services based on REST architecture using Deno. Deno is the latest server runtime environment for typescript and javascript in addition to node.js which is well known to date. Yes, deno was created by Ryan Dahl who created node.js itself, will deno be the next node.js successor? Of course there are reasons behind developing a new runtime for executing typescript and javascript. Architecturally, for deno runtime javascript it still uses Google Engine V8 just like the previous node.js, but this time the deno was built using Rust and TypeScript languages, while node.js was built with C ++ and JavaScript. For asynchronous runtime and event driven deno use the open source library, Tokio. Deno support typescript built-in or out of the box in the sense can be used directly without having to first configure settings, unlike node.js. The use of javascript is also supported in addition to typescript. Deno is more secure than node.js, because by default deno cannot access files, environment access, network, without explicit declaration. What is discussed in this book? Here are the points: - Introduction and installation of deno along with visual studio code as a code editor - Use standard modules for http servers - Use of third party modules such as oak to handle requests, responses, and routing - Creating a controller and routing for CRUD functionality for the postgresql database - Using Denon to automate the compilation and deno project running - Implementation of middleware for authentication - Implement bcrypt module for password hashing - Implementation of authentication using JWT - Implementation of https server - Refactoring module - Repository pattern - Access user defined functions and stored procedures in postgresql - Bundling project - The use of PM2 as monitoring tools - The use of denoDB ORM Hopefully this book can be another alternative as a source of learning exercises, tutorials, or references for those who want to learn Deno programming.<br><blockquote>This book learns about developing web services based on REST architecture using Deno.</blockquote>",
            "url": "http://books.google.com/books?id=GpvnDwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=4&source=gbs_api",
            "title": "Building REST API Services using Deno and PostgreSQL",
            "summary": "Get a 65% discount starting today until 31 December 2020. Only for the 100 buyers. Use this code DNSPSSKULJNSP to redeem. Take advantage of this limited opportunity. This book learns about developing web services based on REST architecture using Deno. Deno is the latest server runtime environment for typescript and javascript in addition to node.js which is well known to date. Yes, deno was created by Ryan Dahl who created node.js itself, will deno be the next node.js successor? Of course there are reasons behind developing a new runtime for executing typescript and javascript. Architecturally, for deno runtime javascript it still uses Google Engine V8 just like the previous node.js, but this time the deno was built using Rust and TypeScript languages, while node.js was built with C ++ and JavaScript. For asynchronous runtime and event driven deno use the open source library, Tokio. Deno support typescript built-in or out of the box in the sense can be used directly without having to first configure settings, unlike node.js. The use of javascript is also supported in addition to typescript. Deno is more secure than node.js, because by default deno cannot access files, environment access, network, without explicit declaration. What is discussed in this book? Here are the points: - Introduction and installation of deno along with visual studio code as a code editor - Use standard modules for http servers - Use of third party modules such as oak to handle requests, responses, and routing - Creating a controller and routing for CRUD functionality for the postgresql database - Using Denon to automate the compilation and deno project running - Implementation of middleware for authentication - Implement bcrypt module for password hashing - Implementation of authentication using JWT - Implementation of https server - Refactoring module - Repository pattern - Access user defined functions and stored procedures in postgresql - Bundling project - The use of PM2 as monitoring tools - The use of denoDB ORM Hopefully this book can be another alternative as a source of learning exercises, tutorials, or references for those who want to learn Deno programming.",
            "image": "http://books.google.com/books/content?id=GpvnDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-05-28T00:00:00.000Z"
        },
        {
            "content_html": "Explore what React, Node, TypeScript, Webpack, and Docker have to offer individually, and how they all fit together in modern app development. React is one of the most popular web development tools available today, and Node.js is extremely popular for server-side development. The fact that both utilize JavaScript is a big selling point, but as developers use the language more, they begin to recognize the shortcomings, and that’s where TypeScript comes in and why it’s gaining in popularity quickly. Add Webpack and Docker to the mix, and you’ve got a potent full development stack on which to build applications. You’ll begin by building a solid foundation of knowledge and quickly expand it by constructing two different real-world apps. These aren’t just simple, contrived examples but real apps that you can choose to install on your servers and use for real. By the end, you will have a solid grasp of building apps with React, Node.js, and TypeScript and a good grasp on how Webpack can be used to optimize and organize your code for deployment. You’ll also understand how Docker can be used to run the apps you build in a clear and well-defined way, all of which will be able to springboard you into creating more advanced apps on your own. What You'll Learn Get a project started and logically structure it Construct a user interface with React and Material-UI Use WebSockets for real-time communication between client and server Build a REST API with Node and Express as another approach to client-server communication Package the app with Webpack for optimized delivery Take a completed app and wrap it up with Docker for easy distribution Review a host of other ancillary topics including NPM, Semantic versioning, Babel, NoSQL, and more Who This Book Is For Web developers with basic knowledge of HTML, JavaScript, CSS, and CLI tools who are interested in and in all aspects of application development, and using TypeScript instead of straight JavaScript.<br><blockquote>What You&#39;ll Learn Get a project started and logically structure it Construct a user interface with React and Material-UI Use WebSockets for real-time communication between client and server Build a REST API with Node and Express as another ...</blockquote>",
            "url": "http://books.google.com/books?id=XLfZDwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=5&source=gbs_api",
            "title": "Modern Full-Stack Development",
            "summary": "Explore what React, Node, TypeScript, Webpack, and Docker have to offer individually, and how they all fit together in modern app development. React is one of the most popular web development tools available today, and Node.js is extremely popular for server-side development. The fact that both utilize JavaScript is a big selling point, but as developers use the language more, they begin to recognize the shortcomings, and that’s where TypeScript comes in and why it’s gaining in popularity quickly. Add Webpack and Docker to the mix, and you’ve got a potent full development stack on which to build applications. You’ll begin by building a solid foundation of knowledge and quickly expand it by constructing two different real-world apps. These aren’t just simple, contrived examples but real apps that you can choose to install on your servers and use for real. By the end, you will have a solid grasp of building apps with React, Node.js, and TypeScript and a good grasp on how Webpack can be used to optimize and organize your code for deployment. You’ll also understand how Docker can be used to run the apps you build in a clear and well-defined way, all of which will be able to springboard you into creating more advanced apps on your own. What You'll Learn Get a project started and logically structure it Construct a user interface with React and Material-UI Use WebSockets for real-time communication between client and server Build a REST API with Node and Express as another approach to client-server communication Package the app with Webpack for optimized delivery Take a completed app and wrap it up with Docker for easy distribution Review a host of other ancillary topics including NPM, Semantic versioning, Babel, NoSQL, and more Who This Book Is For Web developers with basic knowledge of HTML, JavaScript, CSS, and CLI tools who are interested in and in all aspects of application development, and using TypeScript instead of straight JavaScript.",
            "image": "http://books.google.com/books/content?id=XLfZDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-03-29T00:00:00.000Z"
        },
        {
            "content_html": "Build Angular applications faster and better with TypeScript and Material Design. You will learn how to build a web interface and use Google's open source Angular Material library of ready-made and easy-to-use components. This book uses Angular with TypeScript (a superset to JavaScript) to enable use of data types and take advantage of programming constructs such as classes, interfaces, generic templates, and more. You also will utilize various Angular features, including data binding, components, services, etc. You will build a single page application with the help of routing capabilities available out of the box (Angular CLI) and interface with remote services over HTTP. What You Will Learn Build an application using Angular, TypeScript, and Angular Material Understand Angular concepts such as components, directives, services, and more Use TypeScript features, including data types, classes, interfaces, generic templates, etc. Build a single page application (SPA) with routing features and integrate it with server-side remote services Who This Book Is For Beginning to intermediate level professionals will learn about web development using Angular, TypeScript, and Angular Material. Patterns and practices are recommended to be a successful developer. Basic knowledge of JavaScript is helpful.<br><blockquote>This book uses Angular with TypeScript (a superset to JavaScript) to enable use of data types and take advantage of programming constructs such as classes, interfaces, generic templates, and more.</blockquote>",
            "url": "http://books.google.com/books?id=CTbDDwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=6&source=gbs_api",
            "title": "Angular for Material Design",
            "summary": "Build Angular applications faster and better with TypeScript and Material Design. You will learn how to build a web interface and use Google's open source Angular Material library of ready-made and easy-to-use components. This book uses Angular with TypeScript (a superset to JavaScript) to enable use of data types and take advantage of programming constructs such as classes, interfaces, generic templates, and more. You also will utilize various Angular features, including data binding, components, services, etc. You will build a single page application with the help of routing capabilities available out of the box (Angular CLI) and interface with remote services over HTTP. What You Will Learn Build an application using Angular, TypeScript, and Angular Material Understand Angular concepts such as components, directives, services, and more Use TypeScript features, including data types, classes, interfaces, generic templates, etc. Build a single page application (SPA) with routing features and integrate it with server-side remote services Who This Book Is For Beginning to intermediate level professionals will learn about web development using Angular, TypeScript, and Angular Material. Patterns and practices are recommended to be a successful developer. Basic knowledge of JavaScript is helpful.",
            "image": "http://books.google.com/books/content?id=CTbDDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-12-09T00:00:00.000Z"
        },
        {
            "content_html": "Learn TypeScript and many of its features by building state of art web applications from scratch with the help of modern tooling, frameworks, and libraries Key Features Create modern Web applications to help businesses around the world benefit from better quality applications Learn the latest features of TypeScript 3 and use them wisely Explore TDD practices, OOP techniques, and industry best practices to create high-quality and modular apps Book Description TypeScript is a superset of the JavaScript programming language, giving developers a tool to help them write faster, cleaner JavaScript. With the help of its powerful static type system and other powerful tools and techniques it allows developers to write modern JavaScript applications. This book is a practical guide to learn the TypeScript programming language. It covers from the very basics to the more advanced concepts, while explaining many design patterns, techniques, frameworks, libraries and tools along the way. You will also learn a ton about modern web frameworks like Angular, Vue.js and React, and you will build cool web applications using those. This book also covers modern front-end development tooling such as Node.js, npm, yarn, Webpack, Parcel, Jest, and many others. Throughout the book, you will also discover and make use of the most recent additions of the language introduced by TypeScript 3 such as new types enforcing explicit checks, flexible and scalable ways of project structuring, and many more breaking changes. By the end of this book, you will be ready to use TypeScript in your own projects and will also have a concrete view of the current frontend software development landscape. What you will learn Understand and take advantage of TypeScript's powerful Type System Grasp the key concepts and features of Angular, React, Vue.js, and NestJS Handle asynchronous processes using Promises, async/await, Fetch, RxJS, and more Delve into REST, GraphQL and create APIs using Apollo Discover testing concepts, techniques, and tools like TDD, BDD, E2E, Jest Learn Object-Oriented and Functional Programming concepts and leverage those with TypeScript Explore design practices and patterns such as SOLID, MVC, DI and IoC, LoD, AOP, and more Who this book is for This book is for software developers who are willing to discover what TypeScript is and how to leverage it to write great quality software. Developers that are already familiar with TypeScript will find this book useful by learning the languages featured introduced by most recent releases. Basic knowledge of the JavaScript programming is expected.<br><blockquote>With the help of its powerful static type system and other powerful tools and techniques it allows developers to write modern JavaScript applications. This book is a practical guide to learn the TypeScript programming language.</blockquote>",
            "url": "http://books.google.com/books?id=FBrADwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=7&source=gbs_api",
            "title": "Learn TypeScript 3 by Building Web Applications",
            "summary": "Learn TypeScript and many of its features by building state of art web applications from scratch with the help of modern tooling, frameworks, and libraries Key Features Create modern Web applications to help businesses around the world benefit from better quality applications Learn the latest features of TypeScript 3 and use them wisely Explore TDD practices, OOP techniques, and industry best practices to create high-quality and modular apps Book Description TypeScript is a superset of the JavaScript programming language, giving developers a tool to help them write faster, cleaner JavaScript. With the help of its powerful static type system and other powerful tools and techniques it allows developers to write modern JavaScript applications. This book is a practical guide to learn the TypeScript programming language. It covers from the very basics to the more advanced concepts, while explaining many design patterns, techniques, frameworks, libraries and tools along the way. You will also learn a ton about modern web frameworks like Angular, Vue.js and React, and you will build cool web applications using those. This book also covers modern front-end development tooling such as Node.js, npm, yarn, Webpack, Parcel, Jest, and many others. Throughout the book, you will also discover and make use of the most recent additions of the language introduced by TypeScript 3 such as new types enforcing explicit checks, flexible and scalable ways of project structuring, and many more breaking changes. By the end of this book, you will be ready to use TypeScript in your own projects and will also have a concrete view of the current frontend software development landscape. What you will learn Understand and take advantage of TypeScript's powerful Type System Grasp the key concepts and features of Angular, React, Vue.js, and NestJS Handle asynchronous processes using Promises, async/await, Fetch, RxJS, and more Delve into REST, GraphQL and create APIs using Apollo Discover testing concepts, techniques, and tools like TDD, BDD, E2E, Jest Learn Object-Oriented and Functional Programming concepts and leverage those with TypeScript Explore design practices and patterns such as SOLID, MVC, DI and IoC, LoD, AOP, and more Who this book is for This book is for software developers who are willing to discover what TypeScript is and how to leverage it to write great quality software. Developers that are already familiar with TypeScript will find this book useful by learning the languages featured introduced by most recent releases. Basic knowledge of the JavaScript programming is expected.",
            "image": "http://books.google.com/books/content?id=FBrADwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-11-22T00:00:00.000Z"
        },
        {
            "content_html": "Discover various techniques to develop maintainable code and keep it in shape. Key Features Learn all about refactoring - why it is important and how to do it Discover easy ways to refactor code with examples Explore techniques that can be applied to most other programming languages Book Description Refactoring improves your code without changing its behavior. With refactoring, the best approach is to apply small targeted changes to a codebase. Instead of doing a huge sweeping change to your code, refactoring is better as a long-term and continuous enterprise. Refactoring TypeScript explains how to spot bugs and remove them from your code. You’ll start by seeing how wordy conditionals, methods, and null checks make code unhealthy and unstable. Whether it is identifying messy nested conditionals or removing unnecessary methods, this book will show various techniques to avoid these pitfalls and write code that is easier to understand, maintain, and test. By the end of the book, you’ll have learned some of the main causes of unhealthy code, tips to identify them and techniques to address them. What you will learn Spot and fix common code smells to create code that is easier to read and understand Discover ways to identify long methods and refactor them Create objects that keep your code flexible, maintainable, and testable Apply the Single Responsibility Principle to develop less-coupled code Discover how to combine different refactoring techniques Learn ways to solve the issues caused by overusing primitives Who this book is for This book is designed for programmers who are looking to explore various refactoring techniques to develop healthy and maintainable code. Some experience in JavaScript and TypeScript can help you easily grasp the concepts explained in this book.<br><blockquote>Some experience in JavaScript and TypeScript can help you easily grasp the concepts explained in this book.</blockquote>",
            "url": "http://books.google.com/books?id=Qkm4DwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=8&source=gbs_api",
            "title": "Refactoring TypeScript",
            "summary": "Discover various techniques to develop maintainable code and keep it in shape. Key Features Learn all about refactoring - why it is important and how to do it Discover easy ways to refactor code with examples Explore techniques that can be applied to most other programming languages Book Description Refactoring improves your code without changing its behavior. With refactoring, the best approach is to apply small targeted changes to a codebase. Instead of doing a huge sweeping change to your code, refactoring is better as a long-term and continuous enterprise. Refactoring TypeScript explains how to spot bugs and remove them from your code. You’ll start by seeing how wordy conditionals, methods, and null checks make code unhealthy and unstable. Whether it is identifying messy nested conditionals or removing unnecessary methods, this book will show various techniques to avoid these pitfalls and write code that is easier to understand, maintain, and test. By the end of the book, you’ll have learned some of the main causes of unhealthy code, tips to identify them and techniques to address them. What you will learn Spot and fix common code smells to create code that is easier to read and understand Discover ways to identify long methods and refactor them Create objects that keep your code flexible, maintainable, and testable Apply the Single Responsibility Principle to develop less-coupled code Discover how to combine different refactoring techniques Learn ways to solve the issues caused by overusing primitives Who this book is for This book is designed for programmers who are looking to explore various refactoring techniques to develop healthy and maintainable code. Some experience in JavaScript and TypeScript can help you easily grasp the concepts explained in this book.",
            "image": "http://books.google.com/books/content?id=Qkm4DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-10-18T00:00:00.000Z"
        },
        {
            "content_html": "TypeScript is a typed superset of JavaScript with the potential to solve many of the headaches for which JavaScript is famous. But TypeScript has a learning curve of its own, and understanding how to use it effectively can take time. This book guides you through 62 specific ways to improve your use of TypeScript. Author Dan Vanderkam, a principal software engineer at Sidewalk Labs, shows you how to apply these ideas, following the format popularized by Effective C++ and Effective Java (both from Addison-Wesley). You’ll advance from a beginning or intermediate user familiar with the basics to an advanced user who knows how to use the language well. Effective TypeScript is divided into eight chapters: Getting to Know TypeScript TypeScript’s Type System Type Inference Type Design Working with any Types Declarations and @types Writing and Running Your Code Migrating to TypeScript<br><blockquote>But TypeScript has a learning curve of its own, and understanding how to use it effectively can take time. This book guides you through 62 specific ways to improve your use of TypeScript.</blockquote>",
            "url": "http://books.google.com/books?id=wD63DwAAQBAJ&pg=PP1&dq=TypeScript&hl=&cd=9&source=gbs_api",
            "title": "Effective TypeScript",
            "summary": "TypeScript is a typed superset of JavaScript with the potential to solve many of the headaches for which JavaScript is famous. But TypeScript has a learning curve of its own, and understanding how to use it effectively can take time. This book guides you through 62 specific ways to improve your use of TypeScript. Author Dan Vanderkam, a principal software engineer at Sidewalk Labs, shows you how to apply these ideas, following the format popularized by Effective C++ and Effective Java (both from Addison-Wesley). You’ll advance from a beginning or intermediate user familiar with the basics to an advanced user who knows how to use the language well. Effective TypeScript is divided into eight chapters: Getting to Know TypeScript TypeScript’s Type System Type Inference Type Design Working with any Types Declarations and @types Writing and Running Your Code Migrating to TypeScript",
            "image": "http://books.google.com/books/content?id=wD63DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-10-17T00:00:00.000Z"
        },
        {
            "content_html": "TypeScript is a typed superset of JavaScript with the potential to solve many of the headaches for which JavaScript is famous. But TypeScript has a learning curve of its own, and understanding how to use it effectively can take time. This book guides you through 62 specific ways to improve your use of TypeScript. Author Dan Vanderkam, a principal software engineer at Sidewalk Labs, shows you how to apply these ideas, following the format popularized by Effective C++ and Effective Java (both from Addison-Wesley). You’ll advance from a beginning or intermediate user familiar with the basics to an advanced user who knows how to use the language well. Effective TypeScript is divided into eight chapters: Getting to Know TypeScript TypeScript’s Type System Type Inference Type Design Working with any Types Declarations and @types Writing and Running Your Code Migrating to TypeScript<br><blockquote>Before we dive into the details, this chapter helps you understand the big picture <br>\nof <b>TypeScript</b>. What is it and how should you think about it? How does it relate to <br>\nJava‐Script? Are its types nullable or are they not? What&#39;s this about any?</blockquote>",
            "url": "http://books.google.com/books?id=wD63DwAAQBAJ&pg=PA1&dq=TypeScript&hl=&cd=10&source=gbs_api",
            "title": "Effective TypeScript",
            "summary": "TypeScript is a typed superset of JavaScript with the potential to solve many of the headaches for which JavaScript is famous. But TypeScript has a learning curve of its own, and understanding how to use it effectively can take time. This book guides you through 62 specific ways to improve your use of TypeScript. Author Dan Vanderkam, a principal software engineer at Sidewalk Labs, shows you how to apply these ideas, following the format popularized by Effective C++ and Effective Java (both from Addison-Wesley). You’ll advance from a beginning or intermediate user familiar with the basics to an advanced user who knows how to use the language well. Effective TypeScript is divided into eight chapters: Getting to Know TypeScript TypeScript’s Type System Type Inference Type Design Working with any Types Declarations and @types Writing and Running Your Code Migrating to TypeScript",
            "image": "http://books.google.com/books/content?id=wD63DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-10-17T00:00:00.000Z"
        }
    ]
}