{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "How do you turn raw, unprocessed, or malformed data into dynamic, interactive web visualizations? In this practical book, author Kyran Dale shows data scientists and analysts--as well as Python and JavaScript developers--how to create the ideal toolchain for the job. By providing engaging examples and stressing hard-earned best practices, this guide teaches you how to leverage the power of best-of-breed Python and JavaScript libraries. Python provides accessible, powerful, and mature libraries for scraping, cleaning, and processing data. And while JavaScript is the best language when it comes to programming web visualizations, its data processing abilities can't compare with Python's. Together, these two languages are a perfect complement for creating a modern web-visualization toolchain. This book gets you started. You'll learn how to: Obtain data you need programmatically, using scraping tools or web APIs: Requests, Scrapy, Beautiful Soup Clean and process data using Python's heavyweight data processing libraries within the NumPy ecosystem: Jupyter notebooks with pandas+Matplotlib+Seaborn Deliver the data to a browser with static files or by using Flask, the lightweight Python server, and a RESTful API Pick up enough web development skills (HTML, CSS, JS) to get your visualized data on the web Use the data you've mined and refined to create web charts and visualizations with Plotly, D3, Leaflet, and other libraries<br><blockquote>In this practical book, author Kyran Dale shows data scientists and analysts--as well as Python and JavaScript developers--how to create the ideal toolchain for the job.</blockquote>",
            "url": "http://books.google.com/books?id=vWcuzwEACAAJ&dq=JavaScript&hl=&cd=1&source=gbs_api",
            "title": "Data Visualization with Python and JavaScript",
            "summary": "How do you turn raw, unprocessed, or malformed data into dynamic, interactive web visualizations? In this practical book, author Kyran Dale shows data scientists and analysts--as well as Python and JavaScript developers--how to create the ideal toolchain for the job. By providing engaging examples and stressing hard-earned best practices, this guide teaches you how to leverage the power of best-of-breed Python and JavaScript libraries. Python provides accessible, powerful, and mature libraries for scraping, cleaning, and processing data. And while JavaScript is the best language when it comes to programming web visualizations, its data processing abilities can't compare with Python's. Together, these two languages are a perfect complement for creating a modern web-visualization toolchain. This book gets you started. You'll learn how to: Obtain data you need programmatically, using scraping tools or web APIs: Requests, Scrapy, Beautiful Soup Clean and process data using Python's heavyweight data processing libraries within the NumPy ecosystem: Jupyter notebooks with pandas+Matplotlib+Seaborn Deliver the data to a browser with static files or by using Flask, the lightweight Python server, and a RESTful API Pick up enough web development skills (HTML, CSS, JS) to get your visualized data on the web Use the data you've mined and refined to create web charts and visualizations with Plotly, D3, Leaflet, and other libraries",
            "image": "http://books.google.com/books/content?id=vWcuzwEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2023-01-31T00:00:00.000Z"
        },
        {
            "content_html": "Data structure in action illustrated JavaScript book uses vivid visual language to explain data structures, how they work, and when to use what. The book helps you understand the data structures inside and out, and use them efficiently in your projects. It can be read for reference and entertainment. This book covers 8 major data structures, arrays, linked lists, stacks, binary trees, hash tables, graphs among others. The code in written in JavaScript. The book is in EPUB format. It can be read on any mobile devices. The links of view code will take you to view and download the source code online. Get the book and enjoy the ride!<br><blockquote>It can be read for reference and entertainment. This book covers 8 major data structures, arrays, linked lists, stacks, binary trees, hash tables, graphs among others. The code in written in JavaScript. The book is in EPUB format.</blockquote>",
            "url": "http://books.google.com/books?id=8WaCEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=2&source=gbs_api",
            "title": "Data structures in action illustrated (JavaScript) EPUB",
            "summary": "Data structure in action illustrated JavaScript book uses vivid visual language to explain data structures, how they work, and when to use what. The book helps you understand the data structures inside and out, and use them efficiently in your projects. It can be read for reference and entertainment. This book covers 8 major data structures, arrays, linked lists, stacks, binary trees, hash tables, graphs among others. The code in written in JavaScript. The book is in EPUB format. It can be read on any mobile devices. The links of view code will take you to view and download the source code online. Get the book and enjoy the ride!",
            "image": "http://books.google.com/books/content?id=8WaCEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-08-17T00:00:00.000Z"
        },
        {
            "content_html": "Delve into the world of web development with Vue.js, Node.js, and MongoDB by exploring essential JavaScript concepts on the client side and the server side Key FeaturesGet up and running with JavaScript, the most popular web development language in the worldCut through the complexity and focus on the simple aspects of web developmentBuild a simple web application using Vue.js, Node.js, and MongoDBBook Description JavaScript, the most widely used programming language in the world, has numerous libraries and modules and a dizzying array of need-to-know topics. Picking a starting point can be difficult. Enter JavaScript from Frontend to Backend. This concise, practical guide will get you up to speed in next to no time. This book begins with the basics of variables and objects in JavaScript and then moves quickly on to building components on the client-side with Vue.js and a simple list management application. After that, the focus shifts to the server-side and Node.js, where you'll examine the MVC model and explore the Express module. Once you've got to grips with the server-side and the client-side, the only thing that remains is the database. You'll discover MongoDB and the Mongoose module. In the final chapter of this fast-paced guide, you'll combine all these pieces to integrate a Vue.js application into a Node.js server, using Express to structure the server code and MongoDB to store the information. By the end of this book, you will have the skills and confidence to successfully implement JavaScript concepts in your own projects and begin your career as a JavaScript developer. What you will learnTrigger deferred processing with JavaScriptImplement Express and MongoDB with Node.jsBuild components with Vue.jsUnderstand how to create and use modules with Node.jsFamiliarize yourself with npmBuild a client-side application entirely with JavaScriptDive into full stack development with Vue.js, Node.js, and MongoDBWho this book is for This book is for JavaScript developers looking to strengthen their core JavaScript concepts and implement them in building full stack apps. Prior knowledge of HTML and CSS is a must.<br><blockquote>Picking a starting point can be difficult. Enter JavaScript from Frontend to Backend. This concise, practical guide will get you up to speed in next to no time.</blockquote>",
            "url": "http://books.google.com/books?id=qOV5EAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "JavaScript from Frontend to Backend",
            "summary": "Delve into the world of web development with Vue.js, Node.js, and MongoDB by exploring essential JavaScript concepts on the client side and the server side Key FeaturesGet up and running with JavaScript, the most popular web development language in the worldCut through the complexity and focus on the simple aspects of web developmentBuild a simple web application using Vue.js, Node.js, and MongoDBBook Description JavaScript, the most widely used programming language in the world, has numerous libraries and modules and a dizzying array of need-to-know topics. Picking a starting point can be difficult. Enter JavaScript from Frontend to Backend. This concise, practical guide will get you up to speed in next to no time. This book begins with the basics of variables and objects in JavaScript and then moves quickly on to building components on the client-side with Vue.js and a simple list management application. After that, the focus shifts to the server-side and Node.js, where you'll examine the MVC model and explore the Express module. Once you've got to grips with the server-side and the client-side, the only thing that remains is the database. You'll discover MongoDB and the Mongoose module. In the final chapter of this fast-paced guide, you'll combine all these pieces to integrate a Vue.js application into a Node.js server, using Express to structure the server code and MongoDB to store the information. By the end of this book, you will have the skills and confidence to successfully implement JavaScript concepts in your own projects and begin your career as a JavaScript developer. What you will learnTrigger deferred processing with JavaScriptImplement Express and MongoDB with Node.jsBuild components with Vue.jsUnderstand how to create and use modules with Node.jsFamiliarize yourself with npmBuild a client-side application entirely with JavaScriptDive into full stack development with Vue.js, Node.js, and MongoDBWho this book is for This book is for JavaScript developers looking to strengthen their core JavaScript concepts and implement them in building full stack apps. Prior knowledge of HTML and CSS is a must.",
            "image": "http://books.google.com/books/content?id=qOV5EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-07-06T00:00:00.000Z"
        },
        {
            "content_html": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.<br><blockquote>Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT.</blockquote>",
            "url": "http://books.google.com/books?id=WSUuEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=4&source=gbs_api",
            "title": "Structure and Interpretation of Computer Programs",
            "summary": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.",
            "image": "http://books.google.com/books/content?id=WSUuEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-05-03T00:00:00.000Z"
        },
        {
            "content_html": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.<br><blockquote>Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT.</blockquote>",
            "url": "http://books.google.com/books?id=4rtNEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=5&source=gbs_api",
            "title": "Structure and Interpretation of Computer Programs",
            "summary": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.",
            "image": "http://books.google.com/books/content?id=4rtNEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-04-12T00:00:00.000Z"
        },
        {
            "content_html": "JavaScript today must interact with data-intensive APIs and networks. The solution is a program that can work asynchronously instead of finishing tasks in order. In modern JavaScript, instead of callbacks you'll use promises to improve your application's performance and responsiveness. JavaScript features introduced in ES2020, ES2021, and ESNext like Promise.allSettled(), Promise.any(), and top-level await help you develop small, fast, low-profile applications. With the AbortController API, cancel a pending async request before it has completed. Modern Asynchronous JavaScript gives you an arsenal of tools to build programs that always respond to user requests, recover quickly from difficult conditions, and deliver maximum performance. Applications today must work with information on remote servers, and users expect a quick response to complex interactions at all times, whether on a high-speed 5G cellular network or slow public WiFi. JavaScript provides developers with advanced tools to coordinate the asynchronous parts of their code efficiently and deliver responsive programs. Faster applications equal happier users, which is the promise of asynchronous JavaScript. With Modern Asynchronous JavaScript you'll learn techniques for managing your async code. Features like ES2021 Promise.any() allow you to safeguard your async code from external issues that are out of your control like server downtime. You'll discover secret weapons like top-level await to initialize resources, define dependency paths dynamically, and load dependencies with a fallback implementation. You'll even learn to how to set a time limit for async requests and react if they take too long to complete. Fast, reliable applications are a must in today's world, where users demand increasingly greater amounts of data on mobile devices. Asynchronous programming may require more cautious planning than synchronous programming but the outcome is rewarding. Asynchronous JavaScript allows you to write code that is nimble but reliable, leading to programs that load faster, respond quicker, and most importantly that you can trust to function properly. What You Need: You'll need an intermediate level of JavaScript programming skills and a browser that supports features from ES2020, ES2021, and ESNext.<br><blockquote>Modern Asynchronous JavaScript gives you an arsenal of tools to build programs that always respond to user requests, recover quickly from difficult conditions, and deliver maximum performance.</blockquote>",
            "url": "http://books.google.com/books?id=GDZVEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=6&source=gbs_api",
            "title": "Modern Asynchronous JavaScript",
            "summary": "JavaScript today must interact with data-intensive APIs and networks. The solution is a program that can work asynchronously instead of finishing tasks in order. In modern JavaScript, instead of callbacks you'll use promises to improve your application's performance and responsiveness. JavaScript features introduced in ES2020, ES2021, and ESNext like Promise.allSettled(), Promise.any(), and top-level await help you develop small, fast, low-profile applications. With the AbortController API, cancel a pending async request before it has completed. Modern Asynchronous JavaScript gives you an arsenal of tools to build programs that always respond to user requests, recover quickly from difficult conditions, and deliver maximum performance. Applications today must work with information on remote servers, and users expect a quick response to complex interactions at all times, whether on a high-speed 5G cellular network or slow public WiFi. JavaScript provides developers with advanced tools to coordinate the asynchronous parts of their code efficiently and deliver responsive programs. Faster applications equal happier users, which is the promise of asynchronous JavaScript. With Modern Asynchronous JavaScript you'll learn techniques for managing your async code. Features like ES2021 Promise.any() allow you to safeguard your async code from external issues that are out of your control like server downtime. You'll discover secret weapons like top-level await to initialize resources, define dependency paths dynamically, and load dependencies with a fallback implementation. You'll even learn to how to set a time limit for async requests and react if they take too long to complete. Fast, reliable applications are a must in today's world, where users demand increasingly greater amounts of data on mobile devices. Asynchronous programming may require more cautious planning than synchronous programming but the outcome is rewarding. Asynchronous JavaScript allows you to write code that is nimble but reliable, leading to programs that load faster, respond quicker, and most importantly that you can trust to function properly. What You Need: You'll need an intermediate level of JavaScript programming skills and a browser that supports features from ES2020, ES2021, and ESNext.",
            "image": "http://books.google.com/books/content?id=GDZVEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-12-17T00:00:00.000Z"
        },
        {
            "content_html": "Get hands-on with building data-driven applications using Danfo.js in combination with other data analysis tools and techniques Key FeaturesBuild microservices to perform data transformation and ML model serving in JavaScriptExplore what Danfo.js is and how it helps with data analysis and data visualizationCombine Danfo.js and TensorFlow.js for machine learningBook Description Most data analysts use Python and pandas for data processing for the convenience and performance these libraries provide. However, JavaScript developers have always wanted to use machine learning in the browser as well. This book focuses on how Danfo.js brings data processing, analysis, and ML tools to JavaScript developers and how to make the most of this library to build data-driven applications. Starting with an overview of modern JavaScript, you'll cover data analysis and transformation with Danfo.js and Dnotebook. The book then shows you how to load different datasets, combine and analyze them by performing operations such as handling missing values and string manipulations. You'll also get to grips with data plotting, visualization, aggregation, and group operations by combining Danfo.js with Plotly. As you advance, you'll create a no-code data analysis and handling system and create-react-app, react-table, react-chart, Draggable.js, and tailwindcss, and understand how to use TensorFlow.js and Danfo.js to build a recommendation system. Finally, you'll build a Twitter analytics dashboard powered by Danfo.js, Next.js, node-nlp, and Twit.js. By the end of this app development book, you'll be able to build and embed data analytics, visualization, and ML capabilities into any JavaScript app in server-side Node.js or the browser. What you will learnPerform data experimentation and analysis with Danfo.js and DnotebookBuild machine learning applications using Danfo.js integrated with TensorFlow.jsConnect Danfo.js with popular database applications to aid data analysisCreate a no-code data analysis and handling system using internal librariesDevelop a recommendation system with Danfo.js and TensorFlow.jsBuild a Twitter analytics dashboard for sentiment analysis and other types of data insightsWho this book is for This book is for data analysts, data scientists, and JavaScript developers who want to create data-driven applications in the JavaScript/Node.js environment. Intermediate-level knowledge of JavaScript programming and data science using pandas is expected.<br><blockquote>This book focuses on how Danfo.js brings data processing, analysis, and ML tools to JavaScript developers and how to make the most of this library to build data-driven applications.</blockquote>",
            "url": "http://books.google.com/books?id=Efo-EAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "Building Data-Driven Applications with Danfo.js",
            "summary": "Get hands-on with building data-driven applications using Danfo.js in combination with other data analysis tools and techniques Key FeaturesBuild microservices to perform data transformation and ML model serving in JavaScriptExplore what Danfo.js is and how it helps with data analysis and data visualizationCombine Danfo.js and TensorFlow.js for machine learningBook Description Most data analysts use Python and pandas for data processing for the convenience and performance these libraries provide. However, JavaScript developers have always wanted to use machine learning in the browser as well. This book focuses on how Danfo.js brings data processing, analysis, and ML tools to JavaScript developers and how to make the most of this library to build data-driven applications. Starting with an overview of modern JavaScript, you'll cover data analysis and transformation with Danfo.js and Dnotebook. The book then shows you how to load different datasets, combine and analyze them by performing operations such as handling missing values and string manipulations. You'll also get to grips with data plotting, visualization, aggregation, and group operations by combining Danfo.js with Plotly. As you advance, you'll create a no-code data analysis and handling system and create-react-app, react-table, react-chart, Draggable.js, and tailwindcss, and understand how to use TensorFlow.js and Danfo.js to build a recommendation system. Finally, you'll build a Twitter analytics dashboard powered by Danfo.js, Next.js, node-nlp, and Twit.js. By the end of this app development book, you'll be able to build and embed data analytics, visualization, and ML capabilities into any JavaScript app in server-side Node.js or the browser. What you will learnPerform data experimentation and analysis with Danfo.js and DnotebookBuild machine learning applications using Danfo.js integrated with TensorFlow.jsConnect Danfo.js with popular database applications to aid data analysisCreate a no-code data analysis and handling system using internal librariesDevelop a recommendation system with Danfo.js and TensorFlow.jsBuild a Twitter analytics dashboard for sentiment analysis and other types of data insightsWho this book is for This book is for data analysts, data scientists, and JavaScript developers who want to create data-driven applications in the JavaScript/Node.js environment. Intermediate-level knowledge of JavaScript programming and data science using pandas is expected.",
            "image": "http://books.google.com/books/content?id=Efo-EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-09-24T00:00:00.000Z"
        },
        {
            "content_html": "Learn to use JavaScript, the popular scripting language that allows web page authors to develop interactive web pages and sites. Carey/Vodnik's JAVASCRIPT FOR WEB WARRIORS, Seventh Edition introduces a variety of techniques that focus on what you need to know to begin using JavaScript right away. Step-by-step tasks within each chapter focus on particular techniques essential for building actual JavaScript programs. Guided activities reinforce skills and build in complexity as you progress. You also study debugging techniques. This edition's text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications. Learning objectives, summaries, review and key terms highlight major concepts while reinforcement exercises let you further practice new techniques. After completing this course, you will able to use JavaScript to build professional quality web applications. Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.<br><blockquote>You also study debugging techniques. This edition&#39;s text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications.</blockquote>",
            "url": "http://books.google.com/books?id=Iwk1EAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=8&source=gbs_api",
            "title": "JavaScript for Web Warriors",
            "summary": "Learn to use JavaScript, the popular scripting language that allows web page authors to develop interactive web pages and sites. Carey/Vodnik's JAVASCRIPT FOR WEB WARRIORS, Seventh Edition introduces a variety of techniques that focus on what you need to know to begin using JavaScript right away. Step-by-step tasks within each chapter focus on particular techniques essential for building actual JavaScript programs. Guided activities reinforce skills and build in complexity as you progress. You also study debugging techniques. This edition's text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications. Learning objectives, summaries, review and key terms highlight major concepts while reinforcement exercises let you further practice new techniques. After completing this course, you will able to use JavaScript to build professional quality web applications. Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.",
            "image": "http://books.google.com/books/content?id=Iwk1EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-06T00:00:00.000Z"
        },
        {
            "content_html": "Discover how to take advantage of common cryptographic operations to build safer apps that respect users' privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common cryptographic operations in your code with practical examples Learn about picking modern safe algorithms, which libraries you should rely on, and how to use them correctly Build modern and secure applications that respect your users' privacy with cryptography Book Description: If you're a software developer, this book will give you an introduction to cryptography, helping you understand how to make the most of it for your applications. The book contains extensive code samples in JavaScript, both for Node.js and for frontend apps running in a web browser, although the core concepts can be used by developers working with any programming language and framework. With a purely hands-on approach that is focused on sharing actionable knowledge, you'll learn about the common categories of cryptographic operations that you can leverage in all apps you're developing, including hashing, encryption with symmetric, asymmetric and hybrid ciphers, and digital signatures. You'll learn when to use these operations and how to choose and implement the most popular algorithms to perform them, including SHA-2, Argon2, AES, ChaCha20-Poly1305, RSA, and Elliptic Curve Cryptography. Later, you'll learn how to deal with password and key management. All code in this book is written in JavaScript and designed to run in Node.js or as part of frontend apps for web browsers. By the end of this book, you'll be able to build solutions that leverage cryptography to protect user privacy, offer better security against an expanding and more complex threat landscape, help meet data protection requirements, and unlock new opportunities. What You Will Learn: Write JavaScript code that uses cryptography running within a Node.js environment for the server-side or in frontend applications for web browsers Use modern, safe hashing functions for calculating digests and key derivation, including SHA-2 and Argon2 Practice encrypting messages and files with a symmetric key using AES and ChaCha20-Poly1305 Use asymmetric and hybrid encryption, leveraging RSA and Elliptic Curve Cryptography with ECDH and ECIES Calculate and verify digital signatures using RSA and ECDSA/EdDSA Manage passwords and encryption keys safely Who this book is for: This cryptography book is an introductory guide for software developers who don't necessarily have a background in cryptography but are interested in learning how to integrate it in their solutions, correctly and safely. You'll need to have at least intermediate-level knowledge of building apps with JavaScript and familiarity with Node.js to make the most of this book.<br><blockquote>Discover how to take advantage of common cryptographic operations to build safer apps that respect users&#39; privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common ...</blockquote>",
            "url": "http://books.google.com/books?id=YNaczgEACAAJ&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "Essential Cryptography for JavaScript Developers",
            "summary": "Discover how to take advantage of common cryptographic operations to build safer apps that respect users' privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common cryptographic operations in your code with practical examples Learn about picking modern safe algorithms, which libraries you should rely on, and how to use them correctly Build modern and secure applications that respect your users' privacy with cryptography Book Description: If you're a software developer, this book will give you an introduction to cryptography, helping you understand how to make the most of it for your applications. The book contains extensive code samples in JavaScript, both for Node.js and for frontend apps running in a web browser, although the core concepts can be used by developers working with any programming language and framework. With a purely hands-on approach that is focused on sharing actionable knowledge, you'll learn about the common categories of cryptographic operations that you can leverage in all apps you're developing, including hashing, encryption with symmetric, asymmetric and hybrid ciphers, and digital signatures. You'll learn when to use these operations and how to choose and implement the most popular algorithms to perform them, including SHA-2, Argon2, AES, ChaCha20-Poly1305, RSA, and Elliptic Curve Cryptography. Later, you'll learn how to deal with password and key management. All code in this book is written in JavaScript and designed to run in Node.js or as part of frontend apps for web browsers. By the end of this book, you'll be able to build solutions that leverage cryptography to protect user privacy, offer better security against an expanding and more complex threat landscape, help meet data protection requirements, and unlock new opportunities. What You Will Learn: Write JavaScript code that uses cryptography running within a Node.js environment for the server-side or in frontend applications for web browsers Use modern, safe hashing functions for calculating digests and key derivation, including SHA-2 and Argon2 Practice encrypting messages and files with a symmetric key using AES and ChaCha20-Poly1305 Use asymmetric and hybrid encryption, leveraging RSA and Elliptic Curve Cryptography with ECDH and ECIES Calculate and verify digital signatures using RSA and ECDSA/EdDSA Manage passwords and encryption keys safely Who this book is for: This cryptography book is an introductory guide for software developers who don't necessarily have a background in cryptography but are interested in learning how to integrate it in their solutions, correctly and safely. You'll need to have at least intermediate-level knowledge of building apps with JavaScript and familiarity with Node.js to make the most of this book.",
            "image": "http://books.google.com/books/content?id=YNaczgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2022-02-28T00:00:00.000Z"
        },
        {
            "content_html": "Everything teens need to get started with JavaScript Have you ever wanted to make your own game? How about an awesome website? Then JavaScript Coding for Teens is the book for you! It doesn't matter if you're not sure what a variable is, are stumped about syntax, or don't even know how to use JavaScript on your computer! This simple guide to coding for beginners walks you through every part of the process with easy-to-understand language and straightforward directions. You'll be coding like a pro in no time! JavaScript Coding for Teens includes: Beginner-friendly lessons--This guide to coding for teens starts out with the basics, providing the perfect foundation for coding novices. A variety of uses--Stretch your skills and discover how amazingly flexible and powerful JavaScript is as you learn to use it for programming websites and games. Practical practice--Gain confidence with exercises that test your ability to modify existing programs or create new ones. Build computer skills that will last a lifetime with JavaScript Coding for Teens.<br><blockquote>Everything teens need to get started with JavaScript Have you ever wanted to make your own game? How about an awesome website? Then JavaScript Coding for Teens is the book for you!</blockquote>",
            "url": "http://books.google.com/books?id=YJqVzQEACAAJ&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "JavaScript Coding for Teens",
            "summary": "Everything teens need to get started with JavaScript Have you ever wanted to make your own game? How about an awesome website? Then JavaScript Coding for Teens is the book for you! It doesn't matter if you're not sure what a variable is, are stumped about syntax, or don't even know how to use JavaScript on your computer! This simple guide to coding for beginners walks you through every part of the process with easy-to-understand language and straightforward directions. You'll be coding like a pro in no time! JavaScript Coding for Teens includes: Beginner-friendly lessons--This guide to coding for teens starts out with the basics, providing the perfect foundation for coding novices. A variety of uses--Stretch your skills and discover how amazingly flexible and powerful JavaScript is as you learn to use it for programming websites and games. Practical practice--Gain confidence with exercises that test your ability to modify existing programs or create new ones. Build computer skills that will last a lifetime with JavaScript Coding for Teens.",
            "image": "http://books.google.com/books/content?id=YJqVzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-08-10T00:00:00.000Z"
        }
    ]
}