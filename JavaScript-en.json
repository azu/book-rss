{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "This is a guide on how to use JavaScript to give dynamic features to a static website, development of web base applications through the knowledge of JavaScript Variable, Operators, Boolean, Even Handlers, Strings, Popup Boxes, Maths object e.t.c . It also entails other areas of application of JavaScript outside the Web. What You will Learn: *JavaScript Syntax *What JavaScript is Use for in Website Development. *Types of JavaScript *Where You can Place JavaScript *Javascript Display Methods *Popup Boxes *Date and Time *Function *Event Handlers *Colors in HTML Document using JavaScript. *Repeated Performance *Document Formatting *Event Object *JavaScript Variable *JavaScript Operators *Strings *JavaScript Booleans *JavaScript Math Object *JavaScript uses Outside Web Pages.<br><blockquote>This is a guide on how to use JavaScript to give dynamic features to a static website, development of web base applications through the knowledge of JavaScript Variable, Operators, Boolean, Even Handlers, Strings, Popup Boxes, Maths object ...</blockquote>",
            "url": "http://books.google.com/books?id=tYIFEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=1&source=gbs_api",
            "title": "JavaScript Fundamentals: JavaScript Syntax, What JavaScript is Use for in Website Development, JavaScript Variable, Strings, Popup Boxes, JavaScript Objects, Function, and Event Handlers",
            "summary": "This is a guide on how to use JavaScript to give dynamic features to a static website, development of web base applications through the knowledge of JavaScript Variable, Operators, Boolean, Even Handlers, Strings, Popup Boxes, Maths object e.t.c . It also entails other areas of application of JavaScript outside the Web. What You will Learn: *JavaScript Syntax *What JavaScript is Use for in Website Development. *Types of JavaScript *Where You can Place JavaScript *Javascript Display Methods *Popup Boxes *Date and Time *Function *Event Handlers *Colors in HTML Document using JavaScript. *Repeated Performance *Document Formatting *Event Object *JavaScript Variable *JavaScript Operators *Strings *JavaScript Booleans *JavaScript Math Object *JavaScript uses Outside Web Pages.",
            "image": "http://books.google.com/books/content?id=tYIFEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-09-11T00:00:00.000Z"
        },
        {
            "content_html": "All of JavaScript's newest features, in depth, made easy to understand. JavaScript is a rapidly changing language and it can be challenging to keep up with all the new toys being added. JavaScript: The New Toys explores the newest features of the world's most popular programming language while also showing readers how to track what's coming next. After setting the stage by covering who manages the process of improving JavaScript, how new features get introduced, terminology, and a high-level overview of new features, it details each new or updated item in depth, with example uses, possible pitfalls, and expert recommendations for updating old habits in light of new features. JavaScript: The New Toys: Covers all the additions to JavaScript in ES2015-ES2019 plus a preview of ES2020 (and beyond) Explores the latest syntax: nullish coalescing, optional chaining, let and const, class syntax, private methods, private fields, new.target, numeric separators, BigInt, destructuring, default parameters, arrow functions, async functions, await, generator functions, ... (rest and spread), template literals, binary and octal literals, ** (exponentiation), computed property/method names, for-of, for-await-of, shorthand properties, and others Details the new features and patterns including modules, promises, iteration, generators, Symbol, Proxy, reflection, typed arrays, Atomics, shared memory, WeakMap, WeakSet, and more Highlights common pitfalls and explains how to avoid them Shows how to follow the improvements process and even participate in the process yourself Explains how to use new features even before they're widely supported With its comprehensive coverage and friendly, accessible style, JavaScript: The New Toys provides an invaluable resource for programmers everywhere, whether they work in web development, Node.js, Electron, Windows Universal Apps, or another JavaScript environment.<br><blockquote>This book explores the newest features of the world&#39;s most popular programming language while also showing readers how to track what&#39;s coming next.</blockquote>",
            "url": "http://books.google.com/books?id=EJzuDwAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=2&source=gbs_api",
            "title": "JavaScript",
            "summary": "All of JavaScript's newest features, in depth, made easy to understand. JavaScript is a rapidly changing language and it can be challenging to keep up with all the new toys being added. JavaScript: The New Toys explores the newest features of the world's most popular programming language while also showing readers how to track what's coming next. After setting the stage by covering who manages the process of improving JavaScript, how new features get introduced, terminology, and a high-level overview of new features, it details each new or updated item in depth, with example uses, possible pitfalls, and expert recommendations for updating old habits in light of new features. JavaScript: The New Toys: Covers all the additions to JavaScript in ES2015-ES2019 plus a preview of ES2020 (and beyond) Explores the latest syntax: nullish coalescing, optional chaining, let and const, class syntax, private methods, private fields, new.target, numeric separators, BigInt, destructuring, default parameters, arrow functions, async functions, await, generator functions, ... (rest and spread), template literals, binary and octal literals, ** (exponentiation), computed property/method names, for-of, for-await-of, shorthand properties, and others Details the new features and patterns including modules, promises, iteration, generators, Symbol, Proxy, reflection, typed arrays, Atomics, shared memory, WeakMap, WeakSet, and more Highlights common pitfalls and explains how to avoid them Shows how to follow the improvements process and even participate in the process yourself Explains how to use new features even before they're widely supported With its comprehensive coverage and friendly, accessible style, JavaScript: The New Toys provides an invaluable resource for programmers everywhere, whether they work in web development, Node.js, Electron, Windows Universal Apps, or another JavaScript environment.",
            "image": "http://books.google.com/books/content?id=EJzuDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-06-25T00:00:00.000Z"
        },
        {
            "content_html": "This book if for absolute beginners, and it is an introduction to the major components of javascript. By learning the bigger things in Javascript, you will be able to know how to put the remaining pieces together and will be able to get into advanced books more prepared. WHAT IS JAVASCRIPT? JavaScript is one of the most popular programming languages in the world, and growing faster than any other programming language. As a developer, you can use JavaScript to build web and mobile apps, real-time networking apps, command-line tools, and games.4 REASONS TO LEARN JAVASCRIPT JavaScript is a key tool for front-end, back-end, and full-stack developers.The average annual salary for a JavaScript developer is $72,000.Companies like Walmart, Netflix, and PayPal run big internal applications around JavaScript.Having strong JavaScript knowledge will help you land your dream job.Who this book is for: This book is meant for absolute beginners of JavascriptThis book is meant for students that struggled to learn the language beforeThis book is meant for students with a little HTML knowledg<br><blockquote>This book if for absolute beginners, and it is an introduction to the major components of javascript.</blockquote>",
            "url": "http://books.google.com/books?id=Fv0jzgEACAAJ&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "2020 JavaScript Programming for Beginners",
            "summary": "This book if for absolute beginners, and it is an introduction to the major components of javascript. By learning the bigger things in Javascript, you will be able to know how to put the remaining pieces together and will be able to get into advanced books more prepared. WHAT IS JAVASCRIPT? JavaScript is one of the most popular programming languages in the world, and growing faster than any other programming language. As a developer, you can use JavaScript to build web and mobile apps, real-time networking apps, command-line tools, and games.4 REASONS TO LEARN JAVASCRIPT JavaScript is a key tool for front-end, back-end, and full-stack developers.The average annual salary for a JavaScript developer is $72,000.Companies like Walmart, Netflix, and PayPal run big internal applications around JavaScript.Having strong JavaScript knowledge will help you land your dream job.Who this book is for: This book is meant for absolute beginners of JavascriptThis book is meant for students that struggled to learn the language beforeThis book is meant for students with a little HTML knowledg",
            "image": "http://books.google.com/books/content?id=Fv0jzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-08-11T00:00:00.000Z"
        },
        {
            "content_html": "JavaScriptThe Ultimate Beginner's Guide to Learn Javascript programming Step by Step .Why JavaScript?JavaScript, as you might know, is ubiquitous in today's software development world. It is the foundation of frontend web development and is the key ingredient in frameworks like ReactJS, Angular, and VueJS. It can also help create solid backends with platforms like Nodejs, runs desktop applications like Slack, Atom, and Spotify, and runs on mobile phones as Progressive Web Apps (PWAs).In short, it is everywhere-and for good reasons. For starters, compared to other languages like C and Java, JavaScript is generally easier to learn. When we say 'easier', we mean in terms of how quickly you can go from being a JavaScript novice to someone who can actually make a living writing professional, high quality JavaScript code. So, in that sense, it's more accessible than some other languages like C and Java.JavaScript is also a fun and rewarding language, which is especially important when you're just getting started in software development. The community support is very good, so if you get stuck, there's a good chance that the problem and its solution already exist on the web.Now that we've gotten a bird's-eye view of JavaScript, let's get into the more technical detail. JavaScript was created to add 'life to webpages'. Just like HTML and CSS, JavaScript is written in plain text files with a .js extension.As previously mentioned, JavaScript can be used to accomplish many useful operations on the frontend, like validating forms, alerting users, storing temporary data, and performing calculations-to name just a few.Pro tip: Apart from the name itself, JavaScript has no relation to Java. Beginners often get confused between the two languages. Remember that Java is an entirely different language made for a different purpose (although you'll still find it running on certain website backends).<br><blockquote>JavaScript was created to add &#39;life to webpages&#39;.</blockquote>",
            "url": "http://books.google.com/books?id=TXbYzQEACAAJ&dq=JavaScript&hl=&cd=4&source=gbs_api",
            "title": "JavaScript",
            "summary": "JavaScriptThe Ultimate Beginner's Guide to Learn Javascript programming Step by Step .Why JavaScript?JavaScript, as you might know, is ubiquitous in today's software development world. It is the foundation of frontend web development and is the key ingredient in frameworks like ReactJS, Angular, and VueJS. It can also help create solid backends with platforms like Nodejs, runs desktop applications like Slack, Atom, and Spotify, and runs on mobile phones as Progressive Web Apps (PWAs).In short, it is everywhere-and for good reasons. For starters, compared to other languages like C and Java, JavaScript is generally easier to learn. When we say 'easier', we mean in terms of how quickly you can go from being a JavaScript novice to someone who can actually make a living writing professional, high quality JavaScript code. So, in that sense, it's more accessible than some other languages like C and Java.JavaScript is also a fun and rewarding language, which is especially important when you're just getting started in software development. The community support is very good, so if you get stuck, there's a good chance that the problem and its solution already exist on the web.Now that we've gotten a bird's-eye view of JavaScript, let's get into the more technical detail. JavaScript was created to add 'life to webpages'. Just like HTML and CSS, JavaScript is written in plain text files with a .js extension.As previously mentioned, JavaScript can be used to accomplish many useful operations on the frontend, like validating forms, alerting users, storing temporary data, and performing calculations-to name just a few.Pro tip: Apart from the name itself, JavaScript has no relation to Java. Beginners often get confused between the two languages. Remember that Java is an entirely different language made for a different purpose (although you'll still find it running on certain website backends).",
            "image": "http://books.google.com/books/content?id=TXbYzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-07-26T00:00:00.000Z"
        },
        {
            "content_html": "JavaScript has become the most popular programming language in the world. It has attained that position by being easy to use and powerful in its capabilities. It wasn't always that way but today it can be used to build virtually any application you desire. With the addition of HTML5 and CSS3, it allows for wonderfully animated and powerful web sites and applications without having to use other technologies such as Adobe Flash. JavaScript has also become much more standardized across the multiple browsers in use today. With the recent proliferation of libraries and frameworks that many developers use, the focus has shifted towards these new tools, but they still rely on native JavaScript. And these libraries and frameworks can greatly increase the size of your code as well as slowing down performance. This book covers best practices for coding in straight JavaScript as well as pointing out many areas for optimization. The goal is to help programmers produce smaller and faster JavaScript applications. Even programmers using frameworks and libraries can benefit from understanding the performance trade-offs they make when using those tools.<br><blockquote>This book covers best practices for coding in straight JavaScript as well as pointing out many areas for optimization. The goal is to help programmers produce smaller and faster JavaScript applications.</blockquote>",
            "url": "http://books.google.com/books?id=fY2VzQEACAAJ&dq=JavaScript&hl=&cd=5&source=gbs_api",
            "title": "JavaScript",
            "summary": "JavaScript has become the most popular programming language in the world. It has attained that position by being easy to use and powerful in its capabilities. It wasn't always that way but today it can be used to build virtually any application you desire. With the addition of HTML5 and CSS3, it allows for wonderfully animated and powerful web sites and applications without having to use other technologies such as Adobe Flash. JavaScript has also become much more standardized across the multiple browsers in use today. With the recent proliferation of libraries and frameworks that many developers use, the focus has shifted towards these new tools, but they still rely on native JavaScript. And these libraries and frameworks can greatly increase the size of your code as well as slowing down performance. This book covers best practices for coding in straight JavaScript as well as pointing out many areas for optimization. The goal is to help programmers produce smaller and faster JavaScript applications. Even programmers using frameworks and libraries can benefit from understanding the performance trade-offs they make when using those tools.",
            "image": "http://books.google.com/books/content?id=fY2VzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-05-30T00:00:00.000Z"
        },
        {
            "content_html": "For web developers and other programmers interested in using JavaScript, this bestselling book provides the most comprehensive JavaScript material on the market. The seventh edition represents a significant update, with new information for ECMAScript 2020, and new chapters on language-specific features. JavaScript: The Definitive Guide is ideal for experienced programmers who want to learn the programming language of the web, and for current JavaScript programmers who want to master it.<br><blockquote>The overwhelming majority of websites use <b>JavaScript</b>, and all modern web <br>\nbrowsers—on desktops, tablets, and phones—include <b>JavaScript</b> interpreters, <br>\nmaking <b>JavaScript</b> the most-deployed pro‐gramming language in history. Over <br>\nthe last&nbsp;...</blockquote>",
            "url": "http://books.google.com/books?id=OPbkDwAAQBAJ&pg=PA1&dq=JavaScript&hl=&cd=6&source=gbs_api",
            "title": "JavaScript: The Definitive Guide",
            "summary": "For web developers and other programmers interested in using JavaScript, this bestselling book provides the most comprehensive JavaScript material on the market. The seventh edition represents a significant update, with new information for ECMAScript 2020, and new chapters on language-specific features. JavaScript: The Definitive Guide is ideal for experienced programmers who want to learn the programming language of the web, and for current JavaScript programmers who want to master it.",
            "image": "http://books.google.com/books/content?id=OPbkDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-05-14T00:00:00.000Z"
        },
        {
            "content_html": "JavaScript is the little scripting language that could. Once used chiefly to add interactivity to web browser windows, JavaScript is now a primary building block of powerful and robust applications. In this practical book, new and experienced JavaScript developers will learn how to use this language to create APIs as well as web, mobile, and desktop applications. Author and engineering leader Adam D. Scott covers technologies such as Node.js, GraphQL, React, React Native, and Electron. Ideal for developers who want to build full stack applications and ambitious web development beginners looking to bootstrap a startup, this book shows you how to create a single CRUD-style application that will work across several platforms. Explore GraphQL's simple process for querying data Learn about shared authentication for APIs, web apps, and native applications Build performant web applications with React and Styled Components Use React Native to write cross-platform applications for iOS and Android that compile to native code Learn how to write desktop applications with Electron<br><blockquote>In this chapter we&#39;ll take a brief look at the history of <b>JavaScript</b> user interface <br>\ndevel‐opment. With that background knowledge, we&#39;ll then explore the basics of <br>\nReact, the <b>JavaScript</b> library that we&#39;ll be using throughout the remainder of the&nbsp;...</blockquote>",
            "url": "http://books.google.com/books?id=Ek_VDwAAQBAJ&pg=PA102&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "JavaScript Everywhere",
            "summary": "JavaScript is the little scripting language that could. Once used chiefly to add interactivity to web browser windows, JavaScript is now a primary building block of powerful and robust applications. In this practical book, new and experienced JavaScript developers will learn how to use this language to create APIs as well as web, mobile, and desktop applications. Author and engineering leader Adam D. Scott covers technologies such as Node.js, GraphQL, React, React Native, and Electron. Ideal for developers who want to build full stack applications and ambitious web development beginners looking to bootstrap a startup, this book shows you how to create a single CRUD-style application that will work across several platforms. Explore GraphQL's simple process for querying data Learn about shared authentication for APIs, web apps, and native applications Build performant web applications with React and Styled Components Use React Native to write cross-platform applications for iOS and Android that compile to native code Learn how to write desktop applications with Electron",
            "image": "http://books.google.com/books/content?id=Ek_VDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-02-06T00:00:00.000Z"
        },
        {
            "content_html": "Get the most out of JavaScript for building web applications through a series of patterns, techniques, and case studies for clean coding Key Features Write maintainable JS code using internal abstraction, well-written tests, and well-documented code Understand the agents of clean coding like SOLID principles, OOP, and functional programming Explore solutions to tackle common JavaScript challenges in building UIs, managing APIs, and writing states Book Description Building robust apps starts with creating clean code. In this book, you’ll explore techniques for doing this by learning everything from the basics of JavaScript through to the practices of clean code. You’ll write functional, intuitive, and maintainable code while also understanding how your code affects the end user and the wider community. The book starts with popular clean-coding principles such as SOLID, and the Law of Demeter (LoD), along with highlighting the enemies of writing clean code such as cargo culting and over-management. You’ll then delve into JavaScript, understanding the more complex aspects of the language. Next, you’ll create meaningful abstractions using design patterns, such as the Class Pattern and the Revealing Module Pattern. You’ll explore real-world challenges such as DOM reconciliation, state management, dependency management, and security, both within browser and server environments. Later, you’ll cover tooling and testing methodologies and the importance of documenting code. Finally, the book will focus on advocacy and good communication for improving code cleanliness within teams or workplaces, along with covering a case study for clean coding. By the end of this book, you’ll be well-versed with JavaScript and have learned how to create clean abstractions, test them, and communicate about them via documentation. What you will learn Understand the true purpose of code and the problems it solves for your end-users and colleagues Discover the tenets and enemies of clean code considering the effects of cultural and syntactic conventions Use modern JavaScript syntax and design patterns to craft intuitive abstractions Maintain code quality within your team via wise adoption of tooling and advocating best practices Learn the modern ecosystem of JavaScript and its challenges like DOM reconciliation and state management Express the behavior of your code both within tests and via various forms of documentation Who this book is for This book is for anyone who writes JavaScript, professionally or otherwise. As this book does not relate specifically to any particular framework or environment, no prior experience of any JavaScript web framework is required. Some knowledge of programming is assumed to understand the concepts covered in the book more effectively.<br><blockquote>In this book, you’ll explore techniques for doing this by learning everything from the basics of JavaScript through to the practices of clean code.</blockquote>",
            "url": "http://books.google.com/books?id=DprLDwAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=8&source=gbs_api",
            "title": "Clean Code in JavaScript",
            "summary": "Get the most out of JavaScript for building web applications through a series of patterns, techniques, and case studies for clean coding Key Features Write maintainable JS code using internal abstraction, well-written tests, and well-documented code Understand the agents of clean coding like SOLID principles, OOP, and functional programming Explore solutions to tackle common JavaScript challenges in building UIs, managing APIs, and writing states Book Description Building robust apps starts with creating clean code. In this book, you’ll explore techniques for doing this by learning everything from the basics of JavaScript through to the practices of clean code. You’ll write functional, intuitive, and maintainable code while also understanding how your code affects the end user and the wider community. The book starts with popular clean-coding principles such as SOLID, and the Law of Demeter (LoD), along with highlighting the enemies of writing clean code such as cargo culting and over-management. You’ll then delve into JavaScript, understanding the more complex aspects of the language. Next, you’ll create meaningful abstractions using design patterns, such as the Class Pattern and the Revealing Module Pattern. You’ll explore real-world challenges such as DOM reconciliation, state management, dependency management, and security, both within browser and server environments. Later, you’ll cover tooling and testing methodologies and the importance of documenting code. Finally, the book will focus on advocacy and good communication for improving code cleanliness within teams or workplaces, along with covering a case study for clean coding. By the end of this book, you’ll be well-versed with JavaScript and have learned how to create clean abstractions, test them, and communicate about them via documentation. What you will learn Understand the true purpose of code and the problems it solves for your end-users and colleagues Discover the tenets and enemies of clean code considering the effects of cultural and syntactic conventions Use modern JavaScript syntax and design patterns to craft intuitive abstractions Maintain code quality within your team via wise adoption of tooling and advocating best practices Learn the modern ecosystem of JavaScript and its challenges like DOM reconciliation and state management Express the behavior of your code both within tests and via various forms of documentation Who this book is for This book is for anyone who writes JavaScript, professionally or otherwise. As this book does not relate specifically to any particular framework or environment, no prior experience of any JavaScript web framework is required. Some knowledge of programming is assumed to understand the concepts covered in the book more effectively.",
            "image": "http://books.google.com/books/content?id=DprLDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-01-20T00:00:00.000Z"
        },
        {
            "content_html": "Do you want to learn how JavaScript and the major markup languages work? If yes, then keep reading... Hypertext Markup Language (HTML) is part of the three major elements of modern web pages. The other two are Cascading Style Sheets (CSS) and JavaScript. HTML defines the structure of web pages. HTML contains a lot of features and instructs the browser on how to display content. CSS is responsible for styling while JavaScript is a prototype-based language with top-notch functions utilized by web page authors to control element actions. The three major markup languages concepts are explained further in the book. Cascading Style Sheets (CSS) is an excellent way of designing web pages. With CSS, you determine the color of an element, angle, visibility, size, and position, and more. CSS can be utilized either within the document or as an independent file which must be referenced by the HTML document. CSS is a standard way of styling an individual or group of elements at once. There are many parts and tasks that come with the JavaScript language, and we are going to take some time to explore these a bit more. This will make it easier for us to see how this language works and what we can do with it. From learning how to write our own objects, expressions, operators, and more, this guidebook has all of the tools that you need in order to get started with writing some of our own codes in JavaScript. Working with a coding language can seem hard to work with. This is not always as easy to choose as the others, but the number of features and capabilities that come with this language compared to some of the other options, especially when we are talking about using this on web pages, then JavaScript is the right choice for you. When you are ready to learn more about the JavaScript language and what you are able to do with it, make sure to check out this guidebook to help you get started. JavaScript is capable of acting on or influencing web pages. JavaScript enhances web user interface by confirming actions taken by the user on the client-side. JavaScript contains three data types, which are number, Boolean, and string. With JavaScript, you can describe the functions of your own. In this book, you will learn more about: Fundamental JavaScript Concepts HTML Overview JavaScript's Control Flow Statements The Different Types of Loops in JavaScript Syntax Enabling JavaScript in Browsers Placement of JavaScript in Files Popup Message JavaScript Variables JavaScript ECMAScript Standard Working With JavaScript: A Brief HTML Guide for Beginners Changing the content of HTML elements using DOM Changing CSS using DOM Pointers Expressions and Operators What Are Some Of The JavaScript Variables? Variables, data types & constants Closures and Callbacks in JavaScript Apply, call, and bind methods in JavaScript Events Arrays in JavaScript Values, Types, and Operators Definition of Arrays in JavaScript ... AND MORE!!! What are you waiting for? Don't wait anymore, press the buy now button and get started.<br><blockquote>This is not always as easy to choose as the others, but the number of features and capabilities that come with this language compared to some of the other options, especially when we are talking about using this on web pages, then ...</blockquote>",
            "url": "http://books.google.com/books?id=h49lzQEACAAJ&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "JavaScript",
            "summary": "Do you want to learn how JavaScript and the major markup languages work? If yes, then keep reading... Hypertext Markup Language (HTML) is part of the three major elements of modern web pages. The other two are Cascading Style Sheets (CSS) and JavaScript. HTML defines the structure of web pages. HTML contains a lot of features and instructs the browser on how to display content. CSS is responsible for styling while JavaScript is a prototype-based language with top-notch functions utilized by web page authors to control element actions. The three major markup languages concepts are explained further in the book. Cascading Style Sheets (CSS) is an excellent way of designing web pages. With CSS, you determine the color of an element, angle, visibility, size, and position, and more. CSS can be utilized either within the document or as an independent file which must be referenced by the HTML document. CSS is a standard way of styling an individual or group of elements at once. There are many parts and tasks that come with the JavaScript language, and we are going to take some time to explore these a bit more. This will make it easier for us to see how this language works and what we can do with it. From learning how to write our own objects, expressions, operators, and more, this guidebook has all of the tools that you need in order to get started with writing some of our own codes in JavaScript. Working with a coding language can seem hard to work with. This is not always as easy to choose as the others, but the number of features and capabilities that come with this language compared to some of the other options, especially when we are talking about using this on web pages, then JavaScript is the right choice for you. When you are ready to learn more about the JavaScript language and what you are able to do with it, make sure to check out this guidebook to help you get started. JavaScript is capable of acting on or influencing web pages. JavaScript enhances web user interface by confirming actions taken by the user on the client-side. JavaScript contains three data types, which are number, Boolean, and string. With JavaScript, you can describe the functions of your own. In this book, you will learn more about: Fundamental JavaScript Concepts HTML Overview JavaScript's Control Flow Statements The Different Types of Loops in JavaScript Syntax Enabling JavaScript in Browsers Placement of JavaScript in Files Popup Message JavaScript Variables JavaScript ECMAScript Standard Working With JavaScript: A Brief HTML Guide for Beginners Changing the content of HTML elements using DOM Changing CSS using DOM Pointers Expressions and Operators What Are Some Of The JavaScript Variables? Variables, data types & constants Closures and Callbacks in JavaScript Apply, call, and bind methods in JavaScript Events Arrays in JavaScript Values, Types, and Operators Definition of Arrays in JavaScript ... AND MORE!!! What are you waiting for? Don't wait anymore, press the buy now button and get started.",
            "image": "http://books.google.com/books/content?id=h49lzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-02-01T00:00:00.000Z"
        },
        {
            "content_html": "Develop your JavaScript programming skills by learning strategies and techniques commonly used in modern full-stack application development Key Features Write and deploy full-stack applications efficiently with JavaScript Delve into JavaScript’s multiple programming paradigms Get up to speed with core concepts such as modularity and functional programming to write efficient code Book Description In depth knowledge of JavaScript makes it easier to learn a variety of other frameworks, including React, Angular, and related tools and libraries. This book is designed to help you cover the core JavaScript concepts you need to build modern applications. You'll start by learning how to represent an HTML document in the Document Object Model (DOM). Then, you'll combine your knowledge of the DOM and Node.js to create a web scraper for practical situations. As you read through further lessons, you'll create a Node.js-based RESTful API using the Express library for Node.js. You'll also understand how modular designs can be used for better reusability and collaboration with multiple developers on a single project. Later lessons will guide you through building unit tests, which ensure that the core functionality of your program is not affected over time. The book will also demonstrate how constructors, async/await, and events can load your applications quickly and efficiently. Finally, you'll gain useful insights into functional programming concepts such as immutability, pure functions, and higher-order functions. By the end of this book, you'll have the skills you need to tackle any real-world JavaScript development problem using a modern JavaScript approach, both for the client and server sides. What you will learn Apply the core concepts of functional programming Build a Node.js project that uses the Express.js library to host an API Create unit tests for a Node.js project to validate it Use the Cheerio library with Node.js to create a basic web scraper Develop a React interface to build processing flows Use callbacks as a basic way to bring control back Who this book is for If you want to advance from being a frontend developer to a full-stack developer and learn how Node.js can be used for hosting full-stack applications, this is an ideal book for you. After reading this book, you'll be able to write better JavaScript code and learn about the latest trends in the language. To easily grasp the concepts explained here, you should know the basic syntax of JavaScript and should've worked with popular frontend libraries such as jQuery. You should have also used JavaScript with HTML and CSS but not necessarily Node.js.<br><blockquote>Professional JavaScript is your one-stop solution to mastering modern JavaScript. This book covers the latest features of JavaScript, and advanced concepts including modularity, testing, and asynchronous programming.</blockquote>",
            "url": "http://books.google.com/books?id=zSOzDwAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "Professional JavaScript",
            "summary": "Develop your JavaScript programming skills by learning strategies and techniques commonly used in modern full-stack application development Key Features Write and deploy full-stack applications efficiently with JavaScript Delve into JavaScript’s multiple programming paradigms Get up to speed with core concepts such as modularity and functional programming to write efficient code Book Description In depth knowledge of JavaScript makes it easier to learn a variety of other frameworks, including React, Angular, and related tools and libraries. This book is designed to help you cover the core JavaScript concepts you need to build modern applications. You'll start by learning how to represent an HTML document in the Document Object Model (DOM). Then, you'll combine your knowledge of the DOM and Node.js to create a web scraper for practical situations. As you read through further lessons, you'll create a Node.js-based RESTful API using the Express library for Node.js. You'll also understand how modular designs can be used for better reusability and collaboration with multiple developers on a single project. Later lessons will guide you through building unit tests, which ensure that the core functionality of your program is not affected over time. The book will also demonstrate how constructors, async/await, and events can load your applications quickly and efficiently. Finally, you'll gain useful insights into functional programming concepts such as immutability, pure functions, and higher-order functions. By the end of this book, you'll have the skills you need to tackle any real-world JavaScript development problem using a modern JavaScript approach, both for the client and server sides. What you will learn Apply the core concepts of functional programming Build a Node.js project that uses the Express.js library to host an API Create unit tests for a Node.js project to validate it Use the Cheerio library with Node.js to create a basic web scraper Develop a React interface to build processing flows Use callbacks as a basic way to bring control back Who this book is for If you want to advance from being a frontend developer to a full-stack developer and learn how Node.js can be used for hosting full-stack applications, this is an ideal book for you. After reading this book, you'll be able to write better JavaScript code and learn about the latest trends in the language. To easily grasp the concepts explained here, you should know the basic syntax of JavaScript and should've worked with popular frontend libraries such as jQuery. You should have also used JavaScript with HTML and CSS but not necessarily Node.js.",
            "image": "http://books.google.com/books/content?id=zSOzDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-09-30T00:00:00.000Z"
        }
    ]
}