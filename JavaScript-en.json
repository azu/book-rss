{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "Gain the knowledge you need to navigate your way confidently through the ever-expanding landscape of modern JavaScript technologies. With over one hundred Node.js frameworks available and the number rising every month, it is becoming increasingly difficult to avoid JavaScript fatigue and keep abreast of the developments that are most useful and relevant to your own projects. In such a saturated environment, the knowledge of exactly which tools will best fit your goals is invaluable. This book will guide you through the quagmire by clearly and comprehensively outlining the most practically useful Node frameworks, libraries and tools, and how they might be employed in your own projects. You will learn about JavaScript frameworks such as Polymer, Webix, Aurelia, Svelte, Meteor, and many, many more. This book will empower you to cut through the noise and learn how to achieve your career goals with the right tools meant especially for you. What Will You Learn: The what, why and how behind a variety of JavaScript Node frameworks, including Polymer, Aurelia, Svelte, and more. How to choose the right Node framework for different types of project How to ensure server-side optimization is done correctly, even if you are not a server admin Guide to JS tools such as Gulp, Grunt and npm Who Is This Book For: Web developers of all levels of ability; particularly relevant for front-end developers, server-side coders, and developers interested in learning JavaScript.<br><blockquote>This book will guide you through the quagmire by clearly and comprehensively outlining the most practically useful Node frameworks, libraries and tools, and how they might be employed in your own projects.</blockquote>",
            "url": "http://books.google.com/books?id=UX6dzgEACAAJ&dq=JavaScript&hl=&cd=4&source=gbs_api",
            "title": "Getting the Most Out of Node.Js Frameworks",
            "summary": "Gain the knowledge you need to navigate your way confidently through the ever-expanding landscape of modern JavaScript technologies. With over one hundred Node.js frameworks available and the number rising every month, it is becoming increasingly difficult to avoid JavaScript fatigue and keep abreast of the developments that are most useful and relevant to your own projects. In such a saturated environment, the knowledge of exactly which tools will best fit your goals is invaluable. This book will guide you through the quagmire by clearly and comprehensively outlining the most practically useful Node frameworks, libraries and tools, and how they might be employed in your own projects. You will learn about JavaScript frameworks such as Polymer, Webix, Aurelia, Svelte, Meteor, and many, many more. This book will empower you to cut through the noise and learn how to achieve your career goals with the right tools meant especially for you. What Will You Learn: The what, why and how behind a variety of JavaScript Node frameworks, including Polymer, Aurelia, Svelte, and more. How to choose the right Node framework for different types of project How to ensure server-side optimization is done correctly, even if you are not a server admin Guide to JS tools such as Gulp, Grunt and npm Who Is This Book For: Web developers of all levels of ability; particularly relevant for front-end developers, server-side coders, and developers interested in learning JavaScript.",
            "date_modified": "2022-03-21T00:00:00.000Z"
        },
        {
            "content_html": "Create responsive front-end web applications in Python using the React and Material-UI JavaScript libraries, without having to program in JavaScript, by using the Transcrypt transpiler that turns your Python code into JavaScript.<br><blockquote>Create responsive front-end web applications in Python using the React and Material-UI JavaScript libraries, without having to program in JavaScript, by using the Transcrypt transpiler that turns your Python code into JavaScript.</blockquote>",
            "url": "http://books.google.com/books?id=EnplzgEACAAJ&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "React to Python",
            "summary": "Create responsive front-end web applications in Python using the React and Material-UI JavaScript libraries, without having to program in JavaScript, by using the Transcrypt transpiler that turns your Python code into JavaScript.",
            "image": "http://books.google.com/books/content?id=EnplzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-05-01T00:00:00.000Z"
        },
        {
            "content_html": "javascript has existed since 1995 and has since taken over as the dominant language for web development. For much of its life, JavaScript was used mainly for client-side scripting inside tags executing in web browsers. This limitation meant that developers were often working in many different languages and frameworks between the front-end (client-side) and backend (server-side) aspects of a web application. Although there were other projects to bring JavaScript to server-side applications, the functionality took off with the launch of Node.js in 2009. Node allows developers to write JavaScript code that runs directly in a computer process itself instead of in a browser. Node can, therefore, be used to write server-side applications with access to the operating system, file system, and everything else required to build fully-functional applications. Node.js is written in C, C++, and JavaScript, and it is built on the open-source V8 JavaScript engine which also powers JS in browsers such as Google Chrome. As V8 supports new features in JavaScript, they are incorporated into Node.<br><blockquote>Node.js is written in C, C++, and JavaScript, and it is built on the open-source V8 JavaScript engine which also powers JS in browsers such as Google Chrome. As V8 supports new features in JavaScript, they are incorporated into Node.</blockquote>",
            "url": "http://books.google.com/books?id=589gzgEACAAJ&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "Node.js",
            "summary": "javascript has existed since 1995 and has since taken over as the dominant language for web development. For much of its life, JavaScript was used mainly for client-side scripting inside tags executing in web browsers. This limitation meant that developers were often working in many different languages and frameworks between the front-end (client-side) and backend (server-side) aspects of a web application. Although there were other projects to bring JavaScript to server-side applications, the functionality took off with the launch of Node.js in 2009. Node allows developers to write JavaScript code that runs directly in a computer process itself instead of in a browser. Node can, therefore, be used to write server-side applications with access to the operating system, file system, and everything else required to build fully-functional applications. Node.js is written in C, C++, and JavaScript, and it is built on the open-source V8 JavaScript engine which also powers JS in browsers such as Google Chrome. As V8 supports new features in JavaScript, they are incorporated into Node.",
            "image": "http://books.google.com/books/content?id=589gzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2021-04-03T00:00:00.000Z"
        }
    ]
}