{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "In addition to teaching developers how to solve complex problems, Data Structures and Algorithms in JavaScript is strong preparation for coding interviews and programming competitions. For JavaScript developers, this book is the best way to learn how data structures and algorithms can be used to solve complex problems—and immediately implement them. For Javascript developers, this book is a one-stop-shop for learning the algorithms and data structures that solve and optimize complex problems. Covering everything from functional programming and abstract data types, to sorting and searching, lists, bags, binary trees, forests, heaps, and graphs—the author uses examples taken from coding challenges and interview questions, enabling readers to explore the real-world advantages of specific algorithms and data structures. Written and illustrated to be a developer’s go-to reference manual as well as for immediate on-the-job applications, performance—both from a theoretical point of view and a practical standpoint—is considered alongside every algorithm or data structure introduced. In addition to demonstrating best practices throughout the text, each chapter ends with a series of questions that amplify the preceding concepts and provide further examples for the reader to apply. Also of note, the book utilizes the latest version of JavaScript (ECMAScript) and its more modern features wherever appropriate.<br><blockquote>This book addresses one of the most glaring gaps in JavaScript developers’ knowledge base—basic computer science concepts, like data structures and algorithms, for solving complex problems.</blockquote>",
            "url": "http://books.google.com/books?id=_Mh9EAAAQBAJ&dq=JavaScript&hl=&cd=1&source=gbs_api",
            "title": "Data Structures and Algorithms in JavaScript",
            "summary": "In addition to teaching developers how to solve complex problems, Data Structures and Algorithms in JavaScript is strong preparation for coding interviews and programming competitions. For JavaScript developers, this book is the best way to learn how data structures and algorithms can be used to solve complex problems—and immediately implement them. For Javascript developers, this book is a one-stop-shop for learning the algorithms and data structures that solve and optimize complex problems. Covering everything from functional programming and abstract data types, to sorting and searching, lists, bags, binary trees, forests, heaps, and graphs—the author uses examples taken from coding challenges and interview questions, enabling readers to explore the real-world advantages of specific algorithms and data structures. Written and illustrated to be a developer’s go-to reference manual as well as for immediate on-the-job applications, performance—both from a theoretical point of view and a practical standpoint—is considered alongside every algorithm or data structure introduced. In addition to demonstrating best practices throughout the text, each chapter ends with a series of questions that amplify the preceding concepts and provide further examples for the reader to apply. Also of note, the book utilizes the latest version of JavaScript (ECMAScript) and its more modern features wherever appropriate.",
            "image": "http://books.google.com/books/content?id=_Mh9EAAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2023-08-01T00:00:00.000Z"
        },
        {
            "content_html": "Learning JavaScript: A Comprehensive Guide from Beginner to Intermediate is an in-depth guide to learning the fundamental concepts of JavaScript and becoming proficient in the language. The book is designed for beginners who have little or no prior programming experience, as well as intermediate learners who want to improve their skills. The book is divided into eight chapters, each covering a different topic in JavaScript. Chapter 1 provides an introduction to JavaScript, its importance in web development, and the development environment setup. Chapters 2-4 cover the basics of JavaScript syntax, data types, variables and constants, control structures, functions, and objects. Chapters 5-6 delve into more advanced topics such as asynchronous programming, JavaScript libraries and frameworks, and modern JavaScript techniques and tools. Chapter 7 explores advanced JavaScript concepts and techniques such as using JavaScript with server-side technologies and testing frameworks. Finally, Chapter 8 provides best practices for JavaScript development. Throughout the book, readers will find numerous examples and exercises to reinforce their understanding of the material. The book also includes best practices for JavaScript development, which can help readers write more efficient and maintainable code. By the end of the book, readers will have a strong foundation in JavaScript and will be able to build complex applications using the language.<br><blockquote>By the end of the book, readers will have a strong foundation in JavaScript and will be able to build complex applications using the language.</blockquote>",
            "url": "http://books.google.com/books?id=GHa3EAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=2&source=gbs_api",
            "title": "Learning JavaScript - A Comprehensive Guide from Beginner to Intermediate",
            "summary": "Learning JavaScript: A Comprehensive Guide from Beginner to Intermediate is an in-depth guide to learning the fundamental concepts of JavaScript and becoming proficient in the language. The book is designed for beginners who have little or no prior programming experience, as well as intermediate learners who want to improve their skills. The book is divided into eight chapters, each covering a different topic in JavaScript. Chapter 1 provides an introduction to JavaScript, its importance in web development, and the development environment setup. Chapters 2-4 cover the basics of JavaScript syntax, data types, variables and constants, control structures, functions, and objects. Chapters 5-6 delve into more advanced topics such as asynchronous programming, JavaScript libraries and frameworks, and modern JavaScript techniques and tools. Chapter 7 explores advanced JavaScript concepts and techniques such as using JavaScript with server-side technologies and testing frameworks. Finally, Chapter 8 provides best practices for JavaScript development. Throughout the book, readers will find numerous examples and exercises to reinforce their understanding of the material. The book also includes best practices for JavaScript development, which can help readers write more efficient and maintainable code. By the end of the book, readers will have a strong foundation in JavaScript and will be able to build complex applications using the language.",
            "image": "http://books.google.com/books/content?id=GHa3EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2023-03-03T00:00:00.000Z"
        },
        {
            "content_html": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.<br><blockquote>Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT.</blockquote>",
            "url": "http://books.google.com/books?id=WSUuEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "Structure and Interpretation of Computer Programs",
            "summary": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.",
            "image": "http://books.google.com/books/content?id=WSUuEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-05-03T00:00:00.000Z"
        },
        {
            "content_html": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.<br><blockquote>Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT.</blockquote>",
            "url": "http://books.google.com/books?id=4rtNEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=4&source=gbs_api",
            "title": "Structure and Interpretation of Computer Programs",
            "summary": "A new version of the classic and widely used text adapted for the JavaScript programming language. Since the publication of its first edition in 1984 and its second edition in 1996, Structure and Interpretation of Computer Programs (SICP) has influenced computer science curricula around the world. Widely adopted as a textbook, the book has its origins in a popular entry-level computer science course taught by Harold Abelson and Gerald Jay Sussman at MIT. SICP introduces the reader to central ideas of computation by establishing a series of mental models for computation. Earlier editions used the programming language Scheme in their program examples. This new version of the second edition has been adapted for JavaScript. The first three chapters of SICP cover programming concepts that are common to all modern high-level programming languages. Chapters four and five, which used Scheme to formulate language processors for Scheme, required significant revision. Chapter four offers new material, in particular an introduction to the notion of program parsing. The evaluator and compiler in chapter five introduce a subtle stack discipline to support return statements (a prominent feature of statement-oriented languages) without sacrificing tail recursion. The JavaScript programs included in the book run in any implementation of the language that complies with the ECMAScript 2020 specification, using the JavaScript package sicp provided by the MIT Press website.",
            "image": "http://books.google.com/books/content?id=4rtNEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-04-12T00:00:00.000Z"
        },
        {
            "content_html": "This book will get you programming in Javascript as quickly as possible. It is written for those with basic programming knowledge. JavaScript is the language - the only language - used by browsers. With these tools, you will be able to build interactive web pages.<br><blockquote>This book will get you programming in Javascript as quickly as possible.</blockquote>",
            "url": "http://books.google.com/books?id=uLFuzwEACAAJ&dq=JavaScript&hl=&cd=5&source=gbs_api",
            "title": "Quick JavaScript",
            "summary": "This book will get you programming in Javascript as quickly as possible. It is written for those with basic programming knowledge. JavaScript is the language - the only language - used by browsers. With these tools, you will be able to build interactive web pages.",
            "image": "http://books.google.com/books/content?id=uLFuzwEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2023-01-01T00:00:00.000Z"
        },
        {
            "content_html": "Why reinvent the wheel every time you run into a problem with JavaScript? This cookbook is chock-full of code recipes for common programming tasks, along with techniques for building apps that work in any browser. You'll get adaptable code samples that you can add to almost any project--and you'll learn more about JavaScript in the process. The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards. You'll learn how to: Set up a productive development environment with a code editor, linter, and test server Work with JavaScript data types, such as strings, arrays, and BigInts Improve your understanding of JavaScript functions, including arrow functions, closures, and generators Apply object-oriented programming concepts like classes and inheritance Work with rich media in JavaScript, including audio, video, and SVGs Manipulate HTML markup and CSS styles Use JavaScript anywhere with Node.js Access and manipulate remote data with REST, GraphQL, and Fetch Get started with the popular Express application-building framework Perform asynchronous operations with Promises, async/await, and web workers<br><blockquote>The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards.</blockquote>",
            "url": "http://books.google.com/books?id=4tA4EAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=6&source=gbs_api",
            "title": "JavaScript Cookbook",
            "summary": "Why reinvent the wheel every time you run into a problem with JavaScript? This cookbook is chock-full of code recipes for common programming tasks, along with techniques for building apps that work in any browser. You'll get adaptable code samples that you can add to almost any project--and you'll learn more about JavaScript in the process. The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards. You'll learn how to: Set up a productive development environment with a code editor, linter, and test server Work with JavaScript data types, such as strings, arrays, and BigInts Improve your understanding of JavaScript functions, including arrow functions, closures, and generators Apply object-oriented programming concepts like classes and inheritance Work with rich media in JavaScript, including audio, video, and SVGs Manipulate HTML markup and CSS styles Use JavaScript anywhere with Node.js Access and manipulate remote data with REST, GraphQL, and Fetch Get started with the popular Express application-building framework Perform asynchronous operations with Promises, async/await, and web workers",
            "image": "http://books.google.com/books/content?id=4tA4EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-16T00:00:00.000Z"
        },
        {
            "content_html": "Why reinvent the wheel every time you run into a problem with JavaScript? This cookbook is chock-full of code recipes for common programming tasks, along with techniques for building apps that work in any browser. You'll get adaptable code samples that you can add to almost any project--and you'll learn more about JavaScript in the process. The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards. You'll learn how to: Set up a productive development environment with a code editor, linter, and test server Work with JavaScript data types, such as strings, arrays, and BigInts Improve your understanding of JavaScript functions, including arrow functions, closures, and generators Apply object-oriented programming concepts like classes and inheritance Work with rich media in JavaScript, including audio, video, and SVGs Manipulate HTML markup and CSS styles Use JavaScript anywhere with Node.js Access and manipulate remote data with REST, GraphQL, and Fetch Get started with the popular Express application-building framework Perform asynchronous operations with Promises, async/await, and web workers<br><blockquote>The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards.</blockquote>",
            "url": "http://books.google.com/books?id=4NA4EAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "JavaScript Cookbook",
            "summary": "Why reinvent the wheel every time you run into a problem with JavaScript? This cookbook is chock-full of code recipes for common programming tasks, along with techniques for building apps that work in any browser. You'll get adaptable code samples that you can add to almost any project--and you'll learn more about JavaScript in the process. The recipes in this book take advantage of the latest features in ECMAScript 2020 and beyond and use modern JavaScript coding standards. You'll learn how to: Set up a productive development environment with a code editor, linter, and test server Work with JavaScript data types, such as strings, arrays, and BigInts Improve your understanding of JavaScript functions, including arrow functions, closures, and generators Apply object-oriented programming concepts like classes and inheritance Work with rich media in JavaScript, including audio, video, and SVGs Manipulate HTML markup and CSS styles Use JavaScript anywhere with Node.js Access and manipulate remote data with REST, GraphQL, and Fetch Get started with the popular Express application-building framework Perform asynchronous operations with Promises, async/await, and web workers",
            "image": "http://books.google.com/books/content?id=4NA4EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-16T00:00:00.000Z"
        },
        {
            "content_html": "Little known to many, R works just as well with JavaScript—this book delves into the various ways both languages can work together. The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow. In that respect the book is not teaching one JavaScript but rather we show how little JavaScript can greatly support and enhance R code. Therefore, the focus is on integrating external JavaScript libraries and no prior knowledge of JavaScript is required. Key Features: ● Easy to pick up. ● An entry way to learning JavaScript for R. ● Covers topics not covered anywhere else. ● Easy to follow along.<br><blockquote>The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow.</blockquote>",
            "url": "http://books.google.com/books?id=ntUxEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=8&source=gbs_api",
            "title": "Javascript for R",
            "summary": "Little known to many, R works just as well with JavaScript—this book delves into the various ways both languages can work together. The ultimate aim of this work is to put the reader at ease with inviting JavaScript in their data science workflow. In that respect the book is not teaching one JavaScript but rather we show how little JavaScript can greatly support and enhance R code. Therefore, the focus is on integrating external JavaScript libraries and no prior knowledge of JavaScript is required. Key Features: ● Easy to pick up. ● An entry way to learning JavaScript for R. ● Covers topics not covered anywhere else. ● Easy to follow along.",
            "image": "http://books.google.com/books/content?id=ntUxEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-15T00:00:00.000Z"
        },
        {
            "content_html": "Learn to use JavaScript, the popular scripting language that allows web page authors to develop interactive web pages and sites. Carey/Vodnik's JAVASCRIPT FOR WEB WARRIORS, Seventh Edition introduces a variety of techniques that focus on what you need to know to begin using JavaScript right away. Step-by-step tasks within each chapter focus on particular techniques essential for building actual JavaScript programs. Guided activities reinforce skills and build in complexity as you progress. You also study debugging techniques. This edition's text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications. Learning objectives, summaries, review and key terms highlight major concepts while reinforcement exercises let you further practice new techniques. After completing this course, you will able to use JavaScript to build professional quality web applications. Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.<br><blockquote>You also study debugging techniques. This edition&#39;s text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications.</blockquote>",
            "url": "http://books.google.com/books?id=Iwk1EAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "JavaScript for Web Warriors",
            "summary": "Learn to use JavaScript, the popular scripting language that allows web page authors to develop interactive web pages and sites. Carey/Vodnik's JAVASCRIPT FOR WEB WARRIORS, Seventh Edition introduces a variety of techniques that focus on what you need to know to begin using JavaScript right away. Step-by-step tasks within each chapter focus on particular techniques essential for building actual JavaScript programs. Guided activities reinforce skills and build in complexity as you progress. You also study debugging techniques. This edition's text is embedding with JavaScript coding exercises that let you read and immediately practice to strengthen your understanding of new programming concepts and their applications. Learning objectives, summaries, review and key terms highlight major concepts while reinforcement exercises let you further practice new techniques. After completing this course, you will able to use JavaScript to build professional quality web applications. Important Notice: Media content referenced within the product description or the product text may not be available in the ebook version.",
            "image": "http://books.google.com/books/content?id=Iwk1EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-06T00:00:00.000Z"
        },
        {
            "content_html": "Discover how to take advantage of common cryptographic operations to build safer apps that respect users' privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common cryptographic operations in your code with practical examples Learn about picking modern safe algorithms, which libraries you should rely on, and how to use them correctly Build modern and secure applications that respect your users' privacy with cryptography Book Description: If you're a software developer, this book will give you an introduction to cryptography, helping you understand how to make the most of it for your applications. The book contains extensive code samples in JavaScript, both for Node.js and for frontend apps running in a web browser, although the core concepts can be used by developers working with any programming language and framework. With a purely hands-on approach that is focused on sharing actionable knowledge, you'll learn about the common categories of cryptographic operations that you can leverage in all apps you're developing, including hashing, encryption with symmetric, asymmetric and hybrid ciphers, and digital signatures. You'll learn when to use these operations and how to choose and implement the most popular algorithms to perform them, including SHA-2, Argon2, AES, ChaCha20-Poly1305, RSA, and Elliptic Curve Cryptography. Later, you'll learn how to deal with password and key management. All code in this book is written in JavaScript and designed to run in Node.js or as part of frontend apps for web browsers. By the end of this book, you'll be able to build solutions that leverage cryptography to protect user privacy, offer better security against an expanding and more complex threat landscape, help meet data protection requirements, and unlock new opportunities. What You Will Learn: Write JavaScript code that uses cryptography running within a Node.js environment for the server-side or in frontend applications for web browsers Use modern, safe hashing functions for calculating digests and key derivation, including SHA-2 and Argon2 Practice encrypting messages and files with a symmetric key using AES and ChaCha20-Poly1305 Use asymmetric and hybrid encryption, leveraging RSA and Elliptic Curve Cryptography with ECDH and ECIES Calculate and verify digital signatures using RSA and ECDSA/EdDSA Manage passwords and encryption keys safely Who this book is for: This cryptography book is an introductory guide for software developers who don't necessarily have a background in cryptography but are interested in learning how to integrate it in their solutions, correctly and safely. You'll need to have at least intermediate-level knowledge of building apps with JavaScript and familiarity with Node.js to make the most of this book.<br><blockquote>Discover how to take advantage of common cryptographic operations to build safer apps that respect users&#39; privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common ...</blockquote>",
            "url": "http://books.google.com/books?id=YNaczgEACAAJ&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "Essential Cryptography for JavaScript Developers",
            "summary": "Discover how to take advantage of common cryptographic operations to build safer apps that respect users' privacy with the help of examples in JavaScript for Node.js and browsers Key Features: Understand how to implement common cryptographic operations in your code with practical examples Learn about picking modern safe algorithms, which libraries you should rely on, and how to use them correctly Build modern and secure applications that respect your users' privacy with cryptography Book Description: If you're a software developer, this book will give you an introduction to cryptography, helping you understand how to make the most of it for your applications. The book contains extensive code samples in JavaScript, both for Node.js and for frontend apps running in a web browser, although the core concepts can be used by developers working with any programming language and framework. With a purely hands-on approach that is focused on sharing actionable knowledge, you'll learn about the common categories of cryptographic operations that you can leverage in all apps you're developing, including hashing, encryption with symmetric, asymmetric and hybrid ciphers, and digital signatures. You'll learn when to use these operations and how to choose and implement the most popular algorithms to perform them, including SHA-2, Argon2, AES, ChaCha20-Poly1305, RSA, and Elliptic Curve Cryptography. Later, you'll learn how to deal with password and key management. All code in this book is written in JavaScript and designed to run in Node.js or as part of frontend apps for web browsers. By the end of this book, you'll be able to build solutions that leverage cryptography to protect user privacy, offer better security against an expanding and more complex threat landscape, help meet data protection requirements, and unlock new opportunities. What You Will Learn: Write JavaScript code that uses cryptography running within a Node.js environment for the server-side or in frontend applications for web browsers Use modern, safe hashing functions for calculating digests and key derivation, including SHA-2 and Argon2 Practice encrypting messages and files with a symmetric key using AES and ChaCha20-Poly1305 Use asymmetric and hybrid encryption, leveraging RSA and Elliptic Curve Cryptography with ECDH and ECIES Calculate and verify digital signatures using RSA and ECDSA/EdDSA Manage passwords and encryption keys safely Who this book is for: This cryptography book is an introductory guide for software developers who don't necessarily have a background in cryptography but are interested in learning how to integrate it in their solutions, correctly and safely. You'll need to have at least intermediate-level knowledge of building apps with JavaScript and familiarity with Node.js to make the most of this book.",
            "image": "http://books.google.com/books/content?id=YNaczgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2022-02-28T00:00:00.000Z"
        }
    ]
}