{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "Learn the skills you need to build React applications quickly! This fully revised second edition introduces functional components, React hooks, static site generators, and more. Build your skills with React and its ecosystem fast. There’s no slow theory and tedious history. You’ll dive into React code right from the very first chapter. The book teaches you how React thinks, introducing ways of structuring your architecture that even work with large teams. React Quickly, Second Edition is a practical guide to React for busy web developers. Following over 100 carefully chosen and clearly explained examples, you'll learn React development using your existing JavaScript and web development skills. This totally rewritten second edition is full of brand new topics, including chapters on functional components, static site generations, and CSS in JS. Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.<br><blockquote>The book teaches you how React thinks, introducing ways of structuring your architecture that even work with large teams. React Quickly, Second Edition is a practical guide to React for busy web developers.</blockquote>",
            "url": "http://books.google.com/books?id=eTfwzgEACAAJ&dq=JavaScript&hl=&cd=2&source=gbs_api",
            "title": "React Quickly, Second Edition",
            "summary": "Learn the skills you need to build React applications quickly! This fully revised second edition introduces functional components, React hooks, static site generators, and more. Build your skills with React and its ecosystem fast. There’s no slow theory and tedious history. You’ll dive into React code right from the very first chapter. The book teaches you how React thinks, introducing ways of structuring your architecture that even work with large teams. React Quickly, Second Edition is a practical guide to React for busy web developers. Following over 100 carefully chosen and clearly explained examples, you'll learn React development using your existing JavaScript and web development skills. This totally rewritten second edition is full of brand new topics, including chapters on functional components, static site generations, and CSS in JS. Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.",
            "image": "http://books.google.com/books/content?id=eTfwzgEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2022-10-25T00:00:00.000Z"
        },
        {
            "content_html": "Get familiar with React design patterns and best practices to solve common React development problems KEY FEATURES ● Get tips to create a better React app architecture. ● Explore the best practices for building scalable React apps. ● Discover ways to write tests for your React applications. DESCRIPTION React is a JavaScript library created by Facebook to help build applications with components. In React, there are proven methods to solve common problems experienced by React developers. If you are looking for different ways how to choose your pattern when building a React app, then this book is for you. The book starts by sharing the best practices for architecting your React app. It then helps you learn how to create clean, performant, and maintainable React components using JavaScript and TypeScript. The book helps you explore and work with some useful hooks in React. It also helps you learn how to enable server-side rendering for your React app. Later, the book will help you discover ways to style your React components effectively. Towards the end, the book will help you learn how to write tests for your React applications. By the end of the book, you will be able to build complex and maintainable React apps with JavaScript and TypeScript. WHAT YOU WILL LEARN ● Learn how to manage State with Hooks on React components. ● Learn how to style React components with CSS. ● Understand how to use Next.js for server-side rendering of your React app. ● Explore different ways to fetch data using API in React. ● Test your React app with React testing library, Jest, and Cypress. WHO THIS BOOK IS FOR This book is for Web developers, JavaScript developers, and Typescript developers who want to build complex and scalable apps with React. Software engineers and developers who are early in their React careers will find this book very helpful. TABLE OF CONTENTS 1. React Anti-Patterns and Best Practices 2. Writing Components 3. Clean and Maintainable Code 4. React Hooks 5. Styling 6. Server-Side Renderings 7. Data Fetching 8. Building Scalable Applications 9. Testing<br><blockquote>If you are looking for different ways how to choose your pattern when building a React app, then this book is for you. The book starts by sharing the best practices for architecting your React app.</blockquote>",
            "url": "http://books.google.com/books?id=UfmpEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "React.js Design Patterns",
            "summary": "Get familiar with React design patterns and best practices to solve common React development problems KEY FEATURES ● Get tips to create a better React app architecture. ● Explore the best practices for building scalable React apps. ● Discover ways to write tests for your React applications. DESCRIPTION React is a JavaScript library created by Facebook to help build applications with components. In React, there are proven methods to solve common problems experienced by React developers. If you are looking for different ways how to choose your pattern when building a React app, then this book is for you. The book starts by sharing the best practices for architecting your React app. It then helps you learn how to create clean, performant, and maintainable React components using JavaScript and TypeScript. The book helps you explore and work with some useful hooks in React. It also helps you learn how to enable server-side rendering for your React app. Later, the book will help you discover ways to style your React components effectively. Towards the end, the book will help you learn how to write tests for your React applications. By the end of the book, you will be able to build complex and maintainable React apps with JavaScript and TypeScript. WHAT YOU WILL LEARN ● Learn how to manage State with Hooks on React components. ● Learn how to style React components with CSS. ● Understand how to use Next.js for server-side rendering of your React app. ● Explore different ways to fetch data using API in React. ● Test your React app with React testing library, Jest, and Cypress. WHO THIS BOOK IS FOR This book is for Web developers, JavaScript developers, and Typescript developers who want to build complex and scalable apps with React. Software engineers and developers who are early in their React careers will find this book very helpful. TABLE OF CONTENTS 1. React Anti-Patterns and Best Practices 2. Writing Components 3. Clean and Maintainable Code 4. React Hooks 5. Styling 6. Server-Side Renderings 7. Data Fetching 8. Building Scalable Applications 9. Testing",
            "image": "http://books.google.com/books/content?id=UfmpEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2023-01-27T00:00:00.000Z"
        },
        {
            "content_html": "Mastering React helps the reader master the React JavaScript framework for faster and more robust front-end development. React is a JavaScript framework for creating interface design that is coherent, cheap, and customizable. It makes it possible to create complicated user interfaces out of “modules,” which are small, independent pieces of code. The primary goal of using React is the easier creation of visual interfaces. React was developed by Facebook and released to the public in 2013. It powers some of the most popular apps, including Facebook and Instagram. It uses virtual DOM (JavaScript Document Object Model), which increases the application’s performance. The virtualized DOM in JavaScript is faster than the conventional DOM. React can be used as both a standalone framework and in conjunction with other platforms. It employs component and data patterns to improve clarity while also assisting in maintaining larger applications. React saves you time and money during development because it is component-based. The design can be segmented into reusable modules that could be used to adjust interfaces dynamically. The front-end development industry has a reputation for moving at a breakneck speed. Organizations cannot be expected to modify their apps annually to catch pace with technological innovations. This is why businesses prefer React. React simplifies many things, and its ecosystem is full of valuable subframeworks and tools. React is among the most powerful front-end frameworks out there. As such, learning React development can future-proof anyone’s career in the long run, and even yield immediate benefits. This book explains the concepts of React in an easy-to-grasp language. With Mastering React, learning React becomes a charm, and readers will undoubtedly advance their careers with the help of this book. The Mastering Computer Science series is edited by Sufyan bin Uzayr, a writer and educator with more than a decade of experience in the computing field.<br><blockquote>This book explains the concepts of React in an easy-to-grasp language. With Mastering React, learning React becomes a charm, and readers will undoubtedly advance their careers with the help of this book.</blockquote>",
            "url": "http://books.google.com/books?id=j_-VEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=5&source=gbs_api",
            "title": "Mastering React",
            "summary": "Mastering React helps the reader master the React JavaScript framework for faster and more robust front-end development. React is a JavaScript framework for creating interface design that is coherent, cheap, and customizable. It makes it possible to create complicated user interfaces out of “modules,” which are small, independent pieces of code. The primary goal of using React is the easier creation of visual interfaces. React was developed by Facebook and released to the public in 2013. It powers some of the most popular apps, including Facebook and Instagram. It uses virtual DOM (JavaScript Document Object Model), which increases the application’s performance. The virtualized DOM in JavaScript is faster than the conventional DOM. React can be used as both a standalone framework and in conjunction with other platforms. It employs component and data patterns to improve clarity while also assisting in maintaining larger applications. React saves you time and money during development because it is component-based. The design can be segmented into reusable modules that could be used to adjust interfaces dynamically. The front-end development industry has a reputation for moving at a breakneck speed. Organizations cannot be expected to modify their apps annually to catch pace with technological innovations. This is why businesses prefer React. React simplifies many things, and its ecosystem is full of valuable subframeworks and tools. React is among the most powerful front-end frameworks out there. As such, learning React development can future-proof anyone’s career in the long run, and even yield immediate benefits. This book explains the concepts of React in an easy-to-grasp language. With Mastering React, learning React becomes a charm, and readers will undoubtedly advance their careers with the help of this book. The Mastering Computer Science series is edited by Sufyan bin Uzayr, a writer and educator with more than a decade of experience in the computing field.",
            "image": "http://books.google.com/books/content?id=j_-VEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-11-29T00:00:00.000Z"
        },
        {
            "content_html": "Mastering Vue.js helps the reader master the Vue.js JavaScript framework for faster and more robust front-end development. Vue is a popular JavaScript front-end framework that is rapidly expanding. It is easy to use, small (less than 24 KB), and really fast. It is simple to include in other applications and libraries. Vue.js is easy to install, and beginners may quickly learn how to use it and begin creating their interface design. What makes Vue special is that it is different from most other JavaScript frameworks and libraries. Unlike other monolithic frameworks, Vue is built from the ground up to be incrementally adaptable. The core library focuses primarily on the View layer, and is easy to use and combine with other libraries or projects. On the other hand, when merged with contemporary stacks and libraries, Vue is perfectly capable of running powerful Single-Page Web Applications. Working with Vue.js can be fun. Leveraging Vue and its plugins can help one easily create excellent Internet and smartphone-compatible applications. Vue is both compact and customizable, and comes with multiple capabilities for intelligent state management and navigation choices. All said and done, learning Vue is an excellent career initiative, especially since it is rapidly gaining favor among startups and established enterprises alike. Vue is an excellent choice if you want to make a highly engaging, flexible, and data-driven app. It has an easy-to-understand layout which you can learn in minutes. Unlike Angular or React, Vue.js does not have a lot of challenges or concepts to master. It is an excellent choice for programmers looking to learn and implement new technology for their next project. With Mastering Vue.js, learning Vue becomes very straightforward, which will help readers undoubtedly advance their careers. The Mastering Computer Science series is edited by Sufyan bin Uzayr, a writer and educator with over a decade of experience in the computing field.<br><blockquote>Mastering Vue.js helps the reader master the Vue.js JavaScript framework for faster and more robust front-end development. Vue is a popular JavaScript front-end framework that is rapidly expanding.</blockquote>",
            "url": "http://books.google.com/books?id=4NKLEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=6&source=gbs_api",
            "title": "Mastering Vue.js",
            "summary": "Mastering Vue.js helps the reader master the Vue.js JavaScript framework for faster and more robust front-end development. Vue is a popular JavaScript front-end framework that is rapidly expanding. It is easy to use, small (less than 24 KB), and really fast. It is simple to include in other applications and libraries. Vue.js is easy to install, and beginners may quickly learn how to use it and begin creating their interface design. What makes Vue special is that it is different from most other JavaScript frameworks and libraries. Unlike other monolithic frameworks, Vue is built from the ground up to be incrementally adaptable. The core library focuses primarily on the View layer, and is easy to use and combine with other libraries or projects. On the other hand, when merged with contemporary stacks and libraries, Vue is perfectly capable of running powerful Single-Page Web Applications. Working with Vue.js can be fun. Leveraging Vue and its plugins can help one easily create excellent Internet and smartphone-compatible applications. Vue is both compact and customizable, and comes with multiple capabilities for intelligent state management and navigation choices. All said and done, learning Vue is an excellent career initiative, especially since it is rapidly gaining favor among startups and established enterprises alike. Vue is an excellent choice if you want to make a highly engaging, flexible, and data-driven app. It has an easy-to-understand layout which you can learn in minutes. Unlike Angular or React, Vue.js does not have a lot of challenges or concepts to master. It is an excellent choice for programmers looking to learn and implement new technology for their next project. With Mastering Vue.js, learning Vue becomes very straightforward, which will help readers undoubtedly advance their careers. The Mastering Computer Science series is edited by Sufyan bin Uzayr, a writer and educator with over a decade of experience in the computing field.",
            "image": "http://books.google.com/books/content?id=4NKLEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-11-11T00:00:00.000Z"
        },
        {
            "content_html": "Eliminate the unavoidable complexity of object-oriented designs. The innovative data-oriented programming paradigm makes your systems less complex by making it simpler to access and manipulate data. In Data-Oriented Programming you will learn how to: Separate code from data Represent data with generic data structures Manipulate data with general-purpose functions Manage state without mutating data Control concurrency in highly scalable systems Write data-oriented unit tests Specify the shape of your data Benefit from polymorphism without objects Debug programs without a debugger Data-Oriented Programming is a one-of-a-kind guide that introduces the data-oriented paradigm. This groundbreaking approach represents data with generic immutable data structures. It simplifies state management, eases concurrency, and does away with the common problems you’ll find in object-oriented code. The book presents powerful new ideas through conversations, code snippets, and diagrams that help you quickly grok what’s great about DOP. Best of all, the paradigm is language-agnostic—you’ll learn to write DOP code that can be implemented in JavaScript, Ruby, Python, Clojure, and also in traditional OO languages like Java or C#. About the technology Code that combines behavior and data, as is common in object-oriented designs, can introduce almost unmanageable complexity for state management. The Data-oriented programming (DOP) paradigm simplifies state management by holding application data in immutable generic data structures and then performing calculations using non-mutating general-purpose functions. Your applications are free of state-related bugs and your code is easier to understand and maintain. About the book Data-Oriented Programming teaches you to design software using the groundbreaking data-oriented paradigm. You’ll put DOP into action to design data models for business entities and implement a library management system that manages state without data mutation. The numerous diagrams, intuitive mind maps, and a unique conversational approach all help you get your head around these exciting new ideas. Every chapter has a lightbulb moment that will change the way you think about programming. What's inside Separate code from data Represent data with generic data structures Manage state without mutating data Control concurrency in highly scalable systems Write data-oriented unit tests Specify the shape of your data About the reader For programmers who have experience with a high-level programming language like JavaScript, Java, Python, C#, Clojure, or Ruby. About the author Yehonathan Sharvit has over twenty years of experience as a software engineer. He blogs, speaks at conferences, and leads Data-Oriented Programming workshops around the world. Table of Contents PART 1 FLEXIBILITY 1 Complexity of object-oriented programming 2 Separation between code and data 3 Basic data manipulation 4 State management 5 Basic concurrency control 6 Unit tests PART 2 SCALABILITY 7 Basic data validation 8 Advanced concurrency control 9 Persistent data structures 10 Database operations 11 Web services PART 3 MAINTAINABILITY 12 Advanced data validation 13 Polymorphism 14 Advanced data manipulation 15 Debugging<br><blockquote>Your applications are free of state-related bugs and your code is easier to understand and maintain. About the book Data-Oriented Programming teaches you to design software using the groundbreaking data-oriented paradigm.</blockquote>",
            "url": "http://books.google.com/books?id=Wlt9EAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "Data-Oriented Programming",
            "summary": "Eliminate the unavoidable complexity of object-oriented designs. The innovative data-oriented programming paradigm makes your systems less complex by making it simpler to access and manipulate data. In Data-Oriented Programming you will learn how to: Separate code from data Represent data with generic data structures Manipulate data with general-purpose functions Manage state without mutating data Control concurrency in highly scalable systems Write data-oriented unit tests Specify the shape of your data Benefit from polymorphism without objects Debug programs without a debugger Data-Oriented Programming is a one-of-a-kind guide that introduces the data-oriented paradigm. This groundbreaking approach represents data with generic immutable data structures. It simplifies state management, eases concurrency, and does away with the common problems you’ll find in object-oriented code. The book presents powerful new ideas through conversations, code snippets, and diagrams that help you quickly grok what’s great about DOP. Best of all, the paradigm is language-agnostic—you’ll learn to write DOP code that can be implemented in JavaScript, Ruby, Python, Clojure, and also in traditional OO languages like Java or C#. About the technology Code that combines behavior and data, as is common in object-oriented designs, can introduce almost unmanageable complexity for state management. The Data-oriented programming (DOP) paradigm simplifies state management by holding application data in immutable generic data structures and then performing calculations using non-mutating general-purpose functions. Your applications are free of state-related bugs and your code is easier to understand and maintain. About the book Data-Oriented Programming teaches you to design software using the groundbreaking data-oriented paradigm. You’ll put DOP into action to design data models for business entities and implement a library management system that manages state without data mutation. The numerous diagrams, intuitive mind maps, and a unique conversational approach all help you get your head around these exciting new ideas. Every chapter has a lightbulb moment that will change the way you think about programming. What's inside Separate code from data Represent data with generic data structures Manage state without mutating data Control concurrency in highly scalable systems Write data-oriented unit tests Specify the shape of your data About the reader For programmers who have experience with a high-level programming language like JavaScript, Java, Python, C#, Clojure, or Ruby. About the author Yehonathan Sharvit has over twenty years of experience as a software engineer. He blogs, speaks at conferences, and leads Data-Oriented Programming workshops around the world. Table of Contents PART 1 FLEXIBILITY 1 Complexity of object-oriented programming 2 Separation between code and data 3 Basic data manipulation 4 State management 5 Basic concurrency control 6 Unit tests PART 2 SCALABILITY 7 Basic data validation 8 Advanced concurrency control 9 Persistent data structures 10 Database operations 11 Web services PART 3 MAINTAINABILITY 12 Advanced data validation 13 Polymorphism 14 Advanced data manipulation 15 Debugging",
            "image": "http://books.google.com/books/content?id=Wlt9EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-09-27T00:00:00.000Z"
        },
        {
            "content_html": "Node.js: Novice to Ninja is your hands-on guide to learning everything needed to build a professional web application using Node.js, the hugely popular open-source, cross-platform, back-end JavaScript runtime environment. You'll start off by getting familiar with the basics - installation and building your first apps - before moving onto more advanced concepts, including debugging, asynchronous programming, using Express.js, working with databases, deployment, and more. You'll finish by building a complete multi-player real-time quiz application. Install Node and build your first application Get started with Express.js and use it to process forms Master asynchronous programming in Node.js Work with MongoDB and MySQL databases Use WebSockets for real-time applications Understand the Node ecosystem: npm and modules Build a complete multiplayer quiz app And much more! The book includes access to 25 high quality tutorial videos, containing 1.5 hours of content.<br><blockquote>The book includes access to 25 high quality tutorial videos, containing 1.5 hours of content.</blockquote>",
            "url": "http://books.google.com/books?id=o991EAAAQBAJ&pg=PA1&dq=JavaScript&hl=&cd=8&source=gbs_api",
            "title": "Node.js: Novice to Ninja",
            "summary": "Node.js: Novice to Ninja is your hands-on guide to learning everything needed to build a professional web application using Node.js, the hugely popular open-source, cross-platform, back-end JavaScript runtime environment. You'll start off by getting familiar with the basics - installation and building your first apps - before moving onto more advanced concepts, including debugging, asynchronous programming, using Express.js, working with databases, deployment, and more. You'll finish by building a complete multi-player real-time quiz application. Install Node and build your first application Get started with Express.js and use it to process forms Master asynchronous programming in Node.js Work with MongoDB and MySQL databases Use WebSockets for real-time applications Understand the Node ecosystem: npm and modules Build a complete multiplayer quiz app And much more! The book includes access to 25 high quality tutorial videos, containing 1.5 hours of content.",
            "image": "http://books.google.com/books/content?id=o991EAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-06-07T00:00:00.000Z"
        },
        {
            "content_html": "Leverage the power of Strapi to build self-hosted, customizable, and performant content APIs Key FeaturesDiscover how Strapi can help you build APIs quickly and focus on your products and featuresLearn how to put Strapi into practice by implementing it in real-world scenariosUnderstand how to use Strapi's powerful features to customize your APIsBook Description Strapi is a Node.js-based, flexible, open-source headless CMS with an integrated admin panel that anyone can use and helps save API development time. APIs built with Strapi can be consumed using REST or GraphQL from any client. With this book, you'll take a hands-on approach to exploring the capabilities of the Strapi platform and creating a custom API from scratch. This book will help JavaScript developers to put their knowledge to work by guiding them through building powerful backend APIs. You'll see how to effortlessly create content structures that can be customized according to your needs, and gain insights into how to write, edit, and manage your content seamlessly with Strapi. As you progress through the chapters, you'll discover a wide range of Strapi features, as well as understand how to add complex features to the API such as user authentication, data sorting, and pagination. You'll not only learn how to find and use existing plugins from the open-source community but also build your own plugins with custom functionality with the Strapi plugin API and add them to the admin panel. Finally, you'll learn how to deploy the API to Heroku and AWS. By the end of this book, you'll be able to build powerful, scalable, and secure APIs using Strapi. What you will learnExplore Strapi and understand how it worksDefine content types to build APIs quickly and efficientlyUnderstand authentication and authorization in StrapiCreate production-ready APIs with StrapiDeploy the Strapi API to various environments, including Heroku and AWSUse best practices to run the Strapi API in productionSync permissions to access the API between multiple environmentsWrite basic tests for API utilities as well as the endpointWho this book is for This book is for backend and frontend JavaScript developers. Experienced API developers will learn a new, fast, and flexible way of building APIs, while frontend developers will be able to take a step toward becoming full-stack developers by learning how to leverage Strapi for building APIs quickly. Basic knowledge of JavaScript and REST API concepts is assumed.<br><blockquote>APIs built with Strapi can be consumed using REST or GraphQL from any client. With this book, you&#39;ll take a hands-on approach to exploring the capabilities of the Strapi platform and creating a custom API from scratch.</blockquote>",
            "url": "http://books.google.com/books?id=5NpaEAAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=9&source=gbs_api",
            "title": "Designing Web APIs with Strapi",
            "summary": "Leverage the power of Strapi to build self-hosted, customizable, and performant content APIs Key FeaturesDiscover how Strapi can help you build APIs quickly and focus on your products and featuresLearn how to put Strapi into practice by implementing it in real-world scenariosUnderstand how to use Strapi's powerful features to customize your APIsBook Description Strapi is a Node.js-based, flexible, open-source headless CMS with an integrated admin panel that anyone can use and helps save API development time. APIs built with Strapi can be consumed using REST or GraphQL from any client. With this book, you'll take a hands-on approach to exploring the capabilities of the Strapi platform and creating a custom API from scratch. This book will help JavaScript developers to put their knowledge to work by guiding them through building powerful backend APIs. You'll see how to effortlessly create content structures that can be customized according to your needs, and gain insights into how to write, edit, and manage your content seamlessly with Strapi. As you progress through the chapters, you'll discover a wide range of Strapi features, as well as understand how to add complex features to the API such as user authentication, data sorting, and pagination. You'll not only learn how to find and use existing plugins from the open-source community but also build your own plugins with custom functionality with the Strapi plugin API and add them to the admin panel. Finally, you'll learn how to deploy the API to Heroku and AWS. By the end of this book, you'll be able to build powerful, scalable, and secure APIs using Strapi. What you will learnExplore Strapi and understand how it worksDefine content types to build APIs quickly and efficientlyUnderstand authentication and authorization in StrapiCreate production-ready APIs with StrapiDeploy the Strapi API to various environments, including Heroku and AWSUse best practices to run the Strapi API in productionSync permissions to access the API between multiple environmentsWrite basic tests for API utilities as well as the endpointWho this book is for This book is for backend and frontend JavaScript developers. Experienced API developers will learn a new, fast, and flexible way of building APIs, while frontend developers will be able to take a step toward becoming full-stack developers by learning how to leverage Strapi for building APIs quickly. Basic knowledge of JavaScript and REST API concepts is assumed.",
            "image": "http://books.google.com/books/content?id=5NpaEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2022-02-28T00:00:00.000Z"
        },
        {
            "content_html": "Web developers--this is your all-in-one guide to HTML and CSS! Learn to use HTML to format text and structure web pages. Understand the HTML document skeleton before creating forms, referencing hyperlinks, embedding active content, and more. Then style your pages with CSS: Create consistent designs with selectors, the box model, the cascade algorithm, and inheritance. Round out your client-side development experience by getting to know JavaScript. With detailed code examples, you'll master HTML and CSS in no time! a. HTML for Formatting and StructureMaster HTML syntax and document structure. Work with tags, elements, and attributes to build HTML documents. Create tables and forms, embed images, configure links, and develop interactive HTML elements. b. CSS for Style and DesignDevelop simple and complex web layouts with CSS rules, selectors, declarations, combinators, pseudoclasses, and pseudoelements. Understand the principles of cascading, specificity, and inheritance. Learn to use the CSS box model, the position property, and more. c. JavaScript FundamentalsExpand your knowledge with an introduction to JavaScript. See how to use variables, statements, functions, arrays, and objects to write and run simple programs. Explore the basics of Ajax for interactive web application design. Highlights: HTML syntax and structure HTML elements Tables, links, and images HTML forms CSS selectors Cascade and inheritance CSS box model CSS preprocessors Responsive layout design Testing JavaScript Ajax<br><blockquote>Web developers--this is your all-in-one guide to HTML and CSS!</blockquote>",
            "url": "http://books.google.com/books?id=ANaTzwEACAAJ&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "HTML and CSS",
            "summary": "Web developers--this is your all-in-one guide to HTML and CSS! Learn to use HTML to format text and structure web pages. Understand the HTML document skeleton before creating forms, referencing hyperlinks, embedding active content, and more. Then style your pages with CSS: Create consistent designs with selectors, the box model, the cascade algorithm, and inheritance. Round out your client-side development experience by getting to know JavaScript. With detailed code examples, you'll master HTML and CSS in no time! a. HTML for Formatting and StructureMaster HTML syntax and document structure. Work with tags, elements, and attributes to build HTML documents. Create tables and forms, embed images, configure links, and develop interactive HTML elements. b. CSS for Style and DesignDevelop simple and complex web layouts with CSS rules, selectors, declarations, combinators, pseudoclasses, and pseudoelements. Understand the principles of cascading, specificity, and inheritance. Learn to use the CSS box model, the position property, and more. c. JavaScript FundamentalsExpand your knowledge with an introduction to JavaScript. See how to use variables, statements, functions, arrays, and objects to write and run simple programs. Explore the basics of Ajax for interactive web application design. Highlights: HTML syntax and structure HTML elements Tables, links, and images HTML forms CSS selectors Cascade and inheritance CSS box model CSS preprocessors Responsive layout design Testing JavaScript Ajax",
            "image": "http://books.google.com/books/content?id=ANaTzwEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2023-01-01T00:00:00.000Z"
        }
    ]
}