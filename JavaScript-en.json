{
    "version": "https://jsonfeed.org/version/1",
    "title": "JavaScript(en) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/JavaScript-en.json",
    "description": "JavaScript(en) on Google Book",
    "items": [
        {
            "content_html": "Discover blueprints that explore various components of Blazor, C#, and .NET to help you build web apps without learning JavaScript Key Features Explore complete, easy-to-follow web projects using Blazor Build projects such as a weather app, expense tracker, and Kanban board with real-world applications Understand and work with Blazor WebAssembly effectively without spending too much time focusing on the theory Book Description Blazor WebAssembly makes it possible to run C# code on the browser instead of having to use JavaScript, and does not rely on plugins or add-ons. The only technical requirement for using Blazor WebAssembly is a browser that supports WebAssembly, which, as of today, all modern browsers do. Blazor WebAssembly by Example is a project-based guide for learning how to build single-page web applications using the Blazor WebAssembly framework. This book emphasizes the practical over the theoretical by providing detailed step-by-step instructions for each project. You'll start by building simple standalone web applications and progress to developing more advanced hosted web applications with SQL Server backends. Each project covers a different aspect of the Blazor WebAssembly ecosystem, such as Razor components, JavaScript interop, event handling, application state, and dependency injection. The book is designed in such a way that you can complete the projects in any order. By the end of this book, you will have experience building a wide variety of single-page web applications with .NET, Blazor WebAssembly, and C#. What you will learn Discover the power of the C# language for both server-side and client-side web development Use the Blazor WebAssembly App project template to build your first Blazor WebAssembly application Use templated components and the Razor class library to build and share a modal dialog box Understand how to use JavaScript with Blazor WebAssembly Build a progressive web app (PWA) to enable native app-like performance and speed Understand dependency injection (DI) in .NET to build a shopping cart app Get to grips with .NET Web APIs by building a task manager app Who this book is for This book is for .NET web developers who are tired of constantly learning new JavaScript frameworks and wish to write web applications using Blazor WebAssembly, leveraging the power of .NET and C#. The book assumes beginner-level knowledge of the C# language, .NET framework, Microsoft Visual Studio, and web development concepts.<br><blockquote>By the end of this book, you will have experience building a wide variety of single-page web applications with .NET, Blazor WebAssembly, and C#. What you will learn Discover the power of the C# language for both server-side and client-side ...</blockquote>",
            "url": "http://books.google.com/books?id=Ly0zEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=3&source=gbs_api",
            "title": "Blazor WebAssembly by Example",
            "summary": "Discover blueprints that explore various components of Blazor, C#, and .NET to help you build web apps without learning JavaScript Key Features Explore complete, easy-to-follow web projects using Blazor Build projects such as a weather app, expense tracker, and Kanban board with real-world applications Understand and work with Blazor WebAssembly effectively without spending too much time focusing on the theory Book Description Blazor WebAssembly makes it possible to run C# code on the browser instead of having to use JavaScript, and does not rely on plugins or add-ons. The only technical requirement for using Blazor WebAssembly is a browser that supports WebAssembly, which, as of today, all modern browsers do. Blazor WebAssembly by Example is a project-based guide for learning how to build single-page web applications using the Blazor WebAssembly framework. This book emphasizes the practical over the theoretical by providing detailed step-by-step instructions for each project. You'll start by building simple standalone web applications and progress to developing more advanced hosted web applications with SQL Server backends. Each project covers a different aspect of the Blazor WebAssembly ecosystem, such as Razor components, JavaScript interop, event handling, application state, and dependency injection. The book is designed in such a way that you can complete the projects in any order. By the end of this book, you will have experience building a wide variety of single-page web applications with .NET, Blazor WebAssembly, and C#. What you will learn Discover the power of the C# language for both server-side and client-side web development Use the Blazor WebAssembly App project template to build your first Blazor WebAssembly application Use templated components and the Razor class library to build and share a modal dialog box Understand how to use JavaScript with Blazor WebAssembly Build a progressive web app (PWA) to enable native app-like performance and speed Understand dependency injection (DI) in .NET to build a shopping cart app Get to grips with .NET Web APIs by building a task manager app Who this book is for This book is for .NET web developers who are tired of constantly learning new JavaScript frameworks and wish to write web applications using Blazor WebAssembly, leveraging the power of .NET and C#. The book assumes beginner-level knowledge of the C# language, .NET framework, Microsoft Visual Studio, and web development concepts.",
            "image": "http://books.google.com/books/content?id=Ly0zEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2021-07-09T00:00:00.000Z"
        },
        {
            "content_html": "Gain the knowledge you need to navigate your way confidently through the ever-expanding landscape of modern JavaScript technologies. With over one hundred Node.js frameworks available and the number rising every month, it is becoming increasingly difficult to avoid JavaScript fatigue and keep abreast of the developments that are most useful and relevant to your own projects. In such a saturated environment, the knowledge of exactly which tools will best fit your goals is invaluable. This book will guide you through the quagmire by clearly and comprehensively outlining the most practically useful Node frameworks, libraries and tools, and how they might be employed in your own projects. You will learn about JavaScript frameworks such as Polymer, Webix, Aurelia, Svelte, Meteor, and many, many more. This book will empower you to cut through the noise and learn how to achieve your career goals with the right tools meant especially for you. What Will You Learn: The what, why and how behind a variety of JavaScript Node frameworks, including Polymer, Aurelia, Svelte, and more. How to choose the right Node framework for different types of project How to ensure server-side optimization is done correctly, even if you are not a server admin Guide to JS tools such as Gulp, Grunt and npm Who Is This Book For: Web developers of all levels of ability; particularly relevant for front-end developers, server-side coders, and developers interested in learning JavaScript.<br><blockquote>This book will guide you through the quagmire by clearly and comprehensively outlining the most practically useful Node frameworks, libraries and tools, and how they might be employed in your own projects.</blockquote>",
            "url": "http://books.google.com/books?id=UX6dzgEACAAJ&dq=JavaScript&hl=&cd=7&source=gbs_api",
            "title": "Getting the Most Out of Node.Js Frameworks",
            "summary": "Gain the knowledge you need to navigate your way confidently through the ever-expanding landscape of modern JavaScript technologies. With over one hundred Node.js frameworks available and the number rising every month, it is becoming increasingly difficult to avoid JavaScript fatigue and keep abreast of the developments that are most useful and relevant to your own projects. In such a saturated environment, the knowledge of exactly which tools will best fit your goals is invaluable. This book will guide you through the quagmire by clearly and comprehensively outlining the most practically useful Node frameworks, libraries and tools, and how they might be employed in your own projects. You will learn about JavaScript frameworks such as Polymer, Webix, Aurelia, Svelte, Meteor, and many, many more. This book will empower you to cut through the noise and learn how to achieve your career goals with the right tools meant especially for you. What Will You Learn: The what, why and how behind a variety of JavaScript Node frameworks, including Polymer, Aurelia, Svelte, and more. How to choose the right Node framework for different types of project How to ensure server-side optimization is done correctly, even if you are not a server admin Guide to JS tools such as Gulp, Grunt and npm Who Is This Book For: Web developers of all levels of ability; particularly relevant for front-end developers, server-side coders, and developers interested in learning JavaScript.",
            "date_modified": "2022-03-21T00:00:00.000Z"
        },
        {
            "content_html": "JavaScript is an important scripting language for almost every modern web application. It is simple for beginners but complex when you build a full-scale application. The book is extremely user-friendly. It assumes no programming experience and helps the students to learn the JavaScript in step by step manner with the help of illustrative examples. The first two units cover the fundamental concepts of JavaScript such as variables, operators, control structures, arrays, functions and strings. In the third unit, the concept of form and event handling is discussed. This feature of JavaScript help us to design the interactive web page with graphical user interface. In the next subsequent chapter, the book demonstrates how to create and manage cookies, how to create browser history, implementation of form validation with the help of regular expressions, creating rollover effects and creating and handling frames. At the end, the book illustrates creation of banner, management of status bar and creation of slideshows using JavaScript. This book serves the purpose of teaching JavaScript in the simplest and easiest manner.<br><blockquote>At the end, the book illustrates creation of banner, management of status bar and creation of slideshows using JavaScript. This book serves the purpose of teaching JavaScript in the simplest and easiest manner.</blockquote>",
            "url": "http://books.google.com/books?id=jOUbEAAAQBAJ&pg=PP1&dq=JavaScript&hl=&cd=8&source=gbs_api",
            "title": "Client Side Scripting",
            "summary": "JavaScript is an important scripting language for almost every modern web application. It is simple for beginners but complex when you build a full-scale application. The book is extremely user-friendly. It assumes no programming experience and helps the students to learn the JavaScript in step by step manner with the help of illustrative examples. The first two units cover the fundamental concepts of JavaScript such as variables, operators, control structures, arrays, functions and strings. In the third unit, the concept of form and event handling is discussed. This feature of JavaScript help us to design the interactive web page with graphical user interface. In the next subsequent chapter, the book demonstrates how to create and manage cookies, how to create browser history, implementation of form validation with the help of regular expressions, creating rollover effects and creating and handling frames. At the end, the book illustrates creation of banner, management of status bar and creation of slideshows using JavaScript. This book serves the purpose of teaching JavaScript in the simplest and easiest manner.",
            "image": "http://books.google.com/books/content?id=jOUbEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-12-01T00:00:00.000Z"
        },
        {
            "content_html": "Svelte and Sapper in Action teaches you to design and build fast, elegant web applications. You’ll start immediately by creating an engaging Travel Packing app as you learn to create Svelte components and develop great UX. You’ll master Svelte’s unique state management model, use Sapper for simplified page routing, and take on modern best practices like code splitting, offline support, and server-rendered views. Summary Imagine web apps with fast browser load times that also offer amazing developer productivity and require less code to create. That’s what Svelte and Sapper deliver! Svelte pushes a lot of the work a frontend framework would handle to the compile step, so your app components come out as tight, well-organized JavaScript modules. Sapper is a lightweight web framework that minimizes application size through server-rendering front pages and only loading the JavaScript you need. The end result is more efficient apps with great UX and simplified state management. Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications. About the technology Many web frameworks load hundreds of “just-in-case” code lines that clutter and slow your apps. Svelte, an innovative, developer-friendly tool, instead compiles applications to very small bundles for lightning-fast load times that do more with less code. Pairing Svelte with the Sapper framework adds features for flexible and simple page routing, server-side rendering, static site development, and more. About the book Svelte and Sapper in Action teaches you to design and build fast, elegant web applications. You’ll start immediately by creating an engaging Travel Packing app as you learn to create Svelte components and develop great UX. You’ll master Svelte’s unique state management model, use Sapper for simplified page routing, and take on modern best practices like code splitting, offline support, and server-rendered views. What's inside - Creating Svelte components - Using stores for shared data - Configuring page routing - Debugging, testing, and deploying Svelte apps - Using Sapper for dynamic and static sites About the reader For web developers familiar with HTML, CSS, and JavaScript. About the author Mark Volkmann is a partner at Object Computing, where he has provided software consulting and training since 1996. Table of Contents PART 1 - GETTING STARTED 1 Meet the players 2 Your first Svelte app PART 2 - DEEPER INTO SVELTE 3 Creating components 4 Block structures 5 Component communication 6 Stores 7 DOM interactions 8 Lifecycle functions 9 Client-side routing 10 Animation 11 Debugging 12 Testing 13 Deploying 14 Advanced Svelte PART 3 - DEEPER INTO SAPPER 15 Your first Sapper app 16 Sapper applications 17 Sapper server routes 18 Exporting static sties with Sapper 19 Sapper offline support PART 4 - BEYOND SVELTE AND SAPPER 20 Preprocessors 21 Svelte Native<br><blockquote>About the book Svelte and Sapper in Action teaches you to design and build fast, elegant web applications.</blockquote>",
            "url": "http://books.google.com/books?id=ElD9DwAAQBAJ&printsec=frontcover&dq=JavaScript&hl=&cd=10&source=gbs_api",
            "title": "Svelte and Sapper in Action",
            "summary": "Svelte and Sapper in Action teaches you to design and build fast, elegant web applications. You’ll start immediately by creating an engaging Travel Packing app as you learn to create Svelte components and develop great UX. You’ll master Svelte’s unique state management model, use Sapper for simplified page routing, and take on modern best practices like code splitting, offline support, and server-rendered views. Summary Imagine web apps with fast browser load times that also offer amazing developer productivity and require less code to create. That’s what Svelte and Sapper deliver! Svelte pushes a lot of the work a frontend framework would handle to the compile step, so your app components come out as tight, well-organized JavaScript modules. Sapper is a lightweight web framework that minimizes application size through server-rendering front pages and only loading the JavaScript you need. The end result is more efficient apps with great UX and simplified state management. Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications. About the technology Many web frameworks load hundreds of “just-in-case” code lines that clutter and slow your apps. Svelte, an innovative, developer-friendly tool, instead compiles applications to very small bundles for lightning-fast load times that do more with less code. Pairing Svelte with the Sapper framework adds features for flexible and simple page routing, server-side rendering, static site development, and more. About the book Svelte and Sapper in Action teaches you to design and build fast, elegant web applications. You’ll start immediately by creating an engaging Travel Packing app as you learn to create Svelte components and develop great UX. You’ll master Svelte’s unique state management model, use Sapper for simplified page routing, and take on modern best practices like code splitting, offline support, and server-rendered views. What's inside - Creating Svelte components - Using stores for shared data - Configuring page routing - Debugging, testing, and deploying Svelte apps - Using Sapper for dynamic and static sites About the reader For web developers familiar with HTML, CSS, and JavaScript. About the author Mark Volkmann is a partner at Object Computing, where he has provided software consulting and training since 1996. Table of Contents PART 1 - GETTING STARTED 1 Meet the players 2 Your first Svelte app PART 2 - DEEPER INTO SVELTE 3 Creating components 4 Block structures 5 Component communication 6 Stores 7 DOM interactions 8 Lifecycle functions 9 Client-side routing 10 Animation 11 Debugging 12 Testing 13 Deploying 14 Advanced Svelte PART 3 - DEEPER INTO SAPPER 15 Your first Sapper app 16 Sapper applications 17 Sapper server routes 18 Exporting static sties with Sapper 19 Sapper offline support PART 4 - BEYOND SVELTE AND SAPPER 20 Preprocessors 21 Svelte Native",
            "image": "http://books.google.com/books/content?id=ElD9DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-10-13T00:00:00.000Z"
        }
    ]
}