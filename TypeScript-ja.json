{
    "version": "https://jsonfeed.org/version/1",
    "title": "TypeScript(ja) on Google Book",
    "home_page_url": "https://azu.github.io/book-rss/TypeScript-ja.json",
    "description": "TypeScript(ja) on Google Book",
    "items": [
        {
            "content_html": "本書は業務設計に必要な基本的な考え方と、ITツールの実装に関する解説書です。最新ツールを入れたのに経理業務が効率化されない、そもそも最適な業務フローがわからない。そんな悩みはありませんか？経営管理のプロである会計士がGoogle Apps ScriptやSaaSのAPIを組み合わせた活用方法をレクチャーします。また、Google Apps Scriptをモダンに書くためのTypeScript導入方法も掲載しており、プログラミング入門としても活用できます。 【目次】 第1章 はじめに 1.1 経営管理の概要 1.2 経理業務とは 1.3 経理の現状の問題 1.4 解決手段 1.5 経営管理のあるべき姿 1.6 現状を理解する 1.7 業務改善を行う 1.8 さいごに 第2章 Google Apps Script 入門 2.1 Google Apps Script(GAS)とは 2.2 GASの導入方法 2.3 文法編 2.4 Google Apps を操作してみよう 2.5 よく使用する関数 2.6 さいごに 第3章 API入門 3.1 Web API とは何か 3.2 経営管理とAPI 3.3 APIの使い方 3.4 APIと認可 3.5 さいごに 第4章 freeeAPI を活用した実例 4.1 はじめに 4.2 事前準備 4.3 アクセストークンを取得する 4.4 実践例 4.5 さいごに 第5章 ケーススタディ 5.1 プロジェクト概要 5.2 さいごに 第6章 Google Apps Script をローカルで書くための環境をインストールしよう 6.1 はじめに 6.2 Node.js npm 6.3 clasp とは 6.4 @types とは 6.5 Prettierとは 6.6 ESLintとは 6.7 さいごに 第7章 ES6(ECMA2015) 7.1 ES6 とは 7.2 ES6で追加された文法一覧 7.3 さいごに 第8章 TypeScript 入門 8.1 TypeScript とは 8.2 TypeScriptのメインの型 8.3 関数の型定義 8.4 さいごに 第9章 TypeScriptでコードを書いてみよう 9.1 FSを取得する 9.2 変更した部分 9.3 TypeScriptをトランスパイルした結果 9.4 さいごに<br><blockquote>本書は業務設計に必要な基本的な考え方と、ITツールの実装に関する解説書です。最新ツールを入れたのに経理業務が効率化されない、そもそも最適な業務フローがわからない。 ...</blockquote>",
            "url": "http://books.google.com/books?id=ZnXRDwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=1&source=gbs_api",
            "title": "現役公認会計士が解説！GASで自動化する経営管理",
            "summary": "本書は業務設計に必要な基本的な考え方と、ITツールの実装に関する解説書です。最新ツールを入れたのに経理業務が効率化されない、そもそも最適な業務フローがわからない。そんな悩みはありませんか？経営管理のプロである会計士がGoogle Apps ScriptやSaaSのAPIを組み合わせた活用方法をレクチャーします。また、Google Apps Scriptをモダンに書くためのTypeScript導入方法も掲載しており、プログラミング入門としても活用できます。 【目次】 第1章 はじめに 1.1 経営管理の概要 1.2 経理業務とは 1.3 経理の現状の問題 1.4 解決手段 1.5 経営管理のあるべき姿 1.6 現状を理解する 1.7 業務改善を行う 1.8 さいごに 第2章 Google Apps Script 入門 2.1 Google Apps Script(GAS)とは 2.2 GASの導入方法 2.3 文法編 2.4 Google Apps を操作してみよう 2.5 よく使用する関数 2.6 さいごに 第3章 API入門 3.1 Web API とは何か 3.2 経営管理とAPI 3.3 APIの使い方 3.4 APIと認可 3.5 さいごに 第4章 freeeAPI を活用した実例 4.1 はじめに 4.2 事前準備 4.3 アクセストークンを取得する 4.4 実践例 4.5 さいごに 第5章 ケーススタディ 5.1 プロジェクト概要 5.2 さいごに 第6章 Google Apps Script をローカルで書くための環境をインストールしよう 6.1 はじめに 6.2 Node.js npm 6.3 clasp とは 6.4 @types とは 6.5 Prettierとは 6.6 ESLintとは 6.7 さいごに 第7章 ES6(ECMA2015) 7.1 ES6 とは 7.2 ES6で追加された文法一覧 7.3 さいごに 第8章 TypeScript 入門 8.1 TypeScript とは 8.2 TypeScriptのメインの型 8.3 関数の型定義 8.4 さいごに 第9章 TypeScriptでコードを書いてみよう 9.1 FSを取得する 9.2 変更した部分 9.3 TypeScriptをトランスパイルした結果 9.4 さいごに",
            "image": "http://books.google.com/books/content?id=ZnXRDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2020-02-28T00:00:00.000Z"
        },
        {
            "content_html": "本書はレガシーなフロントエンドコードを安全かつ確実にモダンに改善していくためのノウハウをまとめた一冊です。筆者が経験したフロントエンドの改善経験をベースに、実践的で現場で使える内容になっています。また、jQueryで書かれたレガシーコードにVue.js/TypeScript/Jestなどを段階的に導入する流れを各章毎に「実践編」として掲載しており、実際に手を動かしながら学べます。改善のための考え方や手法を知りたい方はもちろん、モダンなアーキテクチャーそのものを学びたい方にも最適の一冊です。 【目次】 第1章 改善の前に 第2章 レガシーコードを理解する 第3章 パッケージ管理 第4章 テストコードを用意する 第5章 ESLint/Prettier 第6章 TypeScript 第7章 モジュール分割 第8章 Vue.js（セットアップ） 第9章 Vue.js（移行の予備知識） 第10章 Vue.js（移行編） 第11章 リリースまでを安全に 第12章 改善できた、次はどうする？<br><blockquote>ESLintとTSLint <b>TypeScript</b>でLintによるコード検査を行う場合、<b>TypeScript</b> <br>\nESLintを利用します。・https://github.com/<b>typescript</b>-eslint/<b>typescript</b>-eslint <br>\n<b>TypeScript</b> ESLintは、ESLintを拡張する形で動作します。なお、Webなどで<br>\n調べる&nbsp;...</blockquote>",
            "url": "http://books.google.com/books?id=8gC8DwAAQBAJ&pg=PT79&dq=TypeScript&hl=&cd=2&source=gbs_api",
            "title": "迷わない！困らない！レガシーフロントエンド安全改善ガイド",
            "summary": "本書はレガシーなフロントエンドコードを安全かつ確実にモダンに改善していくためのノウハウをまとめた一冊です。筆者が経験したフロントエンドの改善経験をベースに、実践的で現場で使える内容になっています。また、jQueryで書かれたレガシーコードにVue.js/TypeScript/Jestなどを段階的に導入する流れを各章毎に「実践編」として掲載しており、実際に手を動かしながら学べます。改善のための考え方や手法を知りたい方はもちろん、モダンなアーキテクチャーそのものを学びたい方にも最適の一冊です。 【目次】 第1章 改善の前に 第2章 レガシーコードを理解する 第3章 パッケージ管理 第4章 テストコードを用意する 第5章 ESLint/Prettier 第6章 TypeScript 第7章 モジュール分割 第8章 Vue.js（セットアップ） 第9章 Vue.js（移行の予備知識） 第10章 Vue.js（移行編） 第11章 リリースまでを安全に 第12章 改善できた、次はどうする？",
            "image": "http://books.google.com/books/content?id=8gC8DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-11-08T00:00:00.000Z"
        },
        {
            "content_html": "これから始めて、JavaScriptもVue.jsもTypeScriptも理解しよう!<br><blockquote>これから始めて、JavaScriptもVue.jsもTypeScriptも理解しよう!</blockquote>",
            "url": "http://books.google.com/books?id=hfuAzQEACAAJ&dq=TypeScript&hl=&cd=3&source=gbs_api",
            "title": "これからはじめる人のJavaScript/Vue.jsの教科書",
            "summary": "これから始めて、JavaScriptもVue.jsもTypeScriptも理解しよう!",
            "image": "http://books.google.com/books/content?id=hfuAzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-04-01T00:00:00.000Z"
        },
        {
            "content_html": "意外と知らない基本機能からカスタマイズまで。TypeScript/Go/Pythonでの実践的な活用事例。拡張機能の開発、そして次世代プロトコル「LSP」。<br><blockquote>意外と知らない基本機能からカスタマイズまで。TypeScript/Go/Pythonでの実践的な活用事例。拡張機能の開発、そして次世代プロトコル「LSP」。</blockquote>",
            "url": "http://books.google.com/books?id=AaxUzQEACAAJ&dq=TypeScript&hl=&cd=4&source=gbs_api",
            "title": "Visual Studio Code実践ガイド",
            "summary": "意外と知らない基本機能からカスタマイズまで。TypeScript/Go/Pythonでの実践的な活用事例。拡張機能の開発、そして次世代プロトコル「LSP」。",
            "image": "http://books.google.com/books/content?id=AaxUzQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2020-02-01T00:00:00.000Z"
        },
        {
            "content_html": "本格的なスマホゲームをHTML5&JavaScriptで開発するためのノウハウを網羅した1冊<br><blockquote>本格的なスマホゲームをHTML5&amp;JavaScriptで開発するためのノウハウを網羅した1冊</blockquote>",
            "url": "http://books.google.com/books?id=B57CyQEACAAJ&dq=TypeScript&hl=&cd=5&source=gbs_api",
            "title": "HTML5ゲーム開発の教科書",
            "summary": "本格的なスマホゲームをHTML5&JavaScriptで開発するためのノウハウを網羅した1冊",
            "image": "http://books.google.com/books/content?id=B57CyQEACAAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2019-09-01T00:00:00.000Z"
        },
        {
            "content_html": "※この商品はタブレットなど大きいディスプレイを備えた端末で読むことに適しています。また、文字だけを拡大することや、文字列のハイライト、検索、辞書の参照、引用などの機能が使用できません。 本書は、TypeScriptの「型システム」に関する知識を体系的に学ぶための一冊です。TypeScriptやJavaScriptで、ある程度のアプリケーションを作った経験がある人を対象としているため、アプリケーション構築に必要なノウハウなどは提供していません。TypeScriptの型システムにフォーカスし、その基礎からフレームワークと連携した活用方法まで、より深く解説しています。 本書を読めば「TypeScriptは、スピーディーに品質の高いサービスを開発する上では欠かせない最高のパートナー」だということがわかるはずです。よいライブラリを使えば自動的によいアプリケーションが作れるわけではないように、型定義も個人の力量とアイディアが重要です。本書は、そういった「型定義」のスキルアップを目指すには最適の一冊です。",
            "url": "http://books.google.com/books?id=U4O3DwAAQBAJ&pg=PP1&dq=TypeScript&hl=&cd=6&source=gbs_api",
            "title": "実践TypeScript",
            "summary": "※この商品はタブレットなど大きいディスプレイを備えた端末で読むことに適しています。また、文字だけを拡大することや、文字列のハイライト、検索、辞書の参照、引用などの機能が使用できません。 本書は、TypeScriptの「型システム」に関する知識を体系的に学ぶための一冊です。TypeScriptやJavaScriptで、ある程度のアプリケーションを作った経験がある人を対象としているため、アプリケーション構築に必要なノウハウなどは提供していません。TypeScriptの型システムにフォーカスし、その基礎からフレームワークと連携した活用方法まで、より深く解説しています。 本書を読めば「TypeScriptは、スピーディーに品質の高いサービスを開発する上では欠かせない最高のパートナー」だということがわかるはずです。よいライブラリを使えば自動的によいアプリケーションが作れるわけではないように、型定義も個人の力量とアイディアが重要です。本書は、そういった「型定義」のスキルアップを目指すには最適の一冊です。",
            "image": "http://books.google.com/books/content?id=U4O3DwAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2019-06-26T00:00:00.000Z"
        },
        {
            "content_html": "【JavaScript初心者でもできる！Netlifyで作るサーバーレスサービス】 本書はJavaScriptやサーバーレスの初心者に向けた入門書です。処理内容だけを書くことでサーバーレス開発ができるFaaSのひとつ「Netlify」を利用しつつ、Functionsの利用方法、LINE BotやSlack Appの開発方法を取り上げつつ、FaaSを活用した開発を学習し、そのメリットが実感できる内容となっています。 【目次】 第1章 Netlify入門 1.1 はじめてのNetlify 1.2 Netlifyとは？ 1.3 サーバーレスアプリケーションとは 第2章 Netlify Functions入門 2.1 FaaSとは 2.2 Functionsにハローワールド 2.3 netlify-lambdaを使った関数 2.4 Netlify Functionsの用途 2.5 Netlify FunctionsとAWS Lambda 第3章 LINE Bot開発 3.1 LINE Botの仕組み 3.2 Developer登録とチャネル登録 3.3 Webhookを受け取る 3.4 Reply APIでメッセージに返信する 3.5 LINE Bot開発実践 第4章 Slack App開発 4.1 事前準備 4.2 メッセージのフォーマット 4.3 Slash Commands 4.4 Events APIの利用 4.5 Web APIの利用 第5章 この本の後に取り組むべきこと 5.1 Netlifyでのサーバーレス開発 5.2 Netlify以外のサーバーレス開発 付録A Functionsの便利イディオム A.1 event引数の中身 A.2 逆引きシチュエーション 付録B TypeScript対応 B.1 ボイラープレートの紹介<br><blockquote>【JavaScript初心者でもできる！Netlifyで作るサーバーレスサービス】 本書はJavaScriptやサーバーレスの初心者に向けた入門書です。処理内容だけを書くことでサーバーレス開発がで ...</blockquote>",
            "url": "http://books.google.com/books?id=T2mEDwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=7&source=gbs_api",
            "title": "Netlifyで始めるサーバーレス開発",
            "summary": "【JavaScript初心者でもできる！Netlifyで作るサーバーレスサービス】 本書はJavaScriptやサーバーレスの初心者に向けた入門書です。処理内容だけを書くことでサーバーレス開発ができるFaaSのひとつ「Netlify」を利用しつつ、Functionsの利用方法、LINE BotやSlack Appの開発方法を取り上げつつ、FaaSを活用した開発を学習し、そのメリットが実感できる内容となっています。 【目次】 第1章 Netlify入門 1.1 はじめてのNetlify 1.2 Netlifyとは？ 1.3 サーバーレスアプリケーションとは 第2章 Netlify Functions入門 2.1 FaaSとは 2.2 Functionsにハローワールド 2.3 netlify-lambdaを使った関数 2.4 Netlify Functionsの用途 2.5 Netlify FunctionsとAWS Lambda 第3章 LINE Bot開発 3.1 LINE Botの仕組み 3.2 Developer登録とチャネル登録 3.3 Webhookを受け取る 3.4 Reply APIでメッセージに返信する 3.5 LINE Bot開発実践 第4章 Slack App開発 4.1 事前準備 4.2 メッセージのフォーマット 4.3 Slash Commands 4.4 Events APIの利用 4.5 Web APIの利用 第5章 この本の後に取り組むべきこと 5.1 Netlifyでのサーバーレス開発 5.2 Netlify以外のサーバーレス開発 付録A Functionsの便利イディオム A.1 event引数の中身 A.2 逆引きシチュエーション 付録B TypeScript対応 B.1 ボイラープレートの紹介",
            "image": "http://books.google.com/books/content?id=T2mEDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-01-25T00:00:00.000Z"
        },
        {
            "content_html": "【IonicとFirebaseでWebアプリを作る入門書！】 AngularをベースとしたHTML5アプリケーション開発フレームワークIonicとFirebaseのパワーを借りて、HTML/CSS/JavaScriptを使ってチュートリアル形式にアプリケーションを作って遊べる入門書です。HTMLとCSS、JavaScriptの基本的な構文が分かれば、本の通りにすすめるといつのまにかアプリが完成します。普段はコーディングをしているけど、ちょっとアプリ開発もしてみたいと思っている方や、JavaScriptの入門書を読んでみたけど、次は何か１つ作ってみたいと思っている方に最適な１冊です。 〈本書の対象読者〉 ・HTML／CSSは分かる ・JavaScriptの基本的な構文は一応分かる（ES2015以降の書き方がわかればなおよい） ・ターミナルの基本的な操作ができる 【目次】 第1章 Ionicって一体……？ Ionic（アイオニック）とは/CordovaとCapacitorをざっくり知ろう 他 第2章 開発環境を設定しよう Node.jsのインストール/Ionic CLIとCordovaのインストール/gitのインストール 第3章 Ionicを動かしてみよう はじめてのIonicプロジェクト！/Ionicアプリケーションを動かしてみよう 他 第4章 ここからが本番！Ionicアプリケーションを作ろう どんなアプリを作るんでしょうか/どんな感じで作っていくの？ 他 第5章 ひとまずメッセージボードを作ってみよう！ メッセージボード用にIonicプロジェクトを作ろう/見た目から作っていきます/入力した投稿も表示させてみよう 他 第6章 Firebaseでユーザー認証しよう Firebaseって一体なんなの？/Firebaseのセットアップをしよう/FirebaseのAuthenticationを設定しよう 他 第7章 Firebaseでデータを永続化しよう Firestoreを使う準備をしていこう/メッセージボードのデータをFirestoreに保存しよう 第8章 メッセージボードの機能を改善しよう！ いつ投稿されたのかをちゃんと表示しよう/ログアウトも実装しておこう/ログイン認証を無視したアクセスを断ち切ろう！ 他 第9章 アプリケーションついに完成 iOSシミュレーターで動かしてみよう/アプリケーションをWeb用にデプロイしてみよう<br><blockquote>【IonicとFirebaseでWebアプリを作る入門書！】 AngularをベースとしたHTML5アプリケーション開発フレームワークIonicとFirebaseのパワーを借りて、HTML/CSS/JavaScriptを使ってチュートリアル ...</blockquote>",
            "url": "http://books.google.com/books?id=WgGDDwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=8&source=gbs_api",
            "title": "初心者でも大丈夫!! IonicとFirebaseでゼロからはじめるアプリ開発",
            "summary": "【IonicとFirebaseでWebアプリを作る入門書！】 AngularをベースとしたHTML5アプリケーション開発フレームワークIonicとFirebaseのパワーを借りて、HTML/CSS/JavaScriptを使ってチュートリアル形式にアプリケーションを作って遊べる入門書です。HTMLとCSS、JavaScriptの基本的な構文が分かれば、本の通りにすすめるといつのまにかアプリが完成します。普段はコーディングをしているけど、ちょっとアプリ開発もしてみたいと思っている方や、JavaScriptの入門書を読んでみたけど、次は何か１つ作ってみたいと思っている方に最適な１冊です。 〈本書の対象読者〉 ・HTML／CSSは分かる ・JavaScriptの基本的な構文は一応分かる（ES2015以降の書き方がわかればなおよい） ・ターミナルの基本的な操作ができる 【目次】 第1章 Ionicって一体……？ Ionic（アイオニック）とは/CordovaとCapacitorをざっくり知ろう 他 第2章 開発環境を設定しよう Node.jsのインストール/Ionic CLIとCordovaのインストール/gitのインストール 第3章 Ionicを動かしてみよう はじめてのIonicプロジェクト！/Ionicアプリケーションを動かしてみよう 他 第4章 ここからが本番！Ionicアプリケーションを作ろう どんなアプリを作るんでしょうか/どんな感じで作っていくの？ 他 第5章 ひとまずメッセージボードを作ってみよう！ メッセージボード用にIonicプロジェクトを作ろう/見た目から作っていきます/入力した投稿も表示させてみよう 他 第6章 Firebaseでユーザー認証しよう Firebaseって一体なんなの？/Firebaseのセットアップをしよう/FirebaseのAuthenticationを設定しよう 他 第7章 Firebaseでデータを永続化しよう Firestoreを使う準備をしていこう/メッセージボードのデータをFirestoreに保存しよう 第8章 メッセージボードの機能を改善しよう！ いつ投稿されたのかをちゃんと表示しよう/ログアウトも実装しておこう/ログイン認証を無視したアクセスを断ち切ろう！ 他 第9章 アプリケーションついに完成 iOSシミュレーターで動かしてみよう/アプリケーションをWeb用にデプロイしてみよう",
            "image": "http://books.google.com/books/content?id=WgGDDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2019-01-18T00:00:00.000Z"
        },
        {
            "content_html": "※この商品はタブレットなど大きいディスプレイを備えた端末で読むことに適しています。また、文字だけを拡大することや、文字列のハイライト、検索、辞書の参照、引用などの機能が使用できません。 Angularは、Googleが中心となって開発する、PWA開発のための強力なフロントエンドフレームワークです。数年前に世に出て以後、猛烈な勢いで進化し、プロの間で高評価を得ています。本書は、Angularを使ってPWA（プログレッシブWebアプリ）開発の基礎と、サービス、通信、ナビゲーションなどの機能を学ぶ入門書です。Angularの基本は意外と簡単です。あなたも最初の一歩を踏み出しましょう。初心者も安心のTypeScript超入門を収録！",
            "url": "http://books.google.com/books?id=HNuoDwAAQBAJ&pg=PP1&dq=TypeScript&hl=&cd=9&source=gbs_api",
            "title": "Angular超入門",
            "summary": "※この商品はタブレットなど大きいディスプレイを備えた端末で読むことに適しています。また、文字だけを拡大することや、文字列のハイライト、検索、辞書の参照、引用などの機能が使用できません。 Angularは、Googleが中心となって開発する、PWA開発のための強力なフロントエンドフレームワークです。数年前に世に出て以後、猛烈な勢いで進化し、プロの間で高評価を得ています。本書は、Angularを使ってPWA（プログレッシブWebアプリ）開発の基礎と、サービス、通信、ナビゲーションなどの機能を学ぶ入門書です。Angularの基本は意外と簡単です。あなたも最初の一歩を踏み出しましょう。初心者も安心のTypeScript超入門を収録！",
            "image": "http://books.google.com/books/content?id=HNuoDwAAQBAJ&printsec=frontcover&img=1&zoom=1&source=gbs_api",
            "date_modified": "2019-06-25T00:00:00.000Z"
        },
        {
            "content_html": "【Visual Studio Code解説の言語と設定ファイル解説！】 本書は、プログラマ向けエディター「Visual Studio Code（VSCode）」のデバッグ機能解説書です。各種言語でのデバッグを行う上で必要となる設定ファイルの内容、それぞれの言語でのデバッグ機能を比較評価しています。（本書は、次世代出版メソッド「NextPublishing」を使用し、出版されています。） 〈本書の対象読者〉 VSCodeのデバッグ機能の仕組みを知りたいプログラマ VSCodeで各種言語でのプログラミングを行うプログラマ 【目次】 第1章 デバッグ機能とは 1.1 VSCode（Visual Studio Code）について 1.2 デバッグ機能とは 1.3 デバッガを実現するためには 1.4 GDB（GNUデバッガ） 1.5 VSCodeのデバッグ機能のアーキテクチャ 第2章 Debugger UI 2.1 画面構成 2.2 Debugメニュー 2.3 ブレークポイント 2.4 ステップ実行 2.5 データインスペクション 2.6 コールスタック 2.7 デバッグコンソール 2.8 読み込み済みのスクリプト 2.9 コードレンズ 2.10 launch.json 2.11 マルチターゲットデバッグ 2.12 デバッグ実行における標準キーボードショートカット 第3章 デバッグフレームワーク 3.1 package.jsonの実装 3.2 DebugSessionの実装 3.3 初期化要求の実装 3.4 ブレークポイント要求の実装 3.5 停止イベントの通知 3.6 スタックトレース要求の実装 3.7 変数要求の実装 3.8 ステップ実行の実装 3.9 デバッグコンソールの実装 3.10 デバッグプロトコルを総覧して 第4章 各言語のデバッグの機能調査 第5章 Go 第6章 Google App Engine Go 第7章 Node.js: JavaScript and TypeScript for Server-Side 第8章 Chrome: JavaScript and TypeScript for Web Front-End 第9章 React: JavaScript and TypeScript for SPA 第10章 Electron: JavaScript and TypeScript for PC Appliction 第11章 C/C++ 第12章 Python 第13章 Ruby 第14章 Ruby on Rails 第15章 PHP 第16章 Java 第17章 C# (.NET Core) 第18章 Bash: シェルスクリプト<br><blockquote>【Visual Studio Code解説の言語と設定ファイル解説！】 本書は、プログラマ向けエディター「Visual Studio ...</blockquote>",
            "url": "http://books.google.com/books?id=sPd7DwAAQBAJ&printsec=frontcover&dq=TypeScript&hl=&cd=10&source=gbs_api",
            "title": "Visual Studio Codeデバッグ技術",
            "summary": "【Visual Studio Code解説の言語と設定ファイル解説！】 本書は、プログラマ向けエディター「Visual Studio Code（VSCode）」のデバッグ機能解説書です。各種言語でのデバッグを行う上で必要となる設定ファイルの内容、それぞれの言語でのデバッグ機能を比較評価しています。（本書は、次世代出版メソッド「NextPublishing」を使用し、出版されています。） 〈本書の対象読者〉 VSCodeのデバッグ機能の仕組みを知りたいプログラマ VSCodeで各種言語でのプログラミングを行うプログラマ 【目次】 第1章 デバッグ機能とは 1.1 VSCode（Visual Studio Code）について 1.2 デバッグ機能とは 1.3 デバッガを実現するためには 1.4 GDB（GNUデバッガ） 1.5 VSCodeのデバッグ機能のアーキテクチャ 第2章 Debugger UI 2.1 画面構成 2.2 Debugメニュー 2.3 ブレークポイント 2.4 ステップ実行 2.5 データインスペクション 2.6 コールスタック 2.7 デバッグコンソール 2.8 読み込み済みのスクリプト 2.9 コードレンズ 2.10 launch.json 2.11 マルチターゲットデバッグ 2.12 デバッグ実行における標準キーボードショートカット 第3章 デバッグフレームワーク 3.1 package.jsonの実装 3.2 DebugSessionの実装 3.3 初期化要求の実装 3.4 ブレークポイント要求の実装 3.5 停止イベントの通知 3.6 スタックトレース要求の実装 3.7 変数要求の実装 3.8 ステップ実行の実装 3.9 デバッグコンソールの実装 3.10 デバッグプロトコルを総覧して 第4章 各言語のデバッグの機能調査 第5章 Go 第6章 Google App Engine Go 第7章 Node.js: JavaScript and TypeScript for Server-Side 第8章 Chrome: JavaScript and TypeScript for Web Front-End 第9章 React: JavaScript and TypeScript for SPA 第10章 Electron: JavaScript and TypeScript for PC Appliction 第11章 C/C++ 第12章 Python 第13章 Ruby 第14章 Ruby on Rails 第15章 PHP 第16章 Java 第17章 C# (.NET Core) 第18章 Bash: シェルスクリプト",
            "image": "http://books.google.com/books/content?id=sPd7DwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api",
            "date_modified": "2018-12-07T00:00:00.000Z"
        }
    ]
}